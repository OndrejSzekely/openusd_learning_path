#usda 1.0
(
    defaultPrim = "World"
    endTimeCode = 100
    metersPerUnit = 0.01
    startTimeCode = 0
    timeCodesPerSecond = 24
    upAxis = "Y"
)

def Xform "World" (
    kind = "assembly"
)
{
    def Scope "Geometry"
    {
        def Xform "roads"
        {
            float3 xformOp:rotateXYZ = (0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            double3 xformOp:translate = (0, 0, 0)
            float3 xformOp:translate:pivot = (300, 4, -100)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

            def Mesh "road_crossroad_03" (
                prepend specializes = </_osm_street_data>
            )
            {
                float3[] extent = [(-50, 0, -50), (50, 2, 50)]
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [2, 1, 0, 1, 2, 3, 0, 1, 4, 1, 3, 5, 6, 0, 4, 7, 0, 6, 0, 7, 8, 6, 4, 9, 6, 9, 10, 8, 7, 11, 14, 13, 12, 13, 14, 15, 12, 13, 16, 13, 15, 17, 18, 12, 16, 19, 12, 18, 12, 19, 20, 18, 16, 21, 18, 21, 22, 20, 19, 23, 26, 25, 24, 25, 26, 27, 25, 27, 28, 28, 27, 29, 29, 27, 30, 30, 27, 31, 31, 27, 32, 32, 27, 33, 33, 27, 34, 35, 24, 25, 38, 37, 36, 37, 38, 39, 37, 39, 40, 40, 39, 41, 40, 41, 42, 40, 42, 43, 40, 43, 44, 40, 44, 45, 40, 45, 46, 40, 46, 47, 50, 49, 48, 49, 50, 51, 49, 51, 52, 51, 53, 52, 54, 53, 51, 55, 53, 54, 56, 55, 54, 55, 56, 57, 53, 55, 58, 52, 53, 59, 59, 53, 60, 59, 60, 61, 61, 60, 62, 61, 62, 63, 63, 62, 64, 64, 62, 65, 65, 62, 66, 66, 62, 67, 65, 66, 68, 65, 68, 69, 70, 69, 68, 69, 70, 71, 65, 69, 72, 73, 65, 72, 65, 73, 74, 75, 52, 59, 214, 204, 205, 204, 214, 216, 216, 214, 217, 218, 204, 216, 219, 208, 206, 208, 219, 220, 208, 220, 210, 210, 220, 221, 189, 222, 188, 222, 189, 223, 223, 189, 224, 224, 189, 192, 198, 226, 225, 195, 226, 198, 197, 226, 195, 226, 197, 227, 370, 369, 368, 369, 370, 371, 374, 373, 372, 373, 374, 375, 378, 377, 376, 377, 378, 379, 382, 381, 380, 381, 382, 383, 386, 385, 384, 385, 386, 387, 390, 389, 388, 389, 390, 391, 394, 393, 392, 393, 394, 395, 398, 397, 396, 397, 398, 399, 402, 401, 400, 401, 402, 403, 406, 405, 404, 405, 406, 407, 410, 409, 408, 409, 410, 411, 414, 413, 412, 413, 414, 415, 418, 417, 416, 417, 418, 419, 481, 495, 479, 495, 481, 483, 491, 492, 489, 492, 491, 493, 487, 480, 473, 480, 487, 482, 474, 470, 476, 470, 474, 471]
                normal3f[] normals = [(0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0)] (
                    interpolation = "faceVarying"
                )
                point3f[] points = [(50, 0, -50), (-40, 1, -50), (-50, 0, -50), (-50, 2, -50), (-30.000002, 1, -50), (-40, 2, -50), (30.000002, 1, -50), (40, 1, -50), (50, 2, -50), (-1.0000007, 1, -50), (0.9999992, 1, -50), (40, 2, -50), (-50, 0, 50), (40, 1, 50), (50, 0, 50), (50, 2, 50), (30.000002, 1, 50), (40, 2, 50), (-30.000002, 1, 50), (-40, 1, 50), (-50, 2, 50), (1.0000005, 1, 50), (-0.9999995, 1, 50), (-40, 2, 50), (50, 2, 50), (50, 1, 40), (50, 0, 50), (50, 0, -50), (50, 1, 30.000002), (50, 1, 0.99999934), (50, 1, -1.0000007), (50, 1, -30.000002), (50, 1, -40), (50, 2, -40), (50, 2, -50), (50, 2, 40), (-50, 2, 50), (-50, 0, 50), (-50, 2, 40), (-50, 1, 40), (-50, 0, -50), (-50, 1, 30.000002), (-50, 1, 0.99999934), (-50, 1, -1.0000007), (-50, 1, -30.000002), (-50, 1, -40), (-50, 2, -40), (-50, 2, -50), (-50, 1, -30.000002), (-30.000002, 1, -30.000002), (-50, 1, -1.0000007), (-30.000002, 1, -1.0000007), (-30.000002, 1, -50), (-0.9999995, 1, 50), (-30.000002, 1, 0.99999934), (-30.000002, 1, 30.000002), (-50, 1, 0.99999934), (-50, 1, 30.000002), (-30.000002, 1, 50), (-1.0000007, 1, -30.000002), (-0.9999995, 1, 30.000002), (0.9999992, 1, -30.000002), (1.0000005, 1, 30.000002), (0.9999992, 1, -50), (30.000002, 1, -50), (30.000002, 1, -30.000002), (30.000002, 1, 50), (1.0000005, 1, 50), (30.000002, 1, 30.000002), (30.000002, 1, 0.99999934), (50, 1, 30.000002), (50, 1, 0.99999934), (30.000002, 1, -1.0000007), (50, 1, -1.0000007), (50, 1, -30.000002), (-1.0000007, 1, -50), (40, 1, -40), (50, 1, -40), (40, 1, -50), (40, 1, 50), (40, 1, 40), (50, 1, 40), (-50, 1, -40), (-40, 1, -40), (-40, 1, -50), (-40, 1, 50), (-40, 1, 40), (-50, 1, 40), (-50, 0, 50), (50, 0, 50), (-50, 0, -50), (50, 0, -50), (50, 1, -40), (40, 1, -40), (50, 2, -40), (40, 2, -40), (40, 2, -40), (40, 1, -40), (40, 2, -50), (40, 1, -50), (40, 2, -40), (40, 2, -50), (50, 2, -40), (50, 2, -50), (-50, 2, -40), (-50, 2, -50), (-40, 2, -40), (-40, 2, -50), (-40, 1, -40), (-50, 1, -40), (-40, 2, -40), (-50, 2, -40), (-40, 1, -40), (-40, 2, -40), (-40, 1, -50), (-40, 2, -50), (40, 2, 50), (40, 2, 40), (50, 2, 50), (50, 2, 40), (50, 1, 40), (50, 2, 40), (40, 1, 40), (40, 2, 40), (40, 2, 50), (40, 1, 50), (40, 2, 40), (40, 1, 40), (-50, 2, 50), (-50, 2, 40), (-40, 2, 50), (-40, 2, 40), (-40, 2, 50), (-40, 2, 40), (-40, 1, 50), (-40, 1, 40), (-50, 1, 40), (-40, 1, 40), (-50, 2, 40), (-40, 2, 40), (50, 0, -50), (-40, 1, -50), (-50, 0, -50), (-50, 2, -50), (-30.000002, 1, -50), (-40, 2, -50), (30.000002, 1, -50), (40, 1, -50), (50, 2, -50), (-1.0000007, 1, -50), (0.9999992, 1, -50), (40, 2, -50), (-50, 0, 50), (40, 1, 50), (50, 0, 50), (50, 2, 50), (30.000002, 1, 50), (40, 2, 50), (-30.000002, 1, 50), (-40, 1, 50), (-50, 2, 50), (1.0000005, 1, 50), (-0.9999995, 1, 50), (-40, 2, 50), (50, 2, 50), (50, 1, 40), (50, 0, 50), (50, 0, -50), (50, 1, 30.000002), (50, 1, 0.99999934), (50, 1, -1.0000007), (50, 1, -30.000002), (50, 1, -40), (50, 2, -40), (50, 2, -50), (50, 2, 40), (-50, 2, 50), (-50, 0, 50), (-50, 2, 40), (-50, 1, 40), (-50, 0, -50), (-50, 1, 30.000002), (-50, 1, 0.99999934), (-50, 1, -1.0000007), (-50, 1, -30.000002), (-50, 1, -40), (-50, 2, -40), (-50, 2, -50), (-50, 1, -30.000002), (-30.000002, 1, -30.000002), (-50, 1, -1.0000007), (-30.000002, 1, -1.0000007), (-30.000002, 1, -50), (-0.9999995, 1, 50), (-30.000002, 1, 0.99999934), (-30.000002, 1, 30.000002), (-50, 1, 0.99999934), (-50, 1, 30.000002), (-30.000002, 1, 50), (-1.0000007, 1, -30.000002), (-0.9999995, 1, 30.000002), (0.9999992, 1, -30.000002), (1.0000005, 1, 30.000002), (0.9999992, 1, -50), (30.000002, 1, -50), (30.000002, 1, -30.000002), (30.000002, 1, 50), (1.0000005, 1, 50), (30.000002, 1, 30.000002), (30.000002, 1, 0.99999934), (50, 1, 30.000002), (50, 1, 0.99999934), (30.000002, 1, -1.0000007), (50, 1, -1.0000007), (50, 1, -30.000002), (-1.0000007, 1, -50), (40, 1, -40), (50, 1, -40), (40, 1, -50), (40, 1, 50), (40, 1, 40), (50, 1, 40), (-50, 1, -40), (-40, 1, -40), (-40, 1, -50), (-40, 1, 50), (-40, 1, 40), (-50, 1, 40), (-50, 0, 50), (50, 0, 50), (-50, 0, -50), (50, 0, -50), (50, 1, -40), (40, 1, -40), (50, 2, -40), (40, 2, -40), (40, 2, -40), (40, 1, -40), (40, 2, -50), (40, 1, -50), (40, 2, -40), (40, 2, -50), (50, 2, -40), (50, 2, -50), (-50, 2, -40), (-50, 2, -50), (-40, 2, -40), (-40, 2, -50), (-40, 1, -40), (-50, 1, -40), (-40, 2, -40), (-50, 2, -40), (-40, 1, -40), (-40, 2, -40), (-40, 1, -50), (-40, 2, -50), (40, 2, 50), (40, 2, 40), (50, 2, 50), (50, 2, 40), (50, 1, 40), (50, 2, 40), (40, 1, 40), (40, 2, 40), (40, 2, 50), (40, 1, 50), (40, 2, 40), (40, 1, 40), (-50, 2, 50), (-50, 2, 40), (-40, 2, 50), (-40, 2, 40), (-40, 2, 50), (-40, 2, 40), (-40, 1, 50), (-40, 1, 40), (-50, 1, 40), (-40, 1, 40), (-50, 2, 40), (-40, 2, 40), (50, 0, -50), (-40, 1, -50), (-50, 0, -50), (-50, 2, -50), (-30.000002, 1, -50), (-40, 2, -50), (30.000002, 1, -50), (40, 1, -50), (50, 2, -50), (-1.0000007, 1, -50), (0.9999992, 1, -50), (40, 2, -50), (-50, 0, 50), (40, 1, 50), (50, 0, 50), (50, 2, 50), (30.000002, 1, 50), (40, 2, 50), (-30.000002, 1, 50), (-40, 1, 50), (-50, 2, 50), (1.0000005, 1, 50), (-0.9999995, 1, 50), (-40, 2, 50), (50, 2, 50), (50, 1, 40), (50, 0, 50), (50, 0, -50), (50, 1, 30.000002), (50, 1, 0.99999934), (50, 1, -1.0000007), (50, 1, -30.000002), (50, 1, -40), (50, 2, -40), (50, 2, -50), (50, 2, 40), (-50, 2, 50), (-50, 0, 50), (-50, 2, 40), (-50, 1, 40), (-50, 0, -50), (-50, 1, 30.000002), (-50, 1, 0.99999934), (-50, 1, -1.0000007), (-50, 1, -30.000002), (-50, 1, -40), (-50, 2, -40), (-50, 2, -50), (-50, 1, -30.000002), (-30.000002, 1, -30.000002), (-50, 1, -1.0000007), (-30.000002, 1, -1.0000007), (-30.000002, 1, -50), (-0.9999995, 1, 50), (-30.000002, 1, 0.99999934), (-30.000002, 1, 30.000002), (-50, 1, 0.99999934), (-50, 1, 30.000002), (-30.000002, 1, 50), (-1.0000007, 1, -30.000002), (-0.9999995, 1, 30.000002), (0.9999992, 1, -30.000002), (1.0000005, 1, 30.000002), (0.9999992, 1, -50), (30.000002, 1, -50), (30.000002, 1, -30.000002), (30.000002, 1, 50), (1.0000005, 1, 50), (30.000002, 1, 30.000002), (30.000002, 1, 0.99999934), (50, 1, 30.000002), (50, 1, 0.99999934), (30.000002, 1, -1.0000007), (50, 1, -1.0000007), (50, 1, -30.000002), (-1.0000007, 1, -50), (40, 1, -40), (50, 1, -40), (40, 1, -50), (40, 1, 50), (40, 1, 40), (50, 1, 40), (-50, 1, -40), (-40, 1, -40), (-40, 1, -50), (-40, 1, 50), (-40, 1, 40), (-50, 1, 40), (-50, 0, 50), (50, 0, 50), (-50, 0, -50), (50, 0, -50), (50, 1, -40), (40, 1, -40), (50, 2, -40), (40, 2, -40), (40, 2, -40), (40, 1, -40), (40, 2, -50), (40, 1, -50), (40, 2, -40), (40, 2, -50), (50, 2, -40), (50, 2, -50), (-50, 2, -40), (-50, 2, -50), (-40, 2, -40), (-40, 2, -50), (-40, 1, -40), (-50, 1, -40), (-40, 2, -40), (-50, 2, -40), (-40, 1, -40), (-40, 2, -40), (-40, 1, -50), (-40, 2, -50), (40, 2, 50), (40, 2, 40), (50, 2, 50), (50, 2, 40), (50, 1, 40), (50, 2, 40), (40, 1, 40), (40, 2, 40), (40, 2, 50), (40, 1, 50), (40, 2, 40), (40, 1, 40), (-50, 2, 50), (-50, 2, 40), (-40, 2, 50), (-40, 2, 40), (-40, 2, 50), (-40, 2, 40), (-40, 1, 50), (-40, 1, 40), (-50, 1, 40), (-40, 1, 40), (-50, 2, 40), (-40, 2, 40), (50, 0, -50), (-40, 1, -50), (-50, 0, -50), (-50, 2, -50), (-30.000002, 1, -50), (-40, 2, -50), (30.000002, 1, -50), (40, 1, -50), (50, 2, -50), (-1.0000007, 1, -50), (0.9999992, 1, -50), (40, 2, -50), (-50, 0, 50), (40, 1, 50), (50, 0, 50), (50, 2, 50), (30.000002, 1, 50), (40, 2, 50), (-30.000002, 1, 50), (-40, 1, 50), (-50, 2, 50), (1.0000005, 1, 50), (-0.9999995, 1, 50), (-40, 2, 50), (50, 2, 50), (50, 1, 40), (50, 0, 50), (50, 0, -50), (50, 1, 30.000002), (50, 1, 0.99999934), (50, 1, -1.0000007), (50, 1, -30.000002), (50, 1, -40), (50, 2, -40), (50, 2, -50), (50, 2, 40), (-50, 2, 50), (-50, 0, 50), (-50, 2, 40), (-50, 1, 40), (-50, 0, -50), (-50, 1, 30.000002), (-50, 1, 0.99999934), (-50, 1, -1.0000007), (-50, 1, -30.000002), (-50, 1, -40), (-50, 2, -40), (-50, 2, -50), (-50, 1, -30.000002), (-30.000002, 1, -30.000002), (-50, 1, -1.0000007), (-30.000002, 1, -1.0000007), (-30.000002, 1, -50), (-0.9999995, 1, 50), (-30.000002, 1, 0.99999934), (-30.000002, 1, 30.000002), (-50, 1, 0.99999934), (-50, 1, 30.000002), (-30.000002, 1, 50), (-1.0000007, 1, -30.000002), (-0.9999995, 1, 30.000002), (0.9999992, 1, -30.000002), (1.0000005, 1, 30.000002), (0.9999992, 1, -50), (30.000002, 1, -50), (30.000002, 1, -30.000002), (30.000002, 1, 50), (1.0000005, 1, 50), (30.000002, 1, 30.000002), (30.000002, 1, 0.99999934), (50, 1, 30.000002), (50, 1, 0.99999934), (30.000002, 1, -1.0000007), (50, 1, -1.0000007), (50, 1, -30.000002), (-1.0000007, 1, -50), (40, 1, -40), (50, 1, -40), (40, 1, -50), (40, 1, 50), (40, 1, 40), (50, 1, 40), (-50, 1, -40), (-40, 1, -40), (-40, 1, -50), (-40, 1, 50), (-40, 1, 40), (-50, 1, 40), (-50, 0, 50), (50, 0, 50), (-50, 0, -50), (50, 0, -50), (50, 1, -40), (40, 1, -40), (50, 2, -40), (40, 2, -40), (40, 2, -40), (40, 1, -40), (40, 2, -50), (40, 1, -50), (40, 2, -40), (40, 2, -50), (50, 2, -40), (50, 2, -50), (-50, 2, -40), (-50, 2, -50), (-40, 2, -40), (-40, 2, -50), (-40, 1, -40), (-50, 1, -40), (-40, 2, -40), (-50, 2, -40), (-40, 1, -40), (-40, 2, -40), (-40, 1, -50), (-40, 2, -50), (40, 2, 50), (40, 2, 40), (50, 2, 50), (50, 2, 40), (50, 1, 40), (50, 2, 40), (40, 1, 40), (40, 2, 40), (40, 2, 50), (40, 1, 50), (40, 2, 40), (40, 1, 40), (-50, 2, 50), (-50, 2, 40), (-40, 2, 50), (-40, 2, 40), (-40, 2, 50), (-40, 2, 40), (-40, 1, 50), (-40, 1, 40), (-50, 1, 40), (-40, 1, 40), (-50, 2, 40), (-40, 2, 40)]
                texCoord2f[] primvars:st = [(19.68504, -4.7683716e-7), (15.748032, 0.39370036), (-19.68504, -4.7683716e-7), (15.748032, 0.39370036), (19.68504, -4.7683716e-7), (19.68504, 0.78740114), (-19.68504, -4.7683716e-7), (15.748032, 0.39370036), (11.811024, 0.39370036), (15.748032, 0.39370036), (19.68504, 0.78740114), (15.748032, 0.78740114), (-11.811024, 0.39370036), (-19.68504, -4.7683716e-7), (11.811024, 0.39370036), (-15.748032, 0.39370036), (-19.68504, -4.7683716e-7), (-11.811024, 0.39370036), (-19.68504, -4.7683716e-7), (-15.748032, 0.39370036), (-19.68504, 0.78740114), (-11.811024, 0.39370036), (11.811024, 0.39370036), (0.39370137, 0.39370036), (-11.811024, 0.39370036), (0.39370137, 0.39370036), (-0.3937002, 0.39370036), (-19.68504, 0.78740114), (-15.748032, 0.39370036), (-15.748032, 0.78740114), (19.68504, 0), (15.748032, 0.39370078), (-19.68504, 0), (15.748032, 0.39370078), (19.68504, 0), (19.68504, 0.78740156), (-19.68504, 0), (15.748032, 0.39370078), (11.811024, 0.39370078), (15.748032, 0.39370078), (19.68504, 0.78740156), (15.748032, 0.78740156), (-11.811023, 0.39370078), (-19.68504, 0), (11.811024, 0.39370078), (-15.748031, 0.39370078), (-19.68504, 0), (-11.811023, 0.39370078), (-19.68504, 0), (-15.748031, 0.39370078), (-19.68504, 0.78740156), (-11.811023, 0.39370078), (11.811024, 0.39370078), (0.39370126, 0.39370078), (-11.811023, 0.39370078), (0.39370126, 0.39370078), (-0.39370033, 0.39370078), (-19.68504, 0.78740156), (-15.748031, 0.39370078), (-15.748031, 0.78740156), (-19.68504, 0), (-15.748032, 0.39370078), (-19.68504, 0.78740156), (-15.748032, 0.39370078), (-19.68504, 0), (19.68504, 0), (-15.748032, 0.39370078), (19.68504, 0), (-11.811024, 0.39370078), (-11.811024, 0.39370078), (19.68504, 0), (-0.3937002, 0.39370078), (-0.3937002, 0.39370078), (19.68504, 0), (0.39370137, 0.39370078), (0.39370137, 0.39370078), (19.68504, 0), (11.811024, 0.39370078), (11.811024, 0.39370078), (19.68504, 0), (15.748032, 0.39370078), (15.748032, 0.39370078), (19.68504, 0), (15.748032, 0.78740156), (15.748032, 0.78740156), (19.68504, 0), (19.68504, 0.78740156), (-15.748032, 0.78740156), (-19.68504, 0.78740156), (-15.748032, 0.39370078), (15.748032, 0.7874021), (19.68504, 5.364418e-7), (19.68504, 0.7874021), (19.68504, 5.364418e-7), (15.748032, 0.7874021), (15.748032, 0.39370131), (19.68504, 5.364418e-7), (15.748032, 0.39370131), (-19.68504, 5.364418e-7), (-19.68504, 5.364418e-7), (15.748032, 0.39370131), (11.811024, 0.39370131), (-19.68504, 5.364418e-7), (11.811024, 0.39370131), (0.39370078, 0.39370131), (-19.68504, 5.364418e-7), (0.39370078, 0.39370131), (-0.39370078, 0.39370131), (-19.68504, 5.364418e-7), (-0.39370078, 0.39370131), (-11.811024, 0.39370131), (-19.68504, 5.364418e-7), (-11.811024, 0.39370131), (-15.748032, 0.39370131), (-19.68504, 5.364418e-7), (-15.748032, 0.39370131), (-15.748032, 0.7874021), (-19.68504, 5.364418e-7), (-15.748032, 0.7874021), (-19.68504, 0.7874021), (-19.68504, 0.39370108), (-11.811024, 11.811024), (-19.68504, 11.811024), (-11.811024, 11.811024), (-19.68504, 0.39370108), (-11.811024, 0.39370108), (-11.811024, 11.811024), (-11.811024, 0.39370108), (-11.811024, 19.68504), (-11.811024, 0.39370108), (-0.3937006, -19.68504), (-11.811024, 19.68504), (-11.811024, -0.39370048), (-0.3937006, -19.68504), (-11.811024, 0.39370108), (-11.811024, -11.811024), (-0.3937006, -19.68504), (-11.811024, -0.39370048), (-19.68504, -0.39370048), (-11.811024, -11.811024), (-11.811024, -0.39370048), (-11.811024, -11.811024), (-19.68504, -0.39370048), (-19.68504, -11.811024), (-0.3937006, -19.68504), (-11.811024, -11.811024), (-11.811024, -19.68504), (-11.811024, 19.68504), (-0.3937006, -19.68504), (-0.39370108, 11.811024), (-0.39370108, 11.811024), (-0.3937006, -19.68504), (-0.3937006, -11.811024), (-0.39370108, 11.811024), (-0.3937006, -11.811024), (0.39370048, 11.811024), (0.39370048, 11.811024), (-0.3937006, -11.811024), (0.39370096, -11.811024), (0.39370048, 11.811024), (0.39370096, -11.811024), (0.39370048, 19.68504), (0.39370048, 19.68504), (0.39370096, -11.811024), (11.811024, 19.68504), (11.811024, 19.68504), (0.39370096, -11.811024), (11.811024, 11.811024), (11.811024, 11.811024), (0.39370096, -11.811024), (11.811024, -19.68504), (11.811024, -19.68504), (0.39370096, -11.811024), (0.39370096, -19.68504), (11.811024, 11.811024), (11.811024, -19.68504), (11.811024, -11.811024), (11.811024, 11.811024), (11.811024, -11.811024), (11.811024, -0.39370048), (19.68504, -11.811024), (11.811024, -0.39370048), (11.811024, -11.811024), (11.811024, -0.39370048), (19.68504, -11.811024), (19.68504, -0.39370048), (11.811024, 11.811024), (11.811024, -0.39370048), (11.811024, 0.39370108), (19.68504, 0.39370108), (11.811024, 11.811024), (11.811024, 0.39370108), (11.811024, 11.811024), (19.68504, 0.39370108), (19.68504, 11.811024), (-0.39370108, 19.68504), (-11.811024, 19.68504), (-0.39370108, 11.811024), (19.68504, 11.811024), (11.811024, 19.68504), (11.811024, 11.811024), (11.811024, 19.68504), (19.68504, 11.811024), (15.748032, 15.748032), (15.748032, 15.748032), (19.68504, 11.811024), (19.68504, 15.748032), (15.748032, 19.68504), (11.811024, 19.68504), (15.748032, 15.748032), (15.748032, -19.68504), (11.811024, -11.811024), (11.811024, -19.68504), (11.811024, -11.811024), (15.748032, -19.68504), (15.748032, -15.748032), (11.811024, -11.811024), (15.748032, -15.748032), (19.68504, -11.811024), (19.68504, -11.811024), (15.748032, -15.748032), (19.68504, -15.748032), (-11.811024, 11.811024), (-19.68504, 15.748032), (-19.68504, 11.811024), (-19.68504, 15.748032), (-11.811024, 11.811024), (-15.748032, 15.748032), (-15.748032, 15.748032), (-11.811024, 11.811024), (-15.748032, 19.68504), (-15.748032, 19.68504), (-11.811024, 11.811024), (-11.811024, 19.68504), (-11.811024, -19.68504), (-15.748032, -15.748032), (-15.748032, -19.68504), (-11.811024, -11.811024), (-15.748032, -15.748032), (-11.811024, -19.68504), (-19.68504, -11.811024), (-15.748032, -15.748032), (-11.811024, -11.811024), (-15.748032, -15.748032), (-19.68504, -11.811024), (-19.68504, -15.748032), (19.68504, 19.68504), (-19.68504, -19.68504), (19.68504, -19.68504), (-19.68504, -19.68504), (19.68504, 19.68504), (-19.68504, 19.68504), (19.68504, 0.78740156), (15.748032, 0.39370078), (19.68504, 0.39370078), (15.748032, 0.39370078), (19.68504, 0.78740156), (15.748032, 0.78740156), (-19.68504, 0.78740156), (-15.748032, 0.39370078), (-15.748032, 0.78740156), (-15.748032, 0.39370078), (-19.68504, 0.78740156), (-19.68504, 0.39370078), (19.68504, 15.748032), (15.748032, 19.68504), (15.748032, 15.748032), (15.748032, 19.68504), (19.68504, 15.748032), (19.68504, 19.68504), (-15.748032, 15.748032), (-19.68504, 19.68504), (-19.68504, 15.748032), (-19.68504, 19.68504), (-15.748032, 15.748032), (-15.748032, 19.68504), (-15.748032, 0.78740156), (-19.68504, 0.39370078), (-15.748032, 0.39370078), (-19.68504, 0.39370078), (-15.748032, 0.78740156), (-19.68504, 0.78740156), (19.68504, 0.39370078), (15.748032, 0.78740156), (15.748032, 0.39370078), (15.748032, 0.78740156), (19.68504, 0.39370078), (19.68504, 0.78740156), (19.68504, -19.68504), (15.748032, -15.748032), (15.748032, -19.68504), (15.748032, -15.748032), (19.68504, -19.68504), (19.68504, -15.748032), (-15.748032, 0.39370078), (-19.68504, 0.78740156), (-19.68504, 0.39370078), (-19.68504, 0.78740156), (-15.748032, 0.39370078), (-15.748032, 0.78740156), (15.748032, 0.78740156), (19.68504, 0.39370078), (19.68504, 0.78740156), (19.68504, 0.39370078), (15.748032, 0.78740156), (15.748032, 0.39370078), (-15.748032, -19.68504), (-19.68504, -15.748032), (-19.68504, -19.68504), (-19.68504, -15.748032), (-15.748032, -19.68504), (-15.748032, -15.748032), (-19.68504, 0.39370078), (-15.748032, 0.78740156), (-19.68504, 0.78740156), (-15.748032, 0.78740156), (-19.68504, 0.39370078), (-15.748032, 0.39370078), (19.68504, 0.78740156), (15.748031, 0.39370078), (19.68504, 0.39370078), (15.748031, 0.39370078), (19.68504, 0.78740156), (15.748031, 0.78740156), (0.39370048, 11.811024), (-0.39370108, 19.68504), (-0.39370108, 11.811024), (-0.39370108, 19.68504), (0.39370048, 11.811024), (0.39370048, 19.68504), (19.68504, -0.39370048), (11.811024, 0.39370108), (11.811024, -0.39370048), (11.811024, 0.39370108), (19.68504, -0.39370048), (19.68504, 0.39370108), (0.39370096, -19.68504), (-0.3937006, -11.811024), (-0.3937006, -19.68504), (-0.3937006, -11.811024), (0.39370096, -19.68504), (0.39370096, -11.811024), (-11.811024, -0.39370048), (-19.68504, 0.39370108), (-19.68504, -0.39370048), (-19.68504, 0.39370108), (-11.811024, -0.39370048), (-11.811024, 0.39370108)] (
                    interpolation = "faceVarying"
                )
                uniform token subdivisionScheme = "none"
                float3 xformOp:rotateXYZ = (0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (450, 0, 50)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                def GeomSubset "asphalt" (
                    apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    uniform token elementType = "face"
                    uniform token familyName = "materialBind"
                    int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65]
                    rel material:binding = </World/Looks/asphalt> (
                        bindMaterialAs = "weakerThanDescendants"
                    )
                }

                def GeomSubset "asphaltEdge" (
                    apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    uniform token elementType = "face"
                    uniform token familyName = "materialBind"
                    int[] indices = [66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81]
                    rel material:binding = </World/Looks/asphaltEdge> (
                        bindMaterialAs = "weakerThanDescendants"
                    )
                }

                def GeomSubset "pavement" (
                    apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    uniform token elementType = "face"
                    uniform token familyName = "materialBind"
                    int[] indices = [82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107]
                    rel material:binding = </World/Looks/pavement> (
                        bindMaterialAs = "weakerThanDescendants"
                    )
                }

                def GeomSubset "line" (
                    apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    uniform token elementType = "face"
                    uniform token familyName = "materialBind"
                    int[] indices = [108, 109, 110, 111, 112, 113, 114, 115]
                    rel material:binding = </World/Looks/line> (
                        bindMaterialAs = "weakerThanDescendants"
                    )
                }
            }

            def Mesh "road_crossroad_04" (
                prepend specializes = </_osm_street_data>
            )
            {
                float3[] extent = [(-50, 0, -50), (50, 2, 50)]
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [2, 1, 0, 1, 2, 3, 0, 1, 4, 1, 3, 5, 6, 0, 4, 7, 0, 6, 0, 7, 8, 6, 4, 9, 6, 9, 10, 8, 7, 11, 14, 13, 12, 13, 14, 15, 12, 13, 16, 13, 15, 17, 18, 12, 16, 19, 12, 18, 12, 19, 20, 18, 16, 21, 18, 21, 22, 20, 19, 23, 26, 25, 24, 25, 26, 27, 25, 27, 28, 28, 27, 29, 29, 27, 30, 30, 27, 31, 31, 27, 32, 32, 27, 33, 33, 27, 34, 35, 24, 25, 38, 37, 36, 37, 38, 39, 37, 39, 40, 40, 39, 41, 40, 41, 42, 40, 42, 43, 40, 43, 44, 40, 44, 45, 40, 45, 46, 40, 46, 47, 50, 49, 48, 49, 50, 51, 49, 51, 52, 51, 53, 52, 54, 53, 51, 55, 53, 54, 56, 55, 54, 55, 56, 57, 53, 55, 58, 52, 53, 59, 59, 53, 60, 59, 60, 61, 61, 60, 62, 61, 62, 63, 63, 62, 64, 64, 62, 65, 65, 62, 66, 66, 62, 67, 65, 66, 68, 65, 68, 69, 70, 69, 68, 69, 70, 71, 65, 69, 72, 73, 65, 72, 65, 73, 74, 75, 52, 59, 214, 204, 205, 204, 214, 216, 216, 214, 217, 218, 204, 216, 219, 208, 206, 208, 219, 220, 208, 220, 210, 210, 220, 221, 189, 222, 188, 222, 189, 223, 223, 189, 224, 224, 189, 192, 198, 226, 225, 195, 226, 198, 197, 226, 195, 226, 197, 227, 370, 369, 368, 369, 370, 371, 374, 373, 372, 373, 374, 375, 378, 377, 376, 377, 378, 379, 382, 381, 380, 381, 382, 383, 386, 385, 384, 385, 386, 387, 390, 389, 388, 389, 390, 391, 394, 393, 392, 393, 394, 395, 398, 397, 396, 397, 398, 399, 402, 401, 400, 401, 402, 403, 406, 405, 404, 405, 406, 407, 410, 409, 408, 409, 410, 411, 414, 413, 412, 413, 414, 415, 418, 417, 416, 417, 418, 419, 481, 495, 479, 495, 481, 483, 491, 492, 489, 492, 491, 493, 487, 480, 473, 480, 487, 482, 474, 470, 476, 470, 474, 471]
                normal3f[] normals = [(0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0)] (
                    interpolation = "faceVarying"
                )
                point3f[] points = [(50, 0, -50), (-40, 1, -50), (-50, 0, -50), (-50, 2, -50), (-30.000002, 1, -50), (-40, 2, -50), (30.000002, 1, -50), (40, 1, -50), (50, 2, -50), (-1.0000007, 1, -50), (0.9999992, 1, -50), (40, 2, -50), (-50, 0, 50), (40, 1, 50), (50, 0, 50), (50, 2, 50), (30.000002, 1, 50), (40, 2, 50), (-30.000002, 1, 50), (-40, 1, 50), (-50, 2, 50), (1.0000005, 1, 50), (-0.9999995, 1, 50), (-40, 2, 50), (50, 2, 50), (50, 1, 40), (50, 0, 50), (50, 0, -50), (50, 1, 30.000002), (50, 1, 0.99999934), (50, 1, -1.0000007), (50, 1, -30.000002), (50, 1, -40), (50, 2, -40), (50, 2, -50), (50, 2, 40), (-50, 2, 50), (-50, 0, 50), (-50, 2, 40), (-50, 1, 40), (-50, 0, -50), (-50, 1, 30.000002), (-50, 1, 0.99999934), (-50, 1, -1.0000007), (-50, 1, -30.000002), (-50, 1, -40), (-50, 2, -40), (-50, 2, -50), (-50, 1, -30.000002), (-30.000002, 1, -30.000002), (-50, 1, -1.0000007), (-30.000002, 1, -1.0000007), (-30.000002, 1, -50), (-0.9999995, 1, 50), (-30.000002, 1, 0.99999934), (-30.000002, 1, 30.000002), (-50, 1, 0.99999934), (-50, 1, 30.000002), (-30.000002, 1, 50), (-1.0000007, 1, -30.000002), (-0.9999995, 1, 30.000002), (0.9999992, 1, -30.000002), (1.0000005, 1, 30.000002), (0.9999992, 1, -50), (30.000002, 1, -50), (30.000002, 1, -30.000002), (30.000002, 1, 50), (1.0000005, 1, 50), (30.000002, 1, 30.000002), (30.000002, 1, 0.99999934), (50, 1, 30.000002), (50, 1, 0.99999934), (30.000002, 1, -1.0000007), (50, 1, -1.0000007), (50, 1, -30.000002), (-1.0000007, 1, -50), (40, 1, -40), (50, 1, -40), (40, 1, -50), (40, 1, 50), (40, 1, 40), (50, 1, 40), (-50, 1, -40), (-40, 1, -40), (-40, 1, -50), (-40, 1, 50), (-40, 1, 40), (-50, 1, 40), (-50, 0, 50), (50, 0, 50), (-50, 0, -50), (50, 0, -50), (50, 1, -40), (40, 1, -40), (50, 2, -40), (40, 2, -40), (40, 2, -40), (40, 1, -40), (40, 2, -50), (40, 1, -50), (40, 2, -40), (40, 2, -50), (50, 2, -40), (50, 2, -50), (-50, 2, -40), (-50, 2, -50), (-40, 2, -40), (-40, 2, -50), (-40, 1, -40), (-50, 1, -40), (-40, 2, -40), (-50, 2, -40), (-40, 1, -40), (-40, 2, -40), (-40, 1, -50), (-40, 2, -50), (40, 2, 50), (40, 2, 40), (50, 2, 50), (50, 2, 40), (50, 1, 40), (50, 2, 40), (40, 1, 40), (40, 2, 40), (40, 2, 50), (40, 1, 50), (40, 2, 40), (40, 1, 40), (-50, 2, 50), (-50, 2, 40), (-40, 2, 50), (-40, 2, 40), (-40, 2, 50), (-40, 2, 40), (-40, 1, 50), (-40, 1, 40), (-50, 1, 40), (-40, 1, 40), (-50, 2, 40), (-40, 2, 40), (50, 0, -50), (-40, 1, -50), (-50, 0, -50), (-50, 2, -50), (-30.000002, 1, -50), (-40, 2, -50), (30.000002, 1, -50), (40, 1, -50), (50, 2, -50), (-1.0000007, 1, -50), (0.9999992, 1, -50), (40, 2, -50), (-50, 0, 50), (40, 1, 50), (50, 0, 50), (50, 2, 50), (30.000002, 1, 50), (40, 2, 50), (-30.000002, 1, 50), (-40, 1, 50), (-50, 2, 50), (1.0000005, 1, 50), (-0.9999995, 1, 50), (-40, 2, 50), (50, 2, 50), (50, 1, 40), (50, 0, 50), (50, 0, -50), (50, 1, 30.000002), (50, 1, 0.99999934), (50, 1, -1.0000007), (50, 1, -30.000002), (50, 1, -40), (50, 2, -40), (50, 2, -50), (50, 2, 40), (-50, 2, 50), (-50, 0, 50), (-50, 2, 40), (-50, 1, 40), (-50, 0, -50), (-50, 1, 30.000002), (-50, 1, 0.99999934), (-50, 1, -1.0000007), (-50, 1, -30.000002), (-50, 1, -40), (-50, 2, -40), (-50, 2, -50), (-50, 1, -30.000002), (-30.000002, 1, -30.000002), (-50, 1, -1.0000007), (-30.000002, 1, -1.0000007), (-30.000002, 1, -50), (-0.9999995, 1, 50), (-30.000002, 1, 0.99999934), (-30.000002, 1, 30.000002), (-50, 1, 0.99999934), (-50, 1, 30.000002), (-30.000002, 1, 50), (-1.0000007, 1, -30.000002), (-0.9999995, 1, 30.000002), (0.9999992, 1, -30.000002), (1.0000005, 1, 30.000002), (0.9999992, 1, -50), (30.000002, 1, -50), (30.000002, 1, -30.000002), (30.000002, 1, 50), (1.0000005, 1, 50), (30.000002, 1, 30.000002), (30.000002, 1, 0.99999934), (50, 1, 30.000002), (50, 1, 0.99999934), (30.000002, 1, -1.0000007), (50, 1, -1.0000007), (50, 1, -30.000002), (-1.0000007, 1, -50), (40, 1, -40), (50, 1, -40), (40, 1, -50), (40, 1, 50), (40, 1, 40), (50, 1, 40), (-50, 1, -40), (-40, 1, -40), (-40, 1, -50), (-40, 1, 50), (-40, 1, 40), (-50, 1, 40), (-50, 0, 50), (50, 0, 50), (-50, 0, -50), (50, 0, -50), (50, 1, -40), (40, 1, -40), (50, 2, -40), (40, 2, -40), (40, 2, -40), (40, 1, -40), (40, 2, -50), (40, 1, -50), (40, 2, -40), (40, 2, -50), (50, 2, -40), (50, 2, -50), (-50, 2, -40), (-50, 2, -50), (-40, 2, -40), (-40, 2, -50), (-40, 1, -40), (-50, 1, -40), (-40, 2, -40), (-50, 2, -40), (-40, 1, -40), (-40, 2, -40), (-40, 1, -50), (-40, 2, -50), (40, 2, 50), (40, 2, 40), (50, 2, 50), (50, 2, 40), (50, 1, 40), (50, 2, 40), (40, 1, 40), (40, 2, 40), (40, 2, 50), (40, 1, 50), (40, 2, 40), (40, 1, 40), (-50, 2, 50), (-50, 2, 40), (-40, 2, 50), (-40, 2, 40), (-40, 2, 50), (-40, 2, 40), (-40, 1, 50), (-40, 1, 40), (-50, 1, 40), (-40, 1, 40), (-50, 2, 40), (-40, 2, 40), (50, 0, -50), (-40, 1, -50), (-50, 0, -50), (-50, 2, -50), (-30.000002, 1, -50), (-40, 2, -50), (30.000002, 1, -50), (40, 1, -50), (50, 2, -50), (-1.0000007, 1, -50), (0.9999992, 1, -50), (40, 2, -50), (-50, 0, 50), (40, 1, 50), (50, 0, 50), (50, 2, 50), (30.000002, 1, 50), (40, 2, 50), (-30.000002, 1, 50), (-40, 1, 50), (-50, 2, 50), (1.0000005, 1, 50), (-0.9999995, 1, 50), (-40, 2, 50), (50, 2, 50), (50, 1, 40), (50, 0, 50), (50, 0, -50), (50, 1, 30.000002), (50, 1, 0.99999934), (50, 1, -1.0000007), (50, 1, -30.000002), (50, 1, -40), (50, 2, -40), (50, 2, -50), (50, 2, 40), (-50, 2, 50), (-50, 0, 50), (-50, 2, 40), (-50, 1, 40), (-50, 0, -50), (-50, 1, 30.000002), (-50, 1, 0.99999934), (-50, 1, -1.0000007), (-50, 1, -30.000002), (-50, 1, -40), (-50, 2, -40), (-50, 2, -50), (-50, 1, -30.000002), (-30.000002, 1, -30.000002), (-50, 1, -1.0000007), (-30.000002, 1, -1.0000007), (-30.000002, 1, -50), (-0.9999995, 1, 50), (-30.000002, 1, 0.99999934), (-30.000002, 1, 30.000002), (-50, 1, 0.99999934), (-50, 1, 30.000002), (-30.000002, 1, 50), (-1.0000007, 1, -30.000002), (-0.9999995, 1, 30.000002), (0.9999992, 1, -30.000002), (1.0000005, 1, 30.000002), (0.9999992, 1, -50), (30.000002, 1, -50), (30.000002, 1, -30.000002), (30.000002, 1, 50), (1.0000005, 1, 50), (30.000002, 1, 30.000002), (30.000002, 1, 0.99999934), (50, 1, 30.000002), (50, 1, 0.99999934), (30.000002, 1, -1.0000007), (50, 1, -1.0000007), (50, 1, -30.000002), (-1.0000007, 1, -50), (40, 1, -40), (50, 1, -40), (40, 1, -50), (40, 1, 50), (40, 1, 40), (50, 1, 40), (-50, 1, -40), (-40, 1, -40), (-40, 1, -50), (-40, 1, 50), (-40, 1, 40), (-50, 1, 40), (-50, 0, 50), (50, 0, 50), (-50, 0, -50), (50, 0, -50), (50, 1, -40), (40, 1, -40), (50, 2, -40), (40, 2, -40), (40, 2, -40), (40, 1, -40), (40, 2, -50), (40, 1, -50), (40, 2, -40), (40, 2, -50), (50, 2, -40), (50, 2, -50), (-50, 2, -40), (-50, 2, -50), (-40, 2, -40), (-40, 2, -50), (-40, 1, -40), (-50, 1, -40), (-40, 2, -40), (-50, 2, -40), (-40, 1, -40), (-40, 2, -40), (-40, 1, -50), (-40, 2, -50), (40, 2, 50), (40, 2, 40), (50, 2, 50), (50, 2, 40), (50, 1, 40), (50, 2, 40), (40, 1, 40), (40, 2, 40), (40, 2, 50), (40, 1, 50), (40, 2, 40), (40, 1, 40), (-50, 2, 50), (-50, 2, 40), (-40, 2, 50), (-40, 2, 40), (-40, 2, 50), (-40, 2, 40), (-40, 1, 50), (-40, 1, 40), (-50, 1, 40), (-40, 1, 40), (-50, 2, 40), (-40, 2, 40), (50, 0, -50), (-40, 1, -50), (-50, 0, -50), (-50, 2, -50), (-30.000002, 1, -50), (-40, 2, -50), (30.000002, 1, -50), (40, 1, -50), (50, 2, -50), (-1.0000007, 1, -50), (0.9999992, 1, -50), (40, 2, -50), (-50, 0, 50), (40, 1, 50), (50, 0, 50), (50, 2, 50), (30.000002, 1, 50), (40, 2, 50), (-30.000002, 1, 50), (-40, 1, 50), (-50, 2, 50), (1.0000005, 1, 50), (-0.9999995, 1, 50), (-40, 2, 50), (50, 2, 50), (50, 1, 40), (50, 0, 50), (50, 0, -50), (50, 1, 30.000002), (50, 1, 0.99999934), (50, 1, -1.0000007), (50, 1, -30.000002), (50, 1, -40), (50, 2, -40), (50, 2, -50), (50, 2, 40), (-50, 2, 50), (-50, 0, 50), (-50, 2, 40), (-50, 1, 40), (-50, 0, -50), (-50, 1, 30.000002), (-50, 1, 0.99999934), (-50, 1, -1.0000007), (-50, 1, -30.000002), (-50, 1, -40), (-50, 2, -40), (-50, 2, -50), (-50, 1, -30.000002), (-30.000002, 1, -30.000002), (-50, 1, -1.0000007), (-30.000002, 1, -1.0000007), (-30.000002, 1, -50), (-0.9999995, 1, 50), (-30.000002, 1, 0.99999934), (-30.000002, 1, 30.000002), (-50, 1, 0.99999934), (-50, 1, 30.000002), (-30.000002, 1, 50), (-1.0000007, 1, -30.000002), (-0.9999995, 1, 30.000002), (0.9999992, 1, -30.000002), (1.0000005, 1, 30.000002), (0.9999992, 1, -50), (30.000002, 1, -50), (30.000002, 1, -30.000002), (30.000002, 1, 50), (1.0000005, 1, 50), (30.000002, 1, 30.000002), (30.000002, 1, 0.99999934), (50, 1, 30.000002), (50, 1, 0.99999934), (30.000002, 1, -1.0000007), (50, 1, -1.0000007), (50, 1, -30.000002), (-1.0000007, 1, -50), (40, 1, -40), (50, 1, -40), (40, 1, -50), (40, 1, 50), (40, 1, 40), (50, 1, 40), (-50, 1, -40), (-40, 1, -40), (-40, 1, -50), (-40, 1, 50), (-40, 1, 40), (-50, 1, 40), (-50, 0, 50), (50, 0, 50), (-50, 0, -50), (50, 0, -50), (50, 1, -40), (40, 1, -40), (50, 2, -40), (40, 2, -40), (40, 2, -40), (40, 1, -40), (40, 2, -50), (40, 1, -50), (40, 2, -40), (40, 2, -50), (50, 2, -40), (50, 2, -50), (-50, 2, -40), (-50, 2, -50), (-40, 2, -40), (-40, 2, -50), (-40, 1, -40), (-50, 1, -40), (-40, 2, -40), (-50, 2, -40), (-40, 1, -40), (-40, 2, -40), (-40, 1, -50), (-40, 2, -50), (40, 2, 50), (40, 2, 40), (50, 2, 50), (50, 2, 40), (50, 1, 40), (50, 2, 40), (40, 1, 40), (40, 2, 40), (40, 2, 50), (40, 1, 50), (40, 2, 40), (40, 1, 40), (-50, 2, 50), (-50, 2, 40), (-40, 2, 50), (-40, 2, 40), (-40, 2, 50), (-40, 2, 40), (-40, 1, 50), (-40, 1, 40), (-50, 1, 40), (-40, 1, 40), (-50, 2, 40), (-40, 2, 40)]
                texCoord2f[] primvars:st = [(19.68504, -4.7683716e-7), (15.748032, 0.39370036), (-19.68504, -4.7683716e-7), (15.748032, 0.39370036), (19.68504, -4.7683716e-7), (19.68504, 0.78740114), (-19.68504, -4.7683716e-7), (15.748032, 0.39370036), (11.811024, 0.39370036), (15.748032, 0.39370036), (19.68504, 0.78740114), (15.748032, 0.78740114), (-11.811024, 0.39370036), (-19.68504, -4.7683716e-7), (11.811024, 0.39370036), (-15.748032, 0.39370036), (-19.68504, -4.7683716e-7), (-11.811024, 0.39370036), (-19.68504, -4.7683716e-7), (-15.748032, 0.39370036), (-19.68504, 0.78740114), (-11.811024, 0.39370036), (11.811024, 0.39370036), (0.39370137, 0.39370036), (-11.811024, 0.39370036), (0.39370137, 0.39370036), (-0.3937002, 0.39370036), (-19.68504, 0.78740114), (-15.748032, 0.39370036), (-15.748032, 0.78740114), (19.68504, 0), (15.748032, 0.39370078), (-19.68504, 0), (15.748032, 0.39370078), (19.68504, 0), (19.68504, 0.78740156), (-19.68504, 0), (15.748032, 0.39370078), (11.811024, 0.39370078), (15.748032, 0.39370078), (19.68504, 0.78740156), (15.748032, 0.78740156), (-11.811023, 0.39370078), (-19.68504, 0), (11.811024, 0.39370078), (-15.748031, 0.39370078), (-19.68504, 0), (-11.811023, 0.39370078), (-19.68504, 0), (-15.748031, 0.39370078), (-19.68504, 0.78740156), (-11.811023, 0.39370078), (11.811024, 0.39370078), (0.39370126, 0.39370078), (-11.811023, 0.39370078), (0.39370126, 0.39370078), (-0.39370033, 0.39370078), (-19.68504, 0.78740156), (-15.748031, 0.39370078), (-15.748031, 0.78740156), (-19.68504, 0), (-15.748032, 0.39370078), (-19.68504, 0.78740156), (-15.748032, 0.39370078), (-19.68504, 0), (19.68504, 0), (-15.748032, 0.39370078), (19.68504, 0), (-11.811024, 0.39370078), (-11.811024, 0.39370078), (19.68504, 0), (-0.3937002, 0.39370078), (-0.3937002, 0.39370078), (19.68504, 0), (0.39370137, 0.39370078), (0.39370137, 0.39370078), (19.68504, 0), (11.811024, 0.39370078), (11.811024, 0.39370078), (19.68504, 0), (15.748032, 0.39370078), (15.748032, 0.39370078), (19.68504, 0), (15.748032, 0.78740156), (15.748032, 0.78740156), (19.68504, 0), (19.68504, 0.78740156), (-15.748032, 0.78740156), (-19.68504, 0.78740156), (-15.748032, 0.39370078), (15.748032, 0.7874021), (19.68504, 5.364418e-7), (19.68504, 0.7874021), (19.68504, 5.364418e-7), (15.748032, 0.7874021), (15.748032, 0.39370131), (19.68504, 5.364418e-7), (15.748032, 0.39370131), (-19.68504, 5.364418e-7), (-19.68504, 5.364418e-7), (15.748032, 0.39370131), (11.811024, 0.39370131), (-19.68504, 5.364418e-7), (11.811024, 0.39370131), (0.39370078, 0.39370131), (-19.68504, 5.364418e-7), (0.39370078, 0.39370131), (-0.39370078, 0.39370131), (-19.68504, 5.364418e-7), (-0.39370078, 0.39370131), (-11.811024, 0.39370131), (-19.68504, 5.364418e-7), (-11.811024, 0.39370131), (-15.748032, 0.39370131), (-19.68504, 5.364418e-7), (-15.748032, 0.39370131), (-15.748032, 0.7874021), (-19.68504, 5.364418e-7), (-15.748032, 0.7874021), (-19.68504, 0.7874021), (-19.68504, 0.39370108), (-11.811024, 11.811024), (-19.68504, 11.811024), (-11.811024, 11.811024), (-19.68504, 0.39370108), (-11.811024, 0.39370108), (-11.811024, 11.811024), (-11.811024, 0.39370108), (-11.811024, 19.68504), (-11.811024, 0.39370108), (-0.3937006, -19.68504), (-11.811024, 19.68504), (-11.811024, -0.39370048), (-0.3937006, -19.68504), (-11.811024, 0.39370108), (-11.811024, -11.811024), (-0.3937006, -19.68504), (-11.811024, -0.39370048), (-19.68504, -0.39370048), (-11.811024, -11.811024), (-11.811024, -0.39370048), (-11.811024, -11.811024), (-19.68504, -0.39370048), (-19.68504, -11.811024), (-0.3937006, -19.68504), (-11.811024, -11.811024), (-11.811024, -19.68504), (-11.811024, 19.68504), (-0.3937006, -19.68504), (-0.39370108, 11.811024), (-0.39370108, 11.811024), (-0.3937006, -19.68504), (-0.3937006, -11.811024), (-0.39370108, 11.811024), (-0.3937006, -11.811024), (0.39370048, 11.811024), (0.39370048, 11.811024), (-0.3937006, -11.811024), (0.39370096, -11.811024), (0.39370048, 11.811024), (0.39370096, -11.811024), (0.39370048, 19.68504), (0.39370048, 19.68504), (0.39370096, -11.811024), (11.811024, 19.68504), (11.811024, 19.68504), (0.39370096, -11.811024), (11.811024, 11.811024), (11.811024, 11.811024), (0.39370096, -11.811024), (11.811024, -19.68504), (11.811024, -19.68504), (0.39370096, -11.811024), (0.39370096, -19.68504), (11.811024, 11.811024), (11.811024, -19.68504), (11.811024, -11.811024), (11.811024, 11.811024), (11.811024, -11.811024), (11.811024, -0.39370048), (19.68504, -11.811024), (11.811024, -0.39370048), (11.811024, -11.811024), (11.811024, -0.39370048), (19.68504, -11.811024), (19.68504, -0.39370048), (11.811024, 11.811024), (11.811024, -0.39370048), (11.811024, 0.39370108), (19.68504, 0.39370108), (11.811024, 11.811024), (11.811024, 0.39370108), (11.811024, 11.811024), (19.68504, 0.39370108), (19.68504, 11.811024), (-0.39370108, 19.68504), (-11.811024, 19.68504), (-0.39370108, 11.811024), (19.68504, 11.811024), (11.811024, 19.68504), (11.811024, 11.811024), (11.811024, 19.68504), (19.68504, 11.811024), (15.748032, 15.748032), (15.748032, 15.748032), (19.68504, 11.811024), (19.68504, 15.748032), (15.748032, 19.68504), (11.811024, 19.68504), (15.748032, 15.748032), (15.748032, -19.68504), (11.811024, -11.811024), (11.811024, -19.68504), (11.811024, -11.811024), (15.748032, -19.68504), (15.748032, -15.748032), (11.811024, -11.811024), (15.748032, -15.748032), (19.68504, -11.811024), (19.68504, -11.811024), (15.748032, -15.748032), (19.68504, -15.748032), (-11.811024, 11.811024), (-19.68504, 15.748032), (-19.68504, 11.811024), (-19.68504, 15.748032), (-11.811024, 11.811024), (-15.748032, 15.748032), (-15.748032, 15.748032), (-11.811024, 11.811024), (-15.748032, 19.68504), (-15.748032, 19.68504), (-11.811024, 11.811024), (-11.811024, 19.68504), (-11.811024, -19.68504), (-15.748032, -15.748032), (-15.748032, -19.68504), (-11.811024, -11.811024), (-15.748032, -15.748032), (-11.811024, -19.68504), (-19.68504, -11.811024), (-15.748032, -15.748032), (-11.811024, -11.811024), (-15.748032, -15.748032), (-19.68504, -11.811024), (-19.68504, -15.748032), (19.68504, 19.68504), (-19.68504, -19.68504), (19.68504, -19.68504), (-19.68504, -19.68504), (19.68504, 19.68504), (-19.68504, 19.68504), (19.68504, 0.78740156), (15.748032, 0.39370078), (19.68504, 0.39370078), (15.748032, 0.39370078), (19.68504, 0.78740156), (15.748032, 0.78740156), (-19.68504, 0.78740156), (-15.748032, 0.39370078), (-15.748032, 0.78740156), (-15.748032, 0.39370078), (-19.68504, 0.78740156), (-19.68504, 0.39370078), (19.68504, 15.748032), (15.748032, 19.68504), (15.748032, 15.748032), (15.748032, 19.68504), (19.68504, 15.748032), (19.68504, 19.68504), (-15.748032, 15.748032), (-19.68504, 19.68504), (-19.68504, 15.748032), (-19.68504, 19.68504), (-15.748032, 15.748032), (-15.748032, 19.68504), (-15.748032, 0.78740156), (-19.68504, 0.39370078), (-15.748032, 0.39370078), (-19.68504, 0.39370078), (-15.748032, 0.78740156), (-19.68504, 0.78740156), (19.68504, 0.39370078), (15.748032, 0.78740156), (15.748032, 0.39370078), (15.748032, 0.78740156), (19.68504, 0.39370078), (19.68504, 0.78740156), (19.68504, -19.68504), (15.748032, -15.748032), (15.748032, -19.68504), (15.748032, -15.748032), (19.68504, -19.68504), (19.68504, -15.748032), (-15.748032, 0.39370078), (-19.68504, 0.78740156), (-19.68504, 0.39370078), (-19.68504, 0.78740156), (-15.748032, 0.39370078), (-15.748032, 0.78740156), (15.748032, 0.78740156), (19.68504, 0.39370078), (19.68504, 0.78740156), (19.68504, 0.39370078), (15.748032, 0.78740156), (15.748032, 0.39370078), (-15.748032, -19.68504), (-19.68504, -15.748032), (-19.68504, -19.68504), (-19.68504, -15.748032), (-15.748032, -19.68504), (-15.748032, -15.748032), (-19.68504, 0.39370078), (-15.748032, 0.78740156), (-19.68504, 0.78740156), (-15.748032, 0.78740156), (-19.68504, 0.39370078), (-15.748032, 0.39370078), (19.68504, 0.78740156), (15.748031, 0.39370078), (19.68504, 0.39370078), (15.748031, 0.39370078), (19.68504, 0.78740156), (15.748031, 0.78740156), (0.39370048, 11.811024), (-0.39370108, 19.68504), (-0.39370108, 11.811024), (-0.39370108, 19.68504), (0.39370048, 11.811024), (0.39370048, 19.68504), (19.68504, -0.39370048), (11.811024, 0.39370108), (11.811024, -0.39370048), (11.811024, 0.39370108), (19.68504, -0.39370048), (19.68504, 0.39370108), (0.39370096, -19.68504), (-0.3937006, -11.811024), (-0.3937006, -19.68504), (-0.3937006, -11.811024), (0.39370096, -19.68504), (0.39370096, -11.811024), (-11.811024, -0.39370048), (-19.68504, 0.39370108), (-19.68504, -0.39370048), (-19.68504, 0.39370108), (-11.811024, -0.39370048), (-11.811024, 0.39370108)] (
                    interpolation = "faceVarying"
                )
                uniform token subdivisionScheme = "none"
                float3 xformOp:rotateXYZ = (0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (450, 0, -50)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                def GeomSubset "asphalt" (
                    apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    uniform token elementType = "face"
                    uniform token familyName = "materialBind"
                    int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65]
                    rel material:binding = </World/Looks/asphalt> (
                        bindMaterialAs = "weakerThanDescendants"
                    )
                }

                def GeomSubset "asphaltEdge" (
                    apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    uniform token elementType = "face"
                    uniform token familyName = "materialBind"
                    int[] indices = [66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81]
                    rel material:binding = </World/Looks/asphaltEdge> (
                        bindMaterialAs = "weakerThanDescendants"
                    )
                }

                def GeomSubset "pavement" (
                    apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    uniform token elementType = "face"
                    uniform token familyName = "materialBind"
                    int[] indices = [82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107]
                    rel material:binding = </World/Looks/pavement> (
                        bindMaterialAs = "weakerThanDescendants"
                    )
                }

                def GeomSubset "line" (
                    apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    uniform token elementType = "face"
                    uniform token familyName = "materialBind"
                    int[] indices = [108, 109, 110, 111, 112, 113, 114, 115]
                    rel material:binding = </World/Looks/line> (
                        bindMaterialAs = "weakerThanDescendants"
                    )
                }
            }

            def Mesh "road_straightBarrier_17" (
                apiSchemas = ["MaterialBindingAPI"]
            )
            {
                float3[] extent = [(-50, 0, -50), (50, 8, 50)]
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [2, 1, 0, 1, 2, 3, 6, 5, 4, 5, 6, 7, 10, 9, 8, 9, 10, 11, 14, 13, 12, 13, 14, 15, 18, 17, 16, 17, 18, 19, 22, 21, 20, 21, 22, 23, 26, 25, 24, 25, 26, 27, 30, 29, 28, 29, 30, 31, 34, 33, 32, 33, 34, 35, 38, 37, 36, 37, 38, 39, 42, 41, 40, 41, 42, 43, 46, 45, 44, 45, 46, 47]
                rel material:binding = </World/Looks/pavement> (
                    bindMaterialAs = "weakerThanDescendants"
                )
                normal3f[] normals = [(0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0.97014254, 0.24253564, -0), (0.97014254, 0.24253564, -0), (0.97014254, 0.24253564, -0), (0.97014254, 0.24253564, -0), (0.97014254, 0.24253564, -0), (0.97014254, 0.24253564, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-0.97014254, 0.24253564, -0), (-0.97014254, 0.24253564, -0), (-0.97014254, 0.24253564, -0), (-0.97014254, 0.24253564, -0), (-0.97014254, 0.24253564, -0), (-0.97014254, 0.24253564, -0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1)] (
                    interpolation = "faceVarying"
                )
                point3f[] points = [(47, 8, -50), (50, 8, -50), (47, 8, 50), (50, 8, 50), (-50, 0, 50), (-45, 0, 50), (-50, 0, -50), (-45, 0, -50), (-45, 0, 50), (-47, 8, 50), (-45, 0, -50), (-47, 8, -50), (45, 0, -50), (45, 0, 50), (50, 0, -50), (50, 0, 50), (-50, 0, -50), (-45, 0, -50), (-50, 8, -50), (-47, 8, -50), (-50, 8, 50), (-50, 0, 50), (-50, 8, -50), (-50, 0, -50), (-45, 0, 50), (-50, 0, 50), (-47, 8, 50), (-50, 8, 50), (45, 0, 50), (45, 0, -50), (47, 8, 50), (47, 8, -50), (50, 0, 50), (45, 0, 50), (50, 8, 50), (47, 8, 50), (-50, 8, 50), (-50, 8, -50), (-47, 8, 50), (-47, 8, -50), (50, 0, 50), (50, 8, 50), (50, 0, -50), (50, 8, -50), (45, 0, -50), (50, 0, -50), (47, 8, -50), (50, 8, -50)]
                texCoord2f[] primvars:st = [(18.503937, -19.68504), (19.68504, 19.68504), (18.503937, 19.68504), (19.68504, 19.68504), (18.503937, -19.68504), (19.68504, -19.68504), (19.68504, 19.68504), (17.716536, -19.68504), (19.68504, -19.68504), (17.716536, -19.68504), (19.68504, 19.68504), (17.716536, 19.68504), (19.68504, 4.296891), (-19.68504, 7.543431), (-19.68504, 4.296891), (-19.68504, 7.543431), (19.68504, 4.296891), (19.68504, 7.543431), (-19.68504, 19.68504), (-17.716536, -19.68504), (-17.716536, 19.68504), (-17.716536, -19.68504), (-19.68504, 19.68504), (-19.68504, -19.68504), (19.68504, 3.1496062), (17.716536, 0), (19.68504, 0), (17.716536, 0), (19.68504, 3.1496062), (18.503937, 3.1496062), (-19.68504, 3.1496062), (19.68504, 0), (19.68504, 3.1496062), (19.68504, 0), (-19.68504, 3.1496062), (-19.68504, 0), (-18.503937, 3.1496062), (-19.68504, 0), (-17.716536, 0), (-19.68504, 0), (-18.503937, 3.1496062), (-19.68504, 3.1496062), (19.68504, 7.543431), (-19.68504, 4.296891), (19.68504, 4.296891), (-19.68504, 4.296891), (19.68504, 7.543431), (-19.68504, 7.543431), (19.68504, 3.1496062), (17.716536, 0), (19.68504, 0), (17.716536, 0), (19.68504, 3.1496062), (18.503937, 3.1496062), (-18.503937, -19.68504), (-19.68504, 19.68504), (-19.68504, -19.68504), (-19.68504, 19.68504), (-18.503937, -19.68504), (-18.503937, 19.68504), (19.68504, 0), (-19.68504, 3.1496062), (-19.68504, 0), (-19.68504, 3.1496062), (19.68504, 0), (19.68504, 3.1496062), (-18.503937, 3.1496062), (-19.68504, 0), (-17.716536, 0), (-19.68504, 0), (-18.503937, 3.1496062), (-19.68504, 3.1496062)] (
                    interpolation = "faceVarying"
                )
                uniform token subdivisionScheme = "none"
                float3 xformOp:rotateXYZ = (0, 90, 0)
                float3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (50, 0, 50)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def Mesh "road_straightBarrier_18" (
                apiSchemas = ["MaterialBindingAPI"]
            )
            {
                float3[] extent = [(-50, 0, -50), (50, 8, 50)]
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [2, 1, 0, 1, 2, 3, 6, 5, 4, 5, 6, 7, 10, 9, 8, 9, 10, 11, 14, 13, 12, 13, 14, 15, 18, 17, 16, 17, 18, 19, 22, 21, 20, 21, 22, 23, 26, 25, 24, 25, 26, 27, 30, 29, 28, 29, 30, 31, 34, 33, 32, 33, 34, 35, 38, 37, 36, 37, 38, 39, 42, 41, 40, 41, 42, 43, 46, 45, 44, 45, 46, 47]
                rel material:binding = </World/Looks/pavement> (
                    bindMaterialAs = "weakerThanDescendants"
                )
                normal3f[] normals = [(0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0.97014254, 0.24253564, -0), (0.97014254, 0.24253564, -0), (0.97014254, 0.24253564, -0), (0.97014254, 0.24253564, -0), (0.97014254, 0.24253564, -0), (0.97014254, 0.24253564, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-0.97014254, 0.24253564, -0), (-0.97014254, 0.24253564, -0), (-0.97014254, 0.24253564, -0), (-0.97014254, 0.24253564, -0), (-0.97014254, 0.24253564, -0), (-0.97014254, 0.24253564, -0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1)] (
                    interpolation = "faceVarying"
                )
                point3f[] points = [(47, 8, -50), (50, 8, -50), (47, 8, 50), (50, 8, 50), (-50, 0, 50), (-45, 0, 50), (-50, 0, -50), (-45, 0, -50), (-45, 0, 50), (-47, 8, 50), (-45, 0, -50), (-47, 8, -50), (45, 0, -50), (45, 0, 50), (50, 0, -50), (50, 0, 50), (-50, 0, -50), (-45, 0, -50), (-50, 8, -50), (-47, 8, -50), (-50, 8, 50), (-50, 0, 50), (-50, 8, -50), (-50, 0, -50), (-45, 0, 50), (-50, 0, 50), (-47, 8, 50), (-50, 8, 50), (45, 0, 50), (45, 0, -50), (47, 8, 50), (47, 8, -50), (50, 0, 50), (45, 0, 50), (50, 8, 50), (47, 8, 50), (-50, 8, 50), (-50, 8, -50), (-47, 8, 50), (-47, 8, -50), (50, 0, 50), (50, 8, 50), (50, 0, -50), (50, 8, -50), (45, 0, -50), (50, 0, -50), (47, 8, -50), (50, 8, -50)]
                texCoord2f[] primvars:st = [(18.503937, -19.68504), (19.68504, 19.68504), (18.503937, 19.68504), (19.68504, 19.68504), (18.503937, -19.68504), (19.68504, -19.68504), (19.68504, 19.68504), (17.716536, -19.68504), (19.68504, -19.68504), (17.716536, -19.68504), (19.68504, 19.68504), (17.716536, 19.68504), (19.68504, 4.296891), (-19.68504, 7.543431), (-19.68504, 4.296891), (-19.68504, 7.543431), (19.68504, 4.296891), (19.68504, 7.543431), (-19.68504, 19.68504), (-17.716536, -19.68504), (-17.716536, 19.68504), (-17.716536, -19.68504), (-19.68504, 19.68504), (-19.68504, -19.68504), (19.68504, 3.1496062), (17.716536, 0), (19.68504, 0), (17.716536, 0), (19.68504, 3.1496062), (18.503937, 3.1496062), (-19.68504, 3.1496062), (19.68504, 0), (19.68504, 3.1496062), (19.68504, 0), (-19.68504, 3.1496062), (-19.68504, 0), (-18.503937, 3.1496062), (-19.68504, 0), (-17.716536, 0), (-19.68504, 0), (-18.503937, 3.1496062), (-19.68504, 3.1496062), (19.68504, 7.543431), (-19.68504, 4.296891), (19.68504, 4.296891), (-19.68504, 4.296891), (19.68504, 7.543431), (-19.68504, 7.543431), (19.68504, 3.1496062), (17.716536, 0), (19.68504, 0), (17.716536, 0), (19.68504, 3.1496062), (18.503937, 3.1496062), (-18.503937, -19.68504), (-19.68504, 19.68504), (-19.68504, -19.68504), (-19.68504, 19.68504), (-18.503937, -19.68504), (-18.503937, 19.68504), (19.68504, 0), (-19.68504, 3.1496062), (-19.68504, 0), (-19.68504, 3.1496062), (19.68504, 0), (19.68504, 3.1496062), (-18.503937, 3.1496062), (-19.68504, 0), (-17.716536, 0), (-19.68504, 0), (-18.503937, 3.1496062), (-19.68504, 3.1496062)] (
                    interpolation = "faceVarying"
                )
                uniform token subdivisionScheme = "none"
                float3 xformOp:rotateXYZ = (0, 90, 0)
                float3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (50, 0, -50)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def Mesh "road_straightBarrier_19" (
                apiSchemas = ["MaterialBindingAPI"]
            )
            {
                float3[] extent = [(-50, 0, -50), (50, 8, 50)]
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [2, 1, 0, 1, 2, 3, 6, 5, 4, 5, 6, 7, 10, 9, 8, 9, 10, 11, 14, 13, 12, 13, 14, 15, 18, 17, 16, 17, 18, 19, 22, 21, 20, 21, 22, 23, 26, 25, 24, 25, 26, 27, 30, 29, 28, 29, 30, 31, 34, 33, 32, 33, 34, 35, 38, 37, 36, 37, 38, 39, 42, 41, 40, 41, 42, 43, 46, 45, 44, 45, 46, 47]
                rel material:binding = </World/Looks/pavement> (
                    bindMaterialAs = "weakerThanDescendants"
                )
                normal3f[] normals = [(0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0.97014254, 0.24253564, -0), (0.97014254, 0.24253564, -0), (0.97014254, 0.24253564, -0), (0.97014254, 0.24253564, -0), (0.97014254, 0.24253564, -0), (0.97014254, 0.24253564, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-0.97014254, 0.24253564, -0), (-0.97014254, 0.24253564, -0), (-0.97014254, 0.24253564, -0), (-0.97014254, 0.24253564, -0), (-0.97014254, 0.24253564, -0), (-0.97014254, 0.24253564, -0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1)] (
                    interpolation = "faceVarying"
                )
                point3f[] points = [(47, 8, -50), (50, 8, -50), (47, 8, 50), (50, 8, 50), (-50, 0, 50), (-45, 0, 50), (-50, 0, -50), (-45, 0, -50), (-45, 0, 50), (-47, 8, 50), (-45, 0, -50), (-47, 8, -50), (45, 0, -50), (45, 0, 50), (50, 0, -50), (50, 0, 50), (-50, 0, -50), (-45, 0, -50), (-50, 8, -50), (-47, 8, -50), (-50, 8, 50), (-50, 0, 50), (-50, 8, -50), (-50, 0, -50), (-45, 0, 50), (-50, 0, 50), (-47, 8, 50), (-50, 8, 50), (45, 0, 50), (45, 0, -50), (47, 8, 50), (47, 8, -50), (50, 0, 50), (45, 0, 50), (50, 8, 50), (47, 8, 50), (-50, 8, 50), (-50, 8, -50), (-47, 8, 50), (-47, 8, -50), (50, 0, 50), (50, 8, 50), (50, 0, -50), (50, 8, -50), (45, 0, -50), (50, 0, -50), (47, 8, -50), (50, 8, -50)]
                texCoord2f[] primvars:st = [(18.503937, -19.68504), (19.68504, 19.68504), (18.503937, 19.68504), (19.68504, 19.68504), (18.503937, -19.68504), (19.68504, -19.68504), (19.68504, 19.68504), (17.716536, -19.68504), (19.68504, -19.68504), (17.716536, -19.68504), (19.68504, 19.68504), (17.716536, 19.68504), (19.68504, 4.296891), (-19.68504, 7.543431), (-19.68504, 4.296891), (-19.68504, 7.543431), (19.68504, 4.296891), (19.68504, 7.543431), (-19.68504, 19.68504), (-17.716536, -19.68504), (-17.716536, 19.68504), (-17.716536, -19.68504), (-19.68504, 19.68504), (-19.68504, -19.68504), (19.68504, 3.1496062), (17.716536, 0), (19.68504, 0), (17.716536, 0), (19.68504, 3.1496062), (18.503937, 3.1496062), (-19.68504, 3.1496062), (19.68504, 0), (19.68504, 3.1496062), (19.68504, 0), (-19.68504, 3.1496062), (-19.68504, 0), (-18.503937, 3.1496062), (-19.68504, 0), (-17.716536, 0), (-19.68504, 0), (-18.503937, 3.1496062), (-19.68504, 3.1496062), (19.68504, 7.543431), (-19.68504, 4.296891), (19.68504, 4.296891), (-19.68504, 4.296891), (19.68504, 7.543431), (-19.68504, 7.543431), (19.68504, 3.1496062), (17.716536, 0), (19.68504, 0), (17.716536, 0), (19.68504, 3.1496062), (18.503937, 3.1496062), (-18.503937, -19.68504), (-19.68504, 19.68504), (-19.68504, -19.68504), (-19.68504, 19.68504), (-18.503937, -19.68504), (-18.503937, 19.68504), (19.68504, 0), (-19.68504, 3.1496062), (-19.68504, 0), (-19.68504, 3.1496062), (19.68504, 0), (19.68504, 3.1496062), (-18.503937, 3.1496062), (-19.68504, 0), (-17.716536, 0), (-19.68504, 0), (-18.503937, 3.1496062), (-19.68504, 3.1496062)] (
                    interpolation = "faceVarying"
                )
                uniform token subdivisionScheme = "none"
                float3 xformOp:rotateXYZ = (0, 90, 0)
                float3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (150, 0, 50)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def Mesh "road_straightBarrier_20" (
                apiSchemas = ["MaterialBindingAPI"]
            )
            {
                float3[] extent = [(-50, 0, -50), (50, 8, 50)]
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [2, 1, 0, 1, 2, 3, 6, 5, 4, 5, 6, 7, 10, 9, 8, 9, 10, 11, 14, 13, 12, 13, 14, 15, 18, 17, 16, 17, 18, 19, 22, 21, 20, 21, 22, 23, 26, 25, 24, 25, 26, 27, 30, 29, 28, 29, 30, 31, 34, 33, 32, 33, 34, 35, 38, 37, 36, 37, 38, 39, 42, 41, 40, 41, 42, 43, 46, 45, 44, 45, 46, 47]
                rel material:binding = </World/Looks/pavement> (
                    bindMaterialAs = "weakerThanDescendants"
                )
                normal3f[] normals = [(0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0.97014254, 0.24253564, -0), (0.97014254, 0.24253564, -0), (0.97014254, 0.24253564, -0), (0.97014254, 0.24253564, -0), (0.97014254, 0.24253564, -0), (0.97014254, 0.24253564, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-0.97014254, 0.24253564, -0), (-0.97014254, 0.24253564, -0), (-0.97014254, 0.24253564, -0), (-0.97014254, 0.24253564, -0), (-0.97014254, 0.24253564, -0), (-0.97014254, 0.24253564, -0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1)] (
                    interpolation = "faceVarying"
                )
                point3f[] points = [(47, 8, -50), (50, 8, -50), (47, 8, 50), (50, 8, 50), (-50, 0, 50), (-45, 0, 50), (-50, 0, -50), (-45, 0, -50), (-45, 0, 50), (-47, 8, 50), (-45, 0, -50), (-47, 8, -50), (45, 0, -50), (45, 0, 50), (50, 0, -50), (50, 0, 50), (-50, 0, -50), (-45, 0, -50), (-50, 8, -50), (-47, 8, -50), (-50, 8, 50), (-50, 0, 50), (-50, 8, -50), (-50, 0, -50), (-45, 0, 50), (-50, 0, 50), (-47, 8, 50), (-50, 8, 50), (45, 0, 50), (45, 0, -50), (47, 8, 50), (47, 8, -50), (50, 0, 50), (45, 0, 50), (50, 8, 50), (47, 8, 50), (-50, 8, 50), (-50, 8, -50), (-47, 8, 50), (-47, 8, -50), (50, 0, 50), (50, 8, 50), (50, 0, -50), (50, 8, -50), (45, 0, -50), (50, 0, -50), (47, 8, -50), (50, 8, -50)]
                texCoord2f[] primvars:st = [(18.503937, -19.68504), (19.68504, 19.68504), (18.503937, 19.68504), (19.68504, 19.68504), (18.503937, -19.68504), (19.68504, -19.68504), (19.68504, 19.68504), (17.716536, -19.68504), (19.68504, -19.68504), (17.716536, -19.68504), (19.68504, 19.68504), (17.716536, 19.68504), (19.68504, 4.296891), (-19.68504, 7.543431), (-19.68504, 4.296891), (-19.68504, 7.543431), (19.68504, 4.296891), (19.68504, 7.543431), (-19.68504, 19.68504), (-17.716536, -19.68504), (-17.716536, 19.68504), (-17.716536, -19.68504), (-19.68504, 19.68504), (-19.68504, -19.68504), (19.68504, 3.1496062), (17.716536, 0), (19.68504, 0), (17.716536, 0), (19.68504, 3.1496062), (18.503937, 3.1496062), (-19.68504, 3.1496062), (19.68504, 0), (19.68504, 3.1496062), (19.68504, 0), (-19.68504, 3.1496062), (-19.68504, 0), (-18.503937, 3.1496062), (-19.68504, 0), (-17.716536, 0), (-19.68504, 0), (-18.503937, 3.1496062), (-19.68504, 3.1496062), (19.68504, 7.543431), (-19.68504, 4.296891), (19.68504, 4.296891), (-19.68504, 4.296891), (19.68504, 7.543431), (-19.68504, 7.543431), (19.68504, 3.1496062), (17.716536, 0), (19.68504, 0), (17.716536, 0), (19.68504, 3.1496062), (18.503937, 3.1496062), (-18.503937, -19.68504), (-19.68504, 19.68504), (-19.68504, -19.68504), (-19.68504, 19.68504), (-18.503937, -19.68504), (-18.503937, 19.68504), (19.68504, 0), (-19.68504, 3.1496062), (-19.68504, 0), (-19.68504, 3.1496062), (19.68504, 0), (19.68504, 3.1496062), (-18.503937, 3.1496062), (-19.68504, 0), (-17.716536, 0), (-19.68504, 0), (-18.503937, 3.1496062), (-19.68504, 3.1496062)] (
                    interpolation = "faceVarying"
                )
                uniform token subdivisionScheme = "none"
                float3 xformOp:rotateXYZ = (0, 90, 0)
                float3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (150, 0, -50)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def Mesh "road_straightBarrier_21" (
                apiSchemas = ["MaterialBindingAPI"]
            )
            {
                float3[] extent = [(-50, 0, -50), (50, 8, 50)]
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [2, 1, 0, 1, 2, 3, 6, 5, 4, 5, 6, 7, 10, 9, 8, 9, 10, 11, 14, 13, 12, 13, 14, 15, 18, 17, 16, 17, 18, 19, 22, 21, 20, 21, 22, 23, 26, 25, 24, 25, 26, 27, 30, 29, 28, 29, 30, 31, 34, 33, 32, 33, 34, 35, 38, 37, 36, 37, 38, 39, 42, 41, 40, 41, 42, 43, 46, 45, 44, 45, 46, 47]
                rel material:binding = </World/Looks/pavement> (
                    bindMaterialAs = "weakerThanDescendants"
                )
                normal3f[] normals = [(0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0.97014254, 0.24253564, -0), (0.97014254, 0.24253564, -0), (0.97014254, 0.24253564, -0), (0.97014254, 0.24253564, -0), (0.97014254, 0.24253564, -0), (0.97014254, 0.24253564, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-0.97014254, 0.24253564, -0), (-0.97014254, 0.24253564, -0), (-0.97014254, 0.24253564, -0), (-0.97014254, 0.24253564, -0), (-0.97014254, 0.24253564, -0), (-0.97014254, 0.24253564, -0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1)] (
                    interpolation = "faceVarying"
                )
                point3f[] points = [(47, 8, -50), (50, 8, -50), (47, 8, 50), (50, 8, 50), (-50, 0, 50), (-45, 0, 50), (-50, 0, -50), (-45, 0, -50), (-45, 0, 50), (-47, 8, 50), (-45, 0, -50), (-47, 8, -50), (45, 0, -50), (45, 0, 50), (50, 0, -50), (50, 0, 50), (-50, 0, -50), (-45, 0, -50), (-50, 8, -50), (-47, 8, -50), (-50, 8, 50), (-50, 0, 50), (-50, 8, -50), (-50, 0, -50), (-45, 0, 50), (-50, 0, 50), (-47, 8, 50), (-50, 8, 50), (45, 0, 50), (45, 0, -50), (47, 8, 50), (47, 8, -50), (50, 0, 50), (45, 0, 50), (50, 8, 50), (47, 8, 50), (-50, 8, 50), (-50, 8, -50), (-47, 8, 50), (-47, 8, -50), (50, 0, 50), (50, 8, 50), (50, 0, -50), (50, 8, -50), (45, 0, -50), (50, 0, -50), (47, 8, -50), (50, 8, -50)]
                texCoord2f[] primvars:st = [(18.503937, -19.68504), (19.68504, 19.68504), (18.503937, 19.68504), (19.68504, 19.68504), (18.503937, -19.68504), (19.68504, -19.68504), (19.68504, 19.68504), (17.716536, -19.68504), (19.68504, -19.68504), (17.716536, -19.68504), (19.68504, 19.68504), (17.716536, 19.68504), (19.68504, 4.296891), (-19.68504, 7.543431), (-19.68504, 4.296891), (-19.68504, 7.543431), (19.68504, 4.296891), (19.68504, 7.543431), (-19.68504, 19.68504), (-17.716536, -19.68504), (-17.716536, 19.68504), (-17.716536, -19.68504), (-19.68504, 19.68504), (-19.68504, -19.68504), (19.68504, 3.1496062), (17.716536, 0), (19.68504, 0), (17.716536, 0), (19.68504, 3.1496062), (18.503937, 3.1496062), (-19.68504, 3.1496062), (19.68504, 0), (19.68504, 3.1496062), (19.68504, 0), (-19.68504, 3.1496062), (-19.68504, 0), (-18.503937, 3.1496062), (-19.68504, 0), (-17.716536, 0), (-19.68504, 0), (-18.503937, 3.1496062), (-19.68504, 3.1496062), (19.68504, 7.543431), (-19.68504, 4.296891), (19.68504, 4.296891), (-19.68504, 4.296891), (19.68504, 7.543431), (-19.68504, 7.543431), (19.68504, 3.1496062), (17.716536, 0), (19.68504, 0), (17.716536, 0), (19.68504, 3.1496062), (18.503937, 3.1496062), (-18.503937, -19.68504), (-19.68504, 19.68504), (-19.68504, -19.68504), (-19.68504, 19.68504), (-18.503937, -19.68504), (-18.503937, 19.68504), (19.68504, 0), (-19.68504, 3.1496062), (-19.68504, 0), (-19.68504, 3.1496062), (19.68504, 0), (19.68504, 3.1496062), (-18.503937, 3.1496062), (-19.68504, 0), (-17.716536, 0), (-19.68504, 0), (-18.503937, 3.1496062), (-19.68504, 3.1496062)] (
                    interpolation = "faceVarying"
                )
                uniform token subdivisionScheme = "none"
                float3 xformOp:rotateXYZ = (0, 90, 0)
                float3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (250, 0, 50)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def Mesh "road_straightBarrier_22" (
                apiSchemas = ["MaterialBindingAPI"]
            )
            {
                float3[] extent = [(-50, 0, -50), (50, 8, 50)]
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [2, 1, 0, 1, 2, 3, 6, 5, 4, 5, 6, 7, 10, 9, 8, 9, 10, 11, 14, 13, 12, 13, 14, 15, 18, 17, 16, 17, 18, 19, 22, 21, 20, 21, 22, 23, 26, 25, 24, 25, 26, 27, 30, 29, 28, 29, 30, 31, 34, 33, 32, 33, 34, 35, 38, 37, 36, 37, 38, 39, 42, 41, 40, 41, 42, 43, 46, 45, 44, 45, 46, 47]
                rel material:binding = </World/Looks/pavement> (
                    bindMaterialAs = "weakerThanDescendants"
                )
                normal3f[] normals = [(0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0.97014254, 0.24253564, -0), (0.97014254, 0.24253564, -0), (0.97014254, 0.24253564, -0), (0.97014254, 0.24253564, -0), (0.97014254, 0.24253564, -0), (0.97014254, 0.24253564, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-0.97014254, 0.24253564, -0), (-0.97014254, 0.24253564, -0), (-0.97014254, 0.24253564, -0), (-0.97014254, 0.24253564, -0), (-0.97014254, 0.24253564, -0), (-0.97014254, 0.24253564, -0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1)] (
                    interpolation = "faceVarying"
                )
                point3f[] points = [(47, 8, -50), (50, 8, -50), (47, 8, 50), (50, 8, 50), (-50, 0, 50), (-45, 0, 50), (-50, 0, -50), (-45, 0, -50), (-45, 0, 50), (-47, 8, 50), (-45, 0, -50), (-47, 8, -50), (45, 0, -50), (45, 0, 50), (50, 0, -50), (50, 0, 50), (-50, 0, -50), (-45, 0, -50), (-50, 8, -50), (-47, 8, -50), (-50, 8, 50), (-50, 0, 50), (-50, 8, -50), (-50, 0, -50), (-45, 0, 50), (-50, 0, 50), (-47, 8, 50), (-50, 8, 50), (45, 0, 50), (45, 0, -50), (47, 8, 50), (47, 8, -50), (50, 0, 50), (45, 0, 50), (50, 8, 50), (47, 8, 50), (-50, 8, 50), (-50, 8, -50), (-47, 8, 50), (-47, 8, -50), (50, 0, 50), (50, 8, 50), (50, 0, -50), (50, 8, -50), (45, 0, -50), (50, 0, -50), (47, 8, -50), (50, 8, -50)]
                texCoord2f[] primvars:st = [(18.503937, -19.68504), (19.68504, 19.68504), (18.503937, 19.68504), (19.68504, 19.68504), (18.503937, -19.68504), (19.68504, -19.68504), (19.68504, 19.68504), (17.716536, -19.68504), (19.68504, -19.68504), (17.716536, -19.68504), (19.68504, 19.68504), (17.716536, 19.68504), (19.68504, 4.296891), (-19.68504, 7.543431), (-19.68504, 4.296891), (-19.68504, 7.543431), (19.68504, 4.296891), (19.68504, 7.543431), (-19.68504, 19.68504), (-17.716536, -19.68504), (-17.716536, 19.68504), (-17.716536, -19.68504), (-19.68504, 19.68504), (-19.68504, -19.68504), (19.68504, 3.1496062), (17.716536, 0), (19.68504, 0), (17.716536, 0), (19.68504, 3.1496062), (18.503937, 3.1496062), (-19.68504, 3.1496062), (19.68504, 0), (19.68504, 3.1496062), (19.68504, 0), (-19.68504, 3.1496062), (-19.68504, 0), (-18.503937, 3.1496062), (-19.68504, 0), (-17.716536, 0), (-19.68504, 0), (-18.503937, 3.1496062), (-19.68504, 3.1496062), (19.68504, 7.543431), (-19.68504, 4.296891), (19.68504, 4.296891), (-19.68504, 4.296891), (19.68504, 7.543431), (-19.68504, 7.543431), (19.68504, 3.1496062), (17.716536, 0), (19.68504, 0), (17.716536, 0), (19.68504, 3.1496062), (18.503937, 3.1496062), (-18.503937, -19.68504), (-19.68504, 19.68504), (-19.68504, -19.68504), (-19.68504, 19.68504), (-18.503937, -19.68504), (-18.503937, 19.68504), (19.68504, 0), (-19.68504, 3.1496062), (-19.68504, 0), (-19.68504, 3.1496062), (19.68504, 0), (19.68504, 3.1496062), (-18.503937, 3.1496062), (-19.68504, 0), (-17.716536, 0), (-19.68504, 0), (-18.503937, 3.1496062), (-19.68504, 3.1496062)] (
                    interpolation = "faceVarying"
                )
                uniform token subdivisionScheme = "none"
                float3 xformOp:rotateXYZ = (0, 90, 0)
                float3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (250, 0, -50)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def Mesh "road_straightBarrier_23" (
                apiSchemas = ["MaterialBindingAPI"]
            )
            {
                float3[] extent = [(-50, 0, -50), (50, 8, 50)]
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [2, 1, 0, 1, 2, 3, 6, 5, 4, 5, 6, 7, 10, 9, 8, 9, 10, 11, 14, 13, 12, 13, 14, 15, 18, 17, 16, 17, 18, 19, 22, 21, 20, 21, 22, 23, 26, 25, 24, 25, 26, 27, 30, 29, 28, 29, 30, 31, 34, 33, 32, 33, 34, 35, 38, 37, 36, 37, 38, 39, 42, 41, 40, 41, 42, 43, 46, 45, 44, 45, 46, 47]
                rel material:binding = </World/Looks/pavement> (
                    bindMaterialAs = "weakerThanDescendants"
                )
                normal3f[] normals = [(0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0.97014254, 0.24253564, -0), (0.97014254, 0.24253564, -0), (0.97014254, 0.24253564, -0), (0.97014254, 0.24253564, -0), (0.97014254, 0.24253564, -0), (0.97014254, 0.24253564, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-0.97014254, 0.24253564, -0), (-0.97014254, 0.24253564, -0), (-0.97014254, 0.24253564, -0), (-0.97014254, 0.24253564, -0), (-0.97014254, 0.24253564, -0), (-0.97014254, 0.24253564, -0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1)] (
                    interpolation = "faceVarying"
                )
                point3f[] points = [(47, 8, -50), (50, 8, -50), (47, 8, 50), (50, 8, 50), (-50, 0, 50), (-45, 0, 50), (-50, 0, -50), (-45, 0, -50), (-45, 0, 50), (-47, 8, 50), (-45, 0, -50), (-47, 8, -50), (45, 0, -50), (45, 0, 50), (50, 0, -50), (50, 0, 50), (-50, 0, -50), (-45, 0, -50), (-50, 8, -50), (-47, 8, -50), (-50, 8, 50), (-50, 0, 50), (-50, 8, -50), (-50, 0, -50), (-45, 0, 50), (-50, 0, 50), (-47, 8, 50), (-50, 8, 50), (45, 0, 50), (45, 0, -50), (47, 8, 50), (47, 8, -50), (50, 0, 50), (45, 0, 50), (50, 8, 50), (47, 8, 50), (-50, 8, 50), (-50, 8, -50), (-47, 8, 50), (-47, 8, -50), (50, 0, 50), (50, 8, 50), (50, 0, -50), (50, 8, -50), (45, 0, -50), (50, 0, -50), (47, 8, -50), (50, 8, -50)]
                texCoord2f[] primvars:st = [(18.503937, -19.68504), (19.68504, 19.68504), (18.503937, 19.68504), (19.68504, 19.68504), (18.503937, -19.68504), (19.68504, -19.68504), (19.68504, 19.68504), (17.716536, -19.68504), (19.68504, -19.68504), (17.716536, -19.68504), (19.68504, 19.68504), (17.716536, 19.68504), (19.68504, 4.296891), (-19.68504, 7.543431), (-19.68504, 4.296891), (-19.68504, 7.543431), (19.68504, 4.296891), (19.68504, 7.543431), (-19.68504, 19.68504), (-17.716536, -19.68504), (-17.716536, 19.68504), (-17.716536, -19.68504), (-19.68504, 19.68504), (-19.68504, -19.68504), (19.68504, 3.1496062), (17.716536, 0), (19.68504, 0), (17.716536, 0), (19.68504, 3.1496062), (18.503937, 3.1496062), (-19.68504, 3.1496062), (19.68504, 0), (19.68504, 3.1496062), (19.68504, 0), (-19.68504, 3.1496062), (-19.68504, 0), (-18.503937, 3.1496062), (-19.68504, 0), (-17.716536, 0), (-19.68504, 0), (-18.503937, 3.1496062), (-19.68504, 3.1496062), (19.68504, 7.543431), (-19.68504, 4.296891), (19.68504, 4.296891), (-19.68504, 4.296891), (19.68504, 7.543431), (-19.68504, 7.543431), (19.68504, 3.1496062), (17.716536, 0), (19.68504, 0), (17.716536, 0), (19.68504, 3.1496062), (18.503937, 3.1496062), (-18.503937, -19.68504), (-19.68504, 19.68504), (-19.68504, -19.68504), (-19.68504, 19.68504), (-18.503937, -19.68504), (-18.503937, 19.68504), (19.68504, 0), (-19.68504, 3.1496062), (-19.68504, 0), (-19.68504, 3.1496062), (19.68504, 0), (19.68504, 3.1496062), (-18.503937, 3.1496062), (-19.68504, 0), (-17.716536, 0), (-19.68504, 0), (-18.503937, 3.1496062), (-19.68504, 3.1496062)] (
                    interpolation = "faceVarying"
                )
                uniform token subdivisionScheme = "none"
                float3 xformOp:rotateXYZ = (0, 90, 0)
                float3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (350, 0, 50)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def Mesh "road_straightBarrier_24" (
                apiSchemas = ["MaterialBindingAPI"]
            )
            {
                float3[] extent = [(-50, 0, -50), (50, 8, 50)]
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [2, 1, 0, 1, 2, 3, 6, 5, 4, 5, 6, 7, 10, 9, 8, 9, 10, 11, 14, 13, 12, 13, 14, 15, 18, 17, 16, 17, 18, 19, 22, 21, 20, 21, 22, 23, 26, 25, 24, 25, 26, 27, 30, 29, 28, 29, 30, 31, 34, 33, 32, 33, 34, 35, 38, 37, 36, 37, 38, 39, 42, 41, 40, 41, 42, 43, 46, 45, 44, 45, 46, 47]
                rel material:binding = </World/Looks/pavement> (
                    bindMaterialAs = "weakerThanDescendants"
                )
                normal3f[] normals = [(0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0.97014254, 0.24253564, -0), (0.97014254, 0.24253564, -0), (0.97014254, 0.24253564, -0), (0.97014254, 0.24253564, -0), (0.97014254, 0.24253564, -0), (0.97014254, 0.24253564, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-0.97014254, 0.24253564, -0), (-0.97014254, 0.24253564, -0), (-0.97014254, 0.24253564, -0), (-0.97014254, 0.24253564, -0), (-0.97014254, 0.24253564, -0), (-0.97014254, 0.24253564, -0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1)] (
                    interpolation = "faceVarying"
                )
                point3f[] points = [(47, 8, -50), (50, 8, -50), (47, 8, 50), (50, 8, 50), (-50, 0, 50), (-45, 0, 50), (-50, 0, -50), (-45, 0, -50), (-45, 0, 50), (-47, 8, 50), (-45, 0, -50), (-47, 8, -50), (45, 0, -50), (45, 0, 50), (50, 0, -50), (50, 0, 50), (-50, 0, -50), (-45, 0, -50), (-50, 8, -50), (-47, 8, -50), (-50, 8, 50), (-50, 0, 50), (-50, 8, -50), (-50, 0, -50), (-45, 0, 50), (-50, 0, 50), (-47, 8, 50), (-50, 8, 50), (45, 0, 50), (45, 0, -50), (47, 8, 50), (47, 8, -50), (50, 0, 50), (45, 0, 50), (50, 8, 50), (47, 8, 50), (-50, 8, 50), (-50, 8, -50), (-47, 8, 50), (-47, 8, -50), (50, 0, 50), (50, 8, 50), (50, 0, -50), (50, 8, -50), (45, 0, -50), (50, 0, -50), (47, 8, -50), (50, 8, -50)]
                texCoord2f[] primvars:st = [(18.503937, -19.68504), (19.68504, 19.68504), (18.503937, 19.68504), (19.68504, 19.68504), (18.503937, -19.68504), (19.68504, -19.68504), (19.68504, 19.68504), (17.716536, -19.68504), (19.68504, -19.68504), (17.716536, -19.68504), (19.68504, 19.68504), (17.716536, 19.68504), (19.68504, 4.296891), (-19.68504, 7.543431), (-19.68504, 4.296891), (-19.68504, 7.543431), (19.68504, 4.296891), (19.68504, 7.543431), (-19.68504, 19.68504), (-17.716536, -19.68504), (-17.716536, 19.68504), (-17.716536, -19.68504), (-19.68504, 19.68504), (-19.68504, -19.68504), (19.68504, 3.1496062), (17.716536, 0), (19.68504, 0), (17.716536, 0), (19.68504, 3.1496062), (18.503937, 3.1496062), (-19.68504, 3.1496062), (19.68504, 0), (19.68504, 3.1496062), (19.68504, 0), (-19.68504, 3.1496062), (-19.68504, 0), (-18.503937, 3.1496062), (-19.68504, 0), (-17.716536, 0), (-19.68504, 0), (-18.503937, 3.1496062), (-19.68504, 3.1496062), (19.68504, 7.543431), (-19.68504, 4.296891), (19.68504, 4.296891), (-19.68504, 4.296891), (19.68504, 7.543431), (-19.68504, 7.543431), (19.68504, 3.1496062), (17.716536, 0), (19.68504, 0), (17.716536, 0), (19.68504, 3.1496062), (18.503937, 3.1496062), (-18.503937, -19.68504), (-19.68504, 19.68504), (-19.68504, -19.68504), (-19.68504, 19.68504), (-18.503937, -19.68504), (-18.503937, 19.68504), (19.68504, 0), (-19.68504, 3.1496062), (-19.68504, 0), (-19.68504, 3.1496062), (19.68504, 0), (19.68504, 3.1496062), (-18.503937, 3.1496062), (-19.68504, 0), (-17.716536, 0), (-19.68504, 0), (-18.503937, 3.1496062), (-19.68504, 3.1496062)] (
                    interpolation = "faceVarying"
                )
                uniform token subdivisionScheme = "none"
                float3 xformOp:rotateXYZ = (0, 90, 0)
                float3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (350, 0, -50)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def Mesh "road_straightBarrier_25" (
                apiSchemas = ["MaterialBindingAPI"]
            )
            {
                float3[] extent = [(-50, 0, -50), (50, 8, 50)]
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [2, 1, 0, 1, 2, 3, 6, 5, 4, 5, 6, 7, 10, 9, 8, 9, 10, 11, 14, 13, 12, 13, 14, 15, 18, 17, 16, 17, 18, 19, 22, 21, 20, 21, 22, 23, 26, 25, 24, 25, 26, 27, 30, 29, 28, 29, 30, 31, 34, 33, 32, 33, 34, 35, 38, 37, 36, 37, 38, 39, 42, 41, 40, 41, 42, 43, 46, 45, 44, 45, 46, 47]
                rel material:binding = </World/Looks/pavement> (
                    bindMaterialAs = "weakerThanDescendants"
                )
                normal3f[] normals = [(0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0.97014254, 0.24253564, -0), (0.97014254, 0.24253564, -0), (0.97014254, 0.24253564, -0), (0.97014254, 0.24253564, -0), (0.97014254, 0.24253564, -0), (0.97014254, 0.24253564, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-0.97014254, 0.24253564, -0), (-0.97014254, 0.24253564, -0), (-0.97014254, 0.24253564, -0), (-0.97014254, 0.24253564, -0), (-0.97014254, 0.24253564, -0), (-0.97014254, 0.24253564, -0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1)] (
                    interpolation = "faceVarying"
                )
                point3f[] points = [(47, 8, -50), (50, 8, -50), (47, 8, 50), (50, 8, 50), (-50, 0, 50), (-45, 0, 50), (-50, 0, -50), (-45, 0, -50), (-45, 0, 50), (-47, 8, 50), (-45, 0, -50), (-47, 8, -50), (45, 0, -50), (45, 0, 50), (50, 0, -50), (50, 0, 50), (-50, 0, -50), (-45, 0, -50), (-50, 8, -50), (-47, 8, -50), (-50, 8, 50), (-50, 0, 50), (-50, 8, -50), (-50, 0, -50), (-45, 0, 50), (-50, 0, 50), (-47, 8, 50), (-50, 8, 50), (45, 0, 50), (45, 0, -50), (47, 8, 50), (47, 8, -50), (50, 0, 50), (45, 0, 50), (50, 8, 50), (47, 8, 50), (-50, 8, 50), (-50, 8, -50), (-47, 8, 50), (-47, 8, -50), (50, 0, 50), (50, 8, 50), (50, 0, -50), (50, 8, -50), (45, 0, -50), (50, 0, -50), (47, 8, -50), (50, 8, -50)]
                texCoord2f[] primvars:st = [(18.503937, -19.68504), (19.68504, 19.68504), (18.503937, 19.68504), (19.68504, 19.68504), (18.503937, -19.68504), (19.68504, -19.68504), (19.68504, 19.68504), (17.716536, -19.68504), (19.68504, -19.68504), (17.716536, -19.68504), (19.68504, 19.68504), (17.716536, 19.68504), (19.68504, 4.296891), (-19.68504, 7.543431), (-19.68504, 4.296891), (-19.68504, 7.543431), (19.68504, 4.296891), (19.68504, 7.543431), (-19.68504, 19.68504), (-17.716536, -19.68504), (-17.716536, 19.68504), (-17.716536, -19.68504), (-19.68504, 19.68504), (-19.68504, -19.68504), (19.68504, 3.1496062), (17.716536, 0), (19.68504, 0), (17.716536, 0), (19.68504, 3.1496062), (18.503937, 3.1496062), (-19.68504, 3.1496062), (19.68504, 0), (19.68504, 3.1496062), (19.68504, 0), (-19.68504, 3.1496062), (-19.68504, 0), (-18.503937, 3.1496062), (-19.68504, 0), (-17.716536, 0), (-19.68504, 0), (-18.503937, 3.1496062), (-19.68504, 3.1496062), (19.68504, 7.543431), (-19.68504, 4.296891), (19.68504, 4.296891), (-19.68504, 4.296891), (19.68504, 7.543431), (-19.68504, 7.543431), (19.68504, 3.1496062), (17.716536, 0), (19.68504, 0), (17.716536, 0), (19.68504, 3.1496062), (18.503937, 3.1496062), (-18.503937, -19.68504), (-19.68504, 19.68504), (-19.68504, -19.68504), (-19.68504, 19.68504), (-18.503937, -19.68504), (-18.503937, 19.68504), (19.68504, 0), (-19.68504, 3.1496062), (-19.68504, 0), (-19.68504, 3.1496062), (19.68504, 0), (19.68504, 3.1496062), (-18.503937, 3.1496062), (-19.68504, 0), (-17.716536, 0), (-19.68504, 0), (-18.503937, 3.1496062), (-19.68504, 3.1496062)] (
                    interpolation = "faceVarying"
                )
                uniform token subdivisionScheme = "none"
                float3 xformOp:rotateXYZ = (0, 90, 0)
                float3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (550, 0, -50)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def Mesh "road_straightBarrier_28" (
                apiSchemas = ["MaterialBindingAPI"]
            )
            {
                float3[] extent = [(-50, 0, -50), (50, 8, 50)]
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [2, 1, 0, 1, 2, 3, 6, 5, 4, 5, 6, 7, 10, 9, 8, 9, 10, 11, 14, 13, 12, 13, 14, 15, 18, 17, 16, 17, 18, 19, 22, 21, 20, 21, 22, 23, 26, 25, 24, 25, 26, 27, 30, 29, 28, 29, 30, 31, 34, 33, 32, 33, 34, 35, 38, 37, 36, 37, 38, 39, 42, 41, 40, 41, 42, 43, 46, 45, 44, 45, 46, 47]
                rel material:binding = </World/Looks/pavement> (
                    bindMaterialAs = "weakerThanDescendants"
                )
                normal3f[] normals = [(0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0.97014254, 0.24253564, -0), (0.97014254, 0.24253564, -0), (0.97014254, 0.24253564, -0), (0.97014254, 0.24253564, -0), (0.97014254, 0.24253564, -0), (0.97014254, 0.24253564, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (-0.97014254, 0.24253564, -0), (-0.97014254, 0.24253564, -0), (-0.97014254, 0.24253564, -0), (-0.97014254, 0.24253564, -0), (-0.97014254, 0.24253564, -0), (-0.97014254, 0.24253564, -0), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1)] (
                    interpolation = "faceVarying"
                )
                point3f[] points = [(47, 8, -50), (50, 8, -50), (47, 8, 50), (50, 8, 50), (-50, 0, 50), (-45, 0, 50), (-50, 0, -50), (-45, 0, -50), (-45, 0, 50), (-47, 8, 50), (-45, 0, -50), (-47, 8, -50), (45, 0, -50), (45, 0, 50), (50, 0, -50), (50, 0, 50), (-50, 0, -50), (-45, 0, -50), (-50, 8, -50), (-47, 8, -50), (-50, 8, 50), (-50, 0, 50), (-50, 8, -50), (-50, 0, -50), (-45, 0, 50), (-50, 0, 50), (-47, 8, 50), (-50, 8, 50), (45, 0, 50), (45, 0, -50), (47, 8, 50), (47, 8, -50), (50, 0, 50), (45, 0, 50), (50, 8, 50), (47, 8, 50), (-50, 8, 50), (-50, 8, -50), (-47, 8, 50), (-47, 8, -50), (50, 0, 50), (50, 8, 50), (50, 0, -50), (50, 8, -50), (45, 0, -50), (50, 0, -50), (47, 8, -50), (50, 8, -50)]
                texCoord2f[] primvars:st = [(18.503937, -19.68504), (19.68504, 19.68504), (18.503937, 19.68504), (19.68504, 19.68504), (18.503937, -19.68504), (19.68504, -19.68504), (19.68504, 19.68504), (17.716536, -19.68504), (19.68504, -19.68504), (17.716536, -19.68504), (19.68504, 19.68504), (17.716536, 19.68504), (19.68504, 4.296891), (-19.68504, 7.543431), (-19.68504, 4.296891), (-19.68504, 7.543431), (19.68504, 4.296891), (19.68504, 7.543431), (-19.68504, 19.68504), (-17.716536, -19.68504), (-17.716536, 19.68504), (-17.716536, -19.68504), (-19.68504, 19.68504), (-19.68504, -19.68504), (19.68504, 3.1496062), (17.716536, 0), (19.68504, 0), (17.716536, 0), (19.68504, 3.1496062), (18.503937, 3.1496062), (-19.68504, 3.1496062), (19.68504, 0), (19.68504, 3.1496062), (19.68504, 0), (-19.68504, 3.1496062), (-19.68504, 0), (-18.503937, 3.1496062), (-19.68504, 0), (-17.716536, 0), (-19.68504, 0), (-18.503937, 3.1496062), (-19.68504, 3.1496062), (19.68504, 7.543431), (-19.68504, 4.296891), (19.68504, 4.296891), (-19.68504, 4.296891), (19.68504, 7.543431), (-19.68504, 7.543431), (19.68504, 3.1496062), (17.716536, 0), (19.68504, 0), (17.716536, 0), (19.68504, 3.1496062), (18.503937, 3.1496062), (-18.503937, -19.68504), (-19.68504, 19.68504), (-19.68504, -19.68504), (-19.68504, 19.68504), (-18.503937, -19.68504), (-18.503937, 19.68504), (19.68504, 0), (-19.68504, 3.1496062), (-19.68504, 0), (-19.68504, 3.1496062), (19.68504, 0), (19.68504, 3.1496062), (-18.503937, 3.1496062), (-19.68504, 0), (-17.716536, 0), (-19.68504, 0), (-18.503937, 3.1496062), (-19.68504, 3.1496062)] (
                    interpolation = "faceVarying"
                )
                uniform token subdivisionScheme = "none"
                float3 xformOp:rotateXYZ = (0, 90, 0)
                float3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (550, 0, 50)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def Mesh "road_straight_18" (
                prepend specializes = </_osm_street_data>
            )
            {
                float3[] extent = [(-50, 0, -50), (50, 2, 50)]
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [2, 1, 0, 1, 2, 3, 6, 5, 4, 5, 6, 7, 10, 9, 8, 9, 10, 11, 14, 13, 12, 13, 14, 15, 18, 17, 16, 17, 18, 19, 22, 21, 20, 21, 22, 23, 26, 25, 24, 25, 26, 27, 94, 93, 92, 95, 93, 94, 95, 96, 93, 95, 97, 96, 95, 98, 97, 95, 99, 98, 95, 100, 99, 101, 100, 95, 101, 102, 100, 102, 101, 103, 106, 105, 104, 105, 106, 107, 105, 107, 108, 108, 107, 109, 109, 107, 110, 110, 107, 111, 111, 107, 112, 112, 107, 113, 113, 107, 114, 115, 104, 105, 118, 117, 116, 117, 118, 119, 122, 121, 120, 121, 122, 123, 189, 184, 188, 184, 189, 186, 181, 190, 180, 190, 181, 191, 251, 246, 249, 246, 251, 247]
                normal3f[] normals = [(0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0)] (
                    interpolation = "faceVarying"
                )
                point3f[] points = [(-50, 1, 40), (50, 1, 40), (-50, 2, 40), (50, 2, 40), (50, 0, 50), (-50, 0, 50), (50, 2, 50), (-50, 2, 50), (50, 1, -40), (-50, 1, -40), (50, 2, -40), (-50, 2, -40), (-50, 0, -50), (-50, 0, 50), (50, 0, -50), (50, 0, 50), (-50, 2, 50), (-50, 2, 40), (50, 2, 50), (50, 2, 40), (-50, 0, -50), (50, 0, -50), (-50, 2, -50), (50, 2, -50), (-50, 2, -40), (-50, 2, -50), (50, 2, -40), (50, 2, -50), (-50, 2, -40), (-50, 1, -40), (-50, 2, -50), (-50, 0, -50), (-50, 1, -30.000002), (-50, 1, -1), (-50, 1, 1), (-50, 1, 30.000002), (-50, 1, 40), (-50, 0, 50), (-50, 2, 40), (-50, 2, 50), (50, 2, 50), (50, 1, 40), (50, 0, 50), (50, 0, -50), (50, 1, 30.000002), (50, 1, 1), (50, 1, -1), (50, 1, -30.000002), (50, 1, -40), (50, 2, -40), (50, 2, -50), (50, 2, 40), (-50, 1, -30.000002), (50, 1, -30.000002), (-50, 1, -1), (50, 1, -1), (-50, 1, 30.000002), (-50, 1, 1), (50, 1, 30.000002), (50, 1, 1), (-50, 1, 40), (50, 1, 40), (-50, 1, -40), (50, 1, -40), (-50, 1, 40), (50, 1, 40), (-50, 2, 40), (50, 2, 40), (50, 0, 50), (-50, 0, 50), (50, 2, 50), (-50, 2, 50), (50, 1, -40), (-50, 1, -40), (50, 2, -40), (-50, 2, -40), (-50, 0, -50), (-50, 0, 50), (50, 0, -50), (50, 0, 50), (-50, 2, 50), (-50, 2, 40), (50, 2, 50), (50, 2, 40), (-50, 0, -50), (50, 0, -50), (-50, 2, -50), (50, 2, -50), (-50, 2, -40), (-50, 2, -50), (50, 2, -40), (50, 2, -50), (-50, 2, -40), (-50, 1, -40), (-50, 2, -50), (-50, 0, -50), (-50, 1, -30.000002), (-50, 1, -1), (-50, 1, 1), (-50, 1, 30.000002), (-50, 1, 40), (-50, 0, 50), (-50, 2, 40), (-50, 2, 50), (50, 2, 50), (50, 1, 40), (50, 0, 50), (50, 0, -50), (50, 1, 30.000002), (50, 1, 1), (50, 1, -1), (50, 1, -30.000002), (50, 1, -40), (50, 2, -40), (50, 2, -50), (50, 2, 40), (-50, 1, -30.000002), (50, 1, -30.000002), (-50, 1, -1), (50, 1, -1), (-50, 1, 30.000002), (-50, 1, 1), (50, 1, 30.000002), (50, 1, 1), (-50, 1, 40), (50, 1, 40), (-50, 1, -40), (50, 1, -40), (-50, 1, 40), (50, 1, 40), (-50, 2, 40), (50, 2, 40), (50, 0, 50), (-50, 0, 50), (50, 2, 50), (-50, 2, 50), (50, 1, -40), (-50, 1, -40), (50, 2, -40), (-50, 2, -40), (-50, 0, -50), (-50, 0, 50), (50, 0, -50), (50, 0, 50), (-50, 2, 50), (-50, 2, 40), (50, 2, 50), (50, 2, 40), (-50, 0, -50), (50, 0, -50), (-50, 2, -50), (50, 2, -50), (-50, 2, -40), (-50, 2, -50), (50, 2, -40), (50, 2, -50), (-50, 2, -40), (-50, 1, -40), (-50, 2, -50), (-50, 0, -50), (-50, 1, -30.000002), (-50, 1, -1), (-50, 1, 1), (-50, 1, 30.000002), (-50, 1, 40), (-50, 0, 50), (-50, 2, 40), (-50, 2, 50), (50, 2, 50), (50, 1, 40), (50, 0, 50), (50, 0, -50), (50, 1, 30.000002), (50, 1, 1), (50, 1, -1), (50, 1, -30.000002), (50, 1, -40), (50, 2, -40), (50, 2, -50), (50, 2, 40), (-50, 1, -30.000002), (50, 1, -30.000002), (-50, 1, -1), (50, 1, -1), (-50, 1, 30.000002), (-50, 1, 1), (50, 1, 30.000002), (50, 1, 1), (-50, 1, 40), (50, 1, 40), (-50, 1, -40), (50, 1, -40), (-50, 1, 40), (50, 1, 40), (-50, 2, 40), (50, 2, 40), (50, 0, 50), (-50, 0, 50), (50, 2, 50), (-50, 2, 50), (50, 1, -40), (-50, 1, -40), (50, 2, -40), (-50, 2, -40), (-50, 0, -50), (-50, 0, 50), (50, 0, -50), (50, 0, 50), (-50, 2, 50), (-50, 2, 40), (50, 2, 50), (50, 2, 40), (-50, 0, -50), (50, 0, -50), (-50, 2, -50), (50, 2, -50), (-50, 2, -40), (-50, 2, -50), (50, 2, -40), (50, 2, -50), (-50, 2, -40), (-50, 1, -40), (-50, 2, -50), (-50, 0, -50), (-50, 1, -30.000002), (-50, 1, -1), (-50, 1, 1), (-50, 1, 30.000002), (-50, 1, 40), (-50, 0, 50), (-50, 2, 40), (-50, 2, 50), (50, 2, 50), (50, 1, 40), (50, 0, 50), (50, 0, -50), (50, 1, 30.000002), (50, 1, 1), (50, 1, -1), (50, 1, -30.000002), (50, 1, -40), (50, 2, -40), (50, 2, -50), (50, 2, 40), (-50, 1, -30.000002), (50, 1, -30.000002), (-50, 1, -1), (50, 1, -1), (-50, 1, 30.000002), (-50, 1, 1), (50, 1, 30.000002), (50, 1, 1), (-50, 1, 40), (50, 1, 40), (-50, 1, -40), (50, 1, -40)]
                texCoord2f[] primvars:st = [(19.68504, 0.78740156), (-19.68504, 0.39370078), (19.68504, 0.39370078), (-19.68504, 0.39370078), (19.68504, 0.78740156), (-19.68504, 0.78740156), (19.68504, 0.78740156), (-19.68504, 0), (19.68504, 0), (-19.68504, 0), (19.68504, 0.78740156), (-19.68504, 0.78740156), (19.68504, 0.78740156), (-19.68504, 0.39370078), (19.68504, 0.39370078), (-19.68504, 0.39370078), (19.68504, 0.78740156), (-19.68504, 0.78740156), (-19.68504, 19.68504), (19.68504, -19.68504), (19.68504, 19.68504), (19.68504, -19.68504), (-19.68504, 19.68504), (-19.68504, -19.68504), (19.68504, -19.68504), (-19.68504, -15.748032), (-19.68504, -19.68504), (-19.68504, -15.748032), (19.68504, -19.68504), (19.68504, -15.748032), (19.68504, 0.78740156), (-19.68504, 0), (19.68504, 0), (-19.68504, 0), (19.68504, 0.78740156), (-19.68504, 0.78740156), (19.68504, 15.748032), (-19.68504, 19.68504), (-19.68504, 15.748032), (-19.68504, 19.68504), (19.68504, 15.748032), (19.68504, 19.68504), (-19.68504, 0.78740156), (-15.748032, 0.39370078), (-15.748032, 0.78740156), (-19.68504, 0), (-15.748032, 0.39370078), (-19.68504, 0.78740156), (-19.68504, 0), (-11.811024, 0.39370078), (-15.748032, 0.39370078), (-19.68504, 0), (-0.39370078, 0.39370078), (-11.811024, 0.39370078), (-19.68504, 0), (0.39370078, 0.39370078), (-0.39370078, 0.39370078), (-19.68504, 0), (11.811024, 0.39370078), (0.39370078, 0.39370078), (-19.68504, 0), (15.748032, 0.39370078), (11.811024, 0.39370078), (19.68504, 0), (15.748032, 0.39370078), (-19.68504, 0), (19.68504, 0), (15.748032, 0.78740156), (15.748032, 0.39370078), (15.748032, 0.78740156), (19.68504, 0), (19.68504, 0.78740156), (-19.68504, 0), (-15.748032, 0.39370078), (-19.68504, 0.78740156), (-15.748032, 0.39370078), (-19.68504, 0), (19.68504, 0), (-15.748032, 0.39370078), (19.68504, 0), (-11.811024, 0.39370078), (-11.811024, 0.39370078), (19.68504, 0), (-0.39370078, 0.39370078), (-0.39370078, 0.39370078), (19.68504, 0), (0.39370078, 0.39370078), (0.39370078, 0.39370078), (19.68504, 0), (11.811024, 0.39370078), (11.811024, 0.39370078), (19.68504, 0), (15.748032, 0.39370078), (15.748032, 0.39370078), (19.68504, 0), (15.748032, 0.78740156), (15.748032, 0.78740156), (19.68504, 0), (19.68504, 0.78740156), (-15.748032, 0.78740156), (-19.68504, 0.78740156), (-15.748032, 0.39370078), (-19.68504, 0.39370078), (19.68504, 11.811024), (-19.68504, 11.811024), (19.68504, 11.811024), (-19.68504, 0.39370078), (19.68504, 0.39370078), (19.68504, -11.811024), (-19.68504, -0.39370084), (-19.68504, -11.811024), (-19.68504, -0.39370084), (19.68504, -11.811024), (19.68504, -0.39370084), (19.68504, -15.748032), (-19.68504, -11.811024), (-19.68504, -15.748032), (-19.68504, -11.811024), (19.68504, -15.748032), (19.68504, -11.811024), (19.68504, 11.811024), (-19.68504, 15.748032), (-19.68504, 11.811024), (-19.68504, 15.748032), (19.68504, 11.811024), (19.68504, 15.748032), (19.68504, -0.39370084), (-19.68504, 0.39370078), (-19.68504, -0.39370084), (-19.68504, 0.39370078), (19.68504, -0.39370084), (19.68504, 0.39370078)] (
                    interpolation = "faceVarying"
                )
                uniform token subdivisionScheme = "none"
                float3 xformOp:rotateXYZ = (0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (50, 0, 50)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                def GeomSubset "pavement" (
                    apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    uniform token elementType = "face"
                    uniform token familyName = "materialBind"
                    int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
                    rel material:binding = </World/Looks/pavement> (
                        bindMaterialAs = "weakerThanDescendants"
                    )
                }

                def GeomSubset "asphalt" (
                    apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    uniform token elementType = "face"
                    uniform token familyName = "materialBind"
                    int[] indices = [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37]
                    rel material:binding = </World/Looks/asphalt> (
                        bindMaterialAs = "weakerThanDescendants"
                    )
                }

                def GeomSubset "asphaltEdge" (
                    apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    uniform token elementType = "face"
                    uniform token familyName = "materialBind"
                    int[] indices = [38, 39, 40, 41]
                    rel material:binding = </World/Looks/asphaltEdge> (
                        bindMaterialAs = "weakerThanDescendants"
                    )
                }

                def GeomSubset "line" (
                    apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    uniform token elementType = "face"
                    uniform token familyName = "materialBind"
                    int[] indices = [42, 43]
                    rel material:binding = </World/Looks/line> (
                        bindMaterialAs = "weakerThanDescendants"
                    )
                }
            }

            def Mesh "road_straight_19" (
                prepend specializes = </_osm_street_data>
            )
            {
                float3[] extent = [(-50, 0, -50), (50, 2, 50)]
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [2, 1, 0, 1, 2, 3, 6, 5, 4, 5, 6, 7, 10, 9, 8, 9, 10, 11, 14, 13, 12, 13, 14, 15, 18, 17, 16, 17, 18, 19, 22, 21, 20, 21, 22, 23, 26, 25, 24, 25, 26, 27, 94, 93, 92, 95, 93, 94, 95, 96, 93, 95, 97, 96, 95, 98, 97, 95, 99, 98, 95, 100, 99, 101, 100, 95, 101, 102, 100, 102, 101, 103, 106, 105, 104, 105, 106, 107, 105, 107, 108, 108, 107, 109, 109, 107, 110, 110, 107, 111, 111, 107, 112, 112, 107, 113, 113, 107, 114, 115, 104, 105, 118, 117, 116, 117, 118, 119, 122, 121, 120, 121, 122, 123, 189, 184, 188, 184, 189, 186, 181, 190, 180, 190, 181, 191, 251, 246, 249, 246, 251, 247]
                normal3f[] normals = [(0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0)] (
                    interpolation = "faceVarying"
                )
                point3f[] points = [(-50, 1, 40), (50, 1, 40), (-50, 2, 40), (50, 2, 40), (50, 0, 50), (-50, 0, 50), (50, 2, 50), (-50, 2, 50), (50, 1, -40), (-50, 1, -40), (50, 2, -40), (-50, 2, -40), (-50, 0, -50), (-50, 0, 50), (50, 0, -50), (50, 0, 50), (-50, 2, 50), (-50, 2, 40), (50, 2, 50), (50, 2, 40), (-50, 0, -50), (50, 0, -50), (-50, 2, -50), (50, 2, -50), (-50, 2, -40), (-50, 2, -50), (50, 2, -40), (50, 2, -50), (-50, 2, -40), (-50, 1, -40), (-50, 2, -50), (-50, 0, -50), (-50, 1, -30.000002), (-50, 1, -1), (-50, 1, 1), (-50, 1, 30.000002), (-50, 1, 40), (-50, 0, 50), (-50, 2, 40), (-50, 2, 50), (50, 2, 50), (50, 1, 40), (50, 0, 50), (50, 0, -50), (50, 1, 30.000002), (50, 1, 1), (50, 1, -1), (50, 1, -30.000002), (50, 1, -40), (50, 2, -40), (50, 2, -50), (50, 2, 40), (-50, 1, -30.000002), (50, 1, -30.000002), (-50, 1, -1), (50, 1, -1), (-50, 1, 30.000002), (-50, 1, 1), (50, 1, 30.000002), (50, 1, 1), (-50, 1, 40), (50, 1, 40), (-50, 1, -40), (50, 1, -40), (-50, 1, 40), (50, 1, 40), (-50, 2, 40), (50, 2, 40), (50, 0, 50), (-50, 0, 50), (50, 2, 50), (-50, 2, 50), (50, 1, -40), (-50, 1, -40), (50, 2, -40), (-50, 2, -40), (-50, 0, -50), (-50, 0, 50), (50, 0, -50), (50, 0, 50), (-50, 2, 50), (-50, 2, 40), (50, 2, 50), (50, 2, 40), (-50, 0, -50), (50, 0, -50), (-50, 2, -50), (50, 2, -50), (-50, 2, -40), (-50, 2, -50), (50, 2, -40), (50, 2, -50), (-50, 2, -40), (-50, 1, -40), (-50, 2, -50), (-50, 0, -50), (-50, 1, -30.000002), (-50, 1, -1), (-50, 1, 1), (-50, 1, 30.000002), (-50, 1, 40), (-50, 0, 50), (-50, 2, 40), (-50, 2, 50), (50, 2, 50), (50, 1, 40), (50, 0, 50), (50, 0, -50), (50, 1, 30.000002), (50, 1, 1), (50, 1, -1), (50, 1, -30.000002), (50, 1, -40), (50, 2, -40), (50, 2, -50), (50, 2, 40), (-50, 1, -30.000002), (50, 1, -30.000002), (-50, 1, -1), (50, 1, -1), (-50, 1, 30.000002), (-50, 1, 1), (50, 1, 30.000002), (50, 1, 1), (-50, 1, 40), (50, 1, 40), (-50, 1, -40), (50, 1, -40), (-50, 1, 40), (50, 1, 40), (-50, 2, 40), (50, 2, 40), (50, 0, 50), (-50, 0, 50), (50, 2, 50), (-50, 2, 50), (50, 1, -40), (-50, 1, -40), (50, 2, -40), (-50, 2, -40), (-50, 0, -50), (-50, 0, 50), (50, 0, -50), (50, 0, 50), (-50, 2, 50), (-50, 2, 40), (50, 2, 50), (50, 2, 40), (-50, 0, -50), (50, 0, -50), (-50, 2, -50), (50, 2, -50), (-50, 2, -40), (-50, 2, -50), (50, 2, -40), (50, 2, -50), (-50, 2, -40), (-50, 1, -40), (-50, 2, -50), (-50, 0, -50), (-50, 1, -30.000002), (-50, 1, -1), (-50, 1, 1), (-50, 1, 30.000002), (-50, 1, 40), (-50, 0, 50), (-50, 2, 40), (-50, 2, 50), (50, 2, 50), (50, 1, 40), (50, 0, 50), (50, 0, -50), (50, 1, 30.000002), (50, 1, 1), (50, 1, -1), (50, 1, -30.000002), (50, 1, -40), (50, 2, -40), (50, 2, -50), (50, 2, 40), (-50, 1, -30.000002), (50, 1, -30.000002), (-50, 1, -1), (50, 1, -1), (-50, 1, 30.000002), (-50, 1, 1), (50, 1, 30.000002), (50, 1, 1), (-50, 1, 40), (50, 1, 40), (-50, 1, -40), (50, 1, -40), (-50, 1, 40), (50, 1, 40), (-50, 2, 40), (50, 2, 40), (50, 0, 50), (-50, 0, 50), (50, 2, 50), (-50, 2, 50), (50, 1, -40), (-50, 1, -40), (50, 2, -40), (-50, 2, -40), (-50, 0, -50), (-50, 0, 50), (50, 0, -50), (50, 0, 50), (-50, 2, 50), (-50, 2, 40), (50, 2, 50), (50, 2, 40), (-50, 0, -50), (50, 0, -50), (-50, 2, -50), (50, 2, -50), (-50, 2, -40), (-50, 2, -50), (50, 2, -40), (50, 2, -50), (-50, 2, -40), (-50, 1, -40), (-50, 2, -50), (-50, 0, -50), (-50, 1, -30.000002), (-50, 1, -1), (-50, 1, 1), (-50, 1, 30.000002), (-50, 1, 40), (-50, 0, 50), (-50, 2, 40), (-50, 2, 50), (50, 2, 50), (50, 1, 40), (50, 0, 50), (50, 0, -50), (50, 1, 30.000002), (50, 1, 1), (50, 1, -1), (50, 1, -30.000002), (50, 1, -40), (50, 2, -40), (50, 2, -50), (50, 2, 40), (-50, 1, -30.000002), (50, 1, -30.000002), (-50, 1, -1), (50, 1, -1), (-50, 1, 30.000002), (-50, 1, 1), (50, 1, 30.000002), (50, 1, 1), (-50, 1, 40), (50, 1, 40), (-50, 1, -40), (50, 1, -40)]
                texCoord2f[] primvars:st = [(19.68504, 0.78740156), (-19.68504, 0.39370078), (19.68504, 0.39370078), (-19.68504, 0.39370078), (19.68504, 0.78740156), (-19.68504, 0.78740156), (19.68504, 0.78740156), (-19.68504, 0), (19.68504, 0), (-19.68504, 0), (19.68504, 0.78740156), (-19.68504, 0.78740156), (19.68504, 0.78740156), (-19.68504, 0.39370078), (19.68504, 0.39370078), (-19.68504, 0.39370078), (19.68504, 0.78740156), (-19.68504, 0.78740156), (-19.68504, 19.68504), (19.68504, -19.68504), (19.68504, 19.68504), (19.68504, -19.68504), (-19.68504, 19.68504), (-19.68504, -19.68504), (19.68504, -19.68504), (-19.68504, -15.748032), (-19.68504, -19.68504), (-19.68504, -15.748032), (19.68504, -19.68504), (19.68504, -15.748032), (19.68504, 0.78740156), (-19.68504, 0), (19.68504, 0), (-19.68504, 0), (19.68504, 0.78740156), (-19.68504, 0.78740156), (19.68504, 15.748032), (-19.68504, 19.68504), (-19.68504, 15.748032), (-19.68504, 19.68504), (19.68504, 15.748032), (19.68504, 19.68504), (-19.68504, 0.78740156), (-15.748032, 0.39370078), (-15.748032, 0.78740156), (-19.68504, 0), (-15.748032, 0.39370078), (-19.68504, 0.78740156), (-19.68504, 0), (-11.811024, 0.39370078), (-15.748032, 0.39370078), (-19.68504, 0), (-0.39370078, 0.39370078), (-11.811024, 0.39370078), (-19.68504, 0), (0.39370078, 0.39370078), (-0.39370078, 0.39370078), (-19.68504, 0), (11.811024, 0.39370078), (0.39370078, 0.39370078), (-19.68504, 0), (15.748032, 0.39370078), (11.811024, 0.39370078), (19.68504, 0), (15.748032, 0.39370078), (-19.68504, 0), (19.68504, 0), (15.748032, 0.78740156), (15.748032, 0.39370078), (15.748032, 0.78740156), (19.68504, 0), (19.68504, 0.78740156), (-19.68504, 0), (-15.748032, 0.39370078), (-19.68504, 0.78740156), (-15.748032, 0.39370078), (-19.68504, 0), (19.68504, 0), (-15.748032, 0.39370078), (19.68504, 0), (-11.811024, 0.39370078), (-11.811024, 0.39370078), (19.68504, 0), (-0.39370078, 0.39370078), (-0.39370078, 0.39370078), (19.68504, 0), (0.39370078, 0.39370078), (0.39370078, 0.39370078), (19.68504, 0), (11.811024, 0.39370078), (11.811024, 0.39370078), (19.68504, 0), (15.748032, 0.39370078), (15.748032, 0.39370078), (19.68504, 0), (15.748032, 0.78740156), (15.748032, 0.78740156), (19.68504, 0), (19.68504, 0.78740156), (-15.748032, 0.78740156), (-19.68504, 0.78740156), (-15.748032, 0.39370078), (-19.68504, 0.39370078), (19.68504, 11.811024), (-19.68504, 11.811024), (19.68504, 11.811024), (-19.68504, 0.39370078), (19.68504, 0.39370078), (19.68504, -11.811024), (-19.68504, -0.39370084), (-19.68504, -11.811024), (-19.68504, -0.39370084), (19.68504, -11.811024), (19.68504, -0.39370084), (19.68504, -15.748032), (-19.68504, -11.811024), (-19.68504, -15.748032), (-19.68504, -11.811024), (19.68504, -15.748032), (19.68504, -11.811024), (19.68504, 11.811024), (-19.68504, 15.748032), (-19.68504, 11.811024), (-19.68504, 15.748032), (19.68504, 11.811024), (19.68504, 15.748032), (19.68504, -0.39370084), (-19.68504, 0.39370078), (-19.68504, -0.39370084), (-19.68504, 0.39370078), (19.68504, -0.39370084), (19.68504, 0.39370078)] (
                    interpolation = "faceVarying"
                )
                uniform token subdivisionScheme = "none"
                float3 xformOp:rotateXYZ = (0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (50, 0, -50)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                def GeomSubset "pavement" (
                    apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    uniform token elementType = "face"
                    uniform token familyName = "materialBind"
                    int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
                    rel material:binding = </World/Looks/pavement> (
                        bindMaterialAs = "weakerThanDescendants"
                    )
                }

                def GeomSubset "asphalt" (
                    apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    uniform token elementType = "face"
                    uniform token familyName = "materialBind"
                    int[] indices = [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37]
                    rel material:binding = </World/Looks/asphalt> (
                        bindMaterialAs = "weakerThanDescendants"
                    )
                }

                def GeomSubset "asphaltEdge" (
                    apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    uniform token elementType = "face"
                    uniform token familyName = "materialBind"
                    int[] indices = [38, 39, 40, 41]
                    rel material:binding = </World/Looks/asphaltEdge> (
                        bindMaterialAs = "weakerThanDescendants"
                    )
                }

                def GeomSubset "line" (
                    apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    uniform token elementType = "face"
                    uniform token familyName = "materialBind"
                    int[] indices = [42, 43]
                    rel material:binding = </World/Looks/line> (
                        bindMaterialAs = "weakerThanDescendants"
                    )
                }
            }

            def Mesh "road_straight_20" (
                prepend specializes = </_osm_street_data>
            )
            {
                float3[] extent = [(-50, 0, -50), (50, 2, 50)]
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [2, 1, 0, 1, 2, 3, 6, 5, 4, 5, 6, 7, 10, 9, 8, 9, 10, 11, 14, 13, 12, 13, 14, 15, 18, 17, 16, 17, 18, 19, 22, 21, 20, 21, 22, 23, 26, 25, 24, 25, 26, 27, 94, 93, 92, 95, 93, 94, 95, 96, 93, 95, 97, 96, 95, 98, 97, 95, 99, 98, 95, 100, 99, 101, 100, 95, 101, 102, 100, 102, 101, 103, 106, 105, 104, 105, 106, 107, 105, 107, 108, 108, 107, 109, 109, 107, 110, 110, 107, 111, 111, 107, 112, 112, 107, 113, 113, 107, 114, 115, 104, 105, 118, 117, 116, 117, 118, 119, 122, 121, 120, 121, 122, 123, 189, 184, 188, 184, 189, 186, 181, 190, 180, 190, 181, 191, 251, 246, 249, 246, 251, 247]
                normal3f[] normals = [(0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0)] (
                    interpolation = "faceVarying"
                )
                point3f[] points = [(-50, 1, 40), (50, 1, 40), (-50, 2, 40), (50, 2, 40), (50, 0, 50), (-50, 0, 50), (50, 2, 50), (-50, 2, 50), (50, 1, -40), (-50, 1, -40), (50, 2, -40), (-50, 2, -40), (-50, 0, -50), (-50, 0, 50), (50, 0, -50), (50, 0, 50), (-50, 2, 50), (-50, 2, 40), (50, 2, 50), (50, 2, 40), (-50, 0, -50), (50, 0, -50), (-50, 2, -50), (50, 2, -50), (-50, 2, -40), (-50, 2, -50), (50, 2, -40), (50, 2, -50), (-50, 2, -40), (-50, 1, -40), (-50, 2, -50), (-50, 0, -50), (-50, 1, -30.000002), (-50, 1, -1), (-50, 1, 1), (-50, 1, 30.000002), (-50, 1, 40), (-50, 0, 50), (-50, 2, 40), (-50, 2, 50), (50, 2, 50), (50, 1, 40), (50, 0, 50), (50, 0, -50), (50, 1, 30.000002), (50, 1, 1), (50, 1, -1), (50, 1, -30.000002), (50, 1, -40), (50, 2, -40), (50, 2, -50), (50, 2, 40), (-50, 1, -30.000002), (50, 1, -30.000002), (-50, 1, -1), (50, 1, -1), (-50, 1, 30.000002), (-50, 1, 1), (50, 1, 30.000002), (50, 1, 1), (-50, 1, 40), (50, 1, 40), (-50, 1, -40), (50, 1, -40), (-50, 1, 40), (50, 1, 40), (-50, 2, 40), (50, 2, 40), (50, 0, 50), (-50, 0, 50), (50, 2, 50), (-50, 2, 50), (50, 1, -40), (-50, 1, -40), (50, 2, -40), (-50, 2, -40), (-50, 0, -50), (-50, 0, 50), (50, 0, -50), (50, 0, 50), (-50, 2, 50), (-50, 2, 40), (50, 2, 50), (50, 2, 40), (-50, 0, -50), (50, 0, -50), (-50, 2, -50), (50, 2, -50), (-50, 2, -40), (-50, 2, -50), (50, 2, -40), (50, 2, -50), (-50, 2, -40), (-50, 1, -40), (-50, 2, -50), (-50, 0, -50), (-50, 1, -30.000002), (-50, 1, -1), (-50, 1, 1), (-50, 1, 30.000002), (-50, 1, 40), (-50, 0, 50), (-50, 2, 40), (-50, 2, 50), (50, 2, 50), (50, 1, 40), (50, 0, 50), (50, 0, -50), (50, 1, 30.000002), (50, 1, 1), (50, 1, -1), (50, 1, -30.000002), (50, 1, -40), (50, 2, -40), (50, 2, -50), (50, 2, 40), (-50, 1, -30.000002), (50, 1, -30.000002), (-50, 1, -1), (50, 1, -1), (-50, 1, 30.000002), (-50, 1, 1), (50, 1, 30.000002), (50, 1, 1), (-50, 1, 40), (50, 1, 40), (-50, 1, -40), (50, 1, -40), (-50, 1, 40), (50, 1, 40), (-50, 2, 40), (50, 2, 40), (50, 0, 50), (-50, 0, 50), (50, 2, 50), (-50, 2, 50), (50, 1, -40), (-50, 1, -40), (50, 2, -40), (-50, 2, -40), (-50, 0, -50), (-50, 0, 50), (50, 0, -50), (50, 0, 50), (-50, 2, 50), (-50, 2, 40), (50, 2, 50), (50, 2, 40), (-50, 0, -50), (50, 0, -50), (-50, 2, -50), (50, 2, -50), (-50, 2, -40), (-50, 2, -50), (50, 2, -40), (50, 2, -50), (-50, 2, -40), (-50, 1, -40), (-50, 2, -50), (-50, 0, -50), (-50, 1, -30.000002), (-50, 1, -1), (-50, 1, 1), (-50, 1, 30.000002), (-50, 1, 40), (-50, 0, 50), (-50, 2, 40), (-50, 2, 50), (50, 2, 50), (50, 1, 40), (50, 0, 50), (50, 0, -50), (50, 1, 30.000002), (50, 1, 1), (50, 1, -1), (50, 1, -30.000002), (50, 1, -40), (50, 2, -40), (50, 2, -50), (50, 2, 40), (-50, 1, -30.000002), (50, 1, -30.000002), (-50, 1, -1), (50, 1, -1), (-50, 1, 30.000002), (-50, 1, 1), (50, 1, 30.000002), (50, 1, 1), (-50, 1, 40), (50, 1, 40), (-50, 1, -40), (50, 1, -40), (-50, 1, 40), (50, 1, 40), (-50, 2, 40), (50, 2, 40), (50, 0, 50), (-50, 0, 50), (50, 2, 50), (-50, 2, 50), (50, 1, -40), (-50, 1, -40), (50, 2, -40), (-50, 2, -40), (-50, 0, -50), (-50, 0, 50), (50, 0, -50), (50, 0, 50), (-50, 2, 50), (-50, 2, 40), (50, 2, 50), (50, 2, 40), (-50, 0, -50), (50, 0, -50), (-50, 2, -50), (50, 2, -50), (-50, 2, -40), (-50, 2, -50), (50, 2, -40), (50, 2, -50), (-50, 2, -40), (-50, 1, -40), (-50, 2, -50), (-50, 0, -50), (-50, 1, -30.000002), (-50, 1, -1), (-50, 1, 1), (-50, 1, 30.000002), (-50, 1, 40), (-50, 0, 50), (-50, 2, 40), (-50, 2, 50), (50, 2, 50), (50, 1, 40), (50, 0, 50), (50, 0, -50), (50, 1, 30.000002), (50, 1, 1), (50, 1, -1), (50, 1, -30.000002), (50, 1, -40), (50, 2, -40), (50, 2, -50), (50, 2, 40), (-50, 1, -30.000002), (50, 1, -30.000002), (-50, 1, -1), (50, 1, -1), (-50, 1, 30.000002), (-50, 1, 1), (50, 1, 30.000002), (50, 1, 1), (-50, 1, 40), (50, 1, 40), (-50, 1, -40), (50, 1, -40)]
                texCoord2f[] primvars:st = [(19.68504, 0.78740156), (-19.68504, 0.39370078), (19.68504, 0.39370078), (-19.68504, 0.39370078), (19.68504, 0.78740156), (-19.68504, 0.78740156), (19.68504, 0.78740156), (-19.68504, 0), (19.68504, 0), (-19.68504, 0), (19.68504, 0.78740156), (-19.68504, 0.78740156), (19.68504, 0.78740156), (-19.68504, 0.39370078), (19.68504, 0.39370078), (-19.68504, 0.39370078), (19.68504, 0.78740156), (-19.68504, 0.78740156), (-19.68504, 19.68504), (19.68504, -19.68504), (19.68504, 19.68504), (19.68504, -19.68504), (-19.68504, 19.68504), (-19.68504, -19.68504), (19.68504, -19.68504), (-19.68504, -15.748032), (-19.68504, -19.68504), (-19.68504, -15.748032), (19.68504, -19.68504), (19.68504, -15.748032), (19.68504, 0.78740156), (-19.68504, 0), (19.68504, 0), (-19.68504, 0), (19.68504, 0.78740156), (-19.68504, 0.78740156), (19.68504, 15.748032), (-19.68504, 19.68504), (-19.68504, 15.748032), (-19.68504, 19.68504), (19.68504, 15.748032), (19.68504, 19.68504), (-19.68504, 0.78740156), (-15.748032, 0.39370078), (-15.748032, 0.78740156), (-19.68504, 0), (-15.748032, 0.39370078), (-19.68504, 0.78740156), (-19.68504, 0), (-11.811024, 0.39370078), (-15.748032, 0.39370078), (-19.68504, 0), (-0.39370078, 0.39370078), (-11.811024, 0.39370078), (-19.68504, 0), (0.39370078, 0.39370078), (-0.39370078, 0.39370078), (-19.68504, 0), (11.811024, 0.39370078), (0.39370078, 0.39370078), (-19.68504, 0), (15.748032, 0.39370078), (11.811024, 0.39370078), (19.68504, 0), (15.748032, 0.39370078), (-19.68504, 0), (19.68504, 0), (15.748032, 0.78740156), (15.748032, 0.39370078), (15.748032, 0.78740156), (19.68504, 0), (19.68504, 0.78740156), (-19.68504, 0), (-15.748032, 0.39370078), (-19.68504, 0.78740156), (-15.748032, 0.39370078), (-19.68504, 0), (19.68504, 0), (-15.748032, 0.39370078), (19.68504, 0), (-11.811024, 0.39370078), (-11.811024, 0.39370078), (19.68504, 0), (-0.39370078, 0.39370078), (-0.39370078, 0.39370078), (19.68504, 0), (0.39370078, 0.39370078), (0.39370078, 0.39370078), (19.68504, 0), (11.811024, 0.39370078), (11.811024, 0.39370078), (19.68504, 0), (15.748032, 0.39370078), (15.748032, 0.39370078), (19.68504, 0), (15.748032, 0.78740156), (15.748032, 0.78740156), (19.68504, 0), (19.68504, 0.78740156), (-15.748032, 0.78740156), (-19.68504, 0.78740156), (-15.748032, 0.39370078), (-19.68504, 0.39370078), (19.68504, 11.811024), (-19.68504, 11.811024), (19.68504, 11.811024), (-19.68504, 0.39370078), (19.68504, 0.39370078), (19.68504, -11.811024), (-19.68504, -0.39370084), (-19.68504, -11.811024), (-19.68504, -0.39370084), (19.68504, -11.811024), (19.68504, -0.39370084), (19.68504, -15.748032), (-19.68504, -11.811024), (-19.68504, -15.748032), (-19.68504, -11.811024), (19.68504, -15.748032), (19.68504, -11.811024), (19.68504, 11.811024), (-19.68504, 15.748032), (-19.68504, 11.811024), (-19.68504, 15.748032), (19.68504, 11.811024), (19.68504, 15.748032), (19.68504, -0.39370084), (-19.68504, 0.39370078), (-19.68504, -0.39370084), (-19.68504, 0.39370078), (19.68504, -0.39370084), (19.68504, 0.39370078)] (
                    interpolation = "faceVarying"
                )
                uniform token subdivisionScheme = "none"
                float3 xformOp:rotateXYZ = (0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (150, 0, 50)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                def GeomSubset "pavement" (
                    apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    uniform token elementType = "face"
                    uniform token familyName = "materialBind"
                    int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
                    rel material:binding = </World/Looks/pavement> (
                        bindMaterialAs = "weakerThanDescendants"
                    )
                }

                def GeomSubset "asphalt" (
                    apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    uniform token elementType = "face"
                    uniform token familyName = "materialBind"
                    int[] indices = [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37]
                    rel material:binding = </World/Looks/asphalt> (
                        bindMaterialAs = "weakerThanDescendants"
                    )
                }

                def GeomSubset "asphaltEdge" (
                    apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    uniform token elementType = "face"
                    uniform token familyName = "materialBind"
                    int[] indices = [38, 39, 40, 41]
                    rel material:binding = </World/Looks/asphaltEdge> (
                        bindMaterialAs = "weakerThanDescendants"
                    )
                }

                def GeomSubset "line" (
                    apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    uniform token elementType = "face"
                    uniform token familyName = "materialBind"
                    int[] indices = [42, 43]
                    rel material:binding = </World/Looks/line> (
                        bindMaterialAs = "weakerThanDescendants"
                    )
                }
            }

            def Mesh "road_straight_21" (
                prepend specializes = </_osm_street_data>
            )
            {
                float3[] extent = [(-50, 0, -50), (50, 2, 50)]
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [2, 1, 0, 1, 2, 3, 6, 5, 4, 5, 6, 7, 10, 9, 8, 9, 10, 11, 14, 13, 12, 13, 14, 15, 18, 17, 16, 17, 18, 19, 22, 21, 20, 21, 22, 23, 26, 25, 24, 25, 26, 27, 94, 93, 92, 95, 93, 94, 95, 96, 93, 95, 97, 96, 95, 98, 97, 95, 99, 98, 95, 100, 99, 101, 100, 95, 101, 102, 100, 102, 101, 103, 106, 105, 104, 105, 106, 107, 105, 107, 108, 108, 107, 109, 109, 107, 110, 110, 107, 111, 111, 107, 112, 112, 107, 113, 113, 107, 114, 115, 104, 105, 118, 117, 116, 117, 118, 119, 122, 121, 120, 121, 122, 123, 189, 184, 188, 184, 189, 186, 181, 190, 180, 190, 181, 191, 251, 246, 249, 246, 251, 247]
                normal3f[] normals = [(0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0)] (
                    interpolation = "faceVarying"
                )
                point3f[] points = [(-50, 1, 40), (50, 1, 40), (-50, 2, 40), (50, 2, 40), (50, 0, 50), (-50, 0, 50), (50, 2, 50), (-50, 2, 50), (50, 1, -40), (-50, 1, -40), (50, 2, -40), (-50, 2, -40), (-50, 0, -50), (-50, 0, 50), (50, 0, -50), (50, 0, 50), (-50, 2, 50), (-50, 2, 40), (50, 2, 50), (50, 2, 40), (-50, 0, -50), (50, 0, -50), (-50, 2, -50), (50, 2, -50), (-50, 2, -40), (-50, 2, -50), (50, 2, -40), (50, 2, -50), (-50, 2, -40), (-50, 1, -40), (-50, 2, -50), (-50, 0, -50), (-50, 1, -30.000002), (-50, 1, -1), (-50, 1, 1), (-50, 1, 30.000002), (-50, 1, 40), (-50, 0, 50), (-50, 2, 40), (-50, 2, 50), (50, 2, 50), (50, 1, 40), (50, 0, 50), (50, 0, -50), (50, 1, 30.000002), (50, 1, 1), (50, 1, -1), (50, 1, -30.000002), (50, 1, -40), (50, 2, -40), (50, 2, -50), (50, 2, 40), (-50, 1, -30.000002), (50, 1, -30.000002), (-50, 1, -1), (50, 1, -1), (-50, 1, 30.000002), (-50, 1, 1), (50, 1, 30.000002), (50, 1, 1), (-50, 1, 40), (50, 1, 40), (-50, 1, -40), (50, 1, -40), (-50, 1, 40), (50, 1, 40), (-50, 2, 40), (50, 2, 40), (50, 0, 50), (-50, 0, 50), (50, 2, 50), (-50, 2, 50), (50, 1, -40), (-50, 1, -40), (50, 2, -40), (-50, 2, -40), (-50, 0, -50), (-50, 0, 50), (50, 0, -50), (50, 0, 50), (-50, 2, 50), (-50, 2, 40), (50, 2, 50), (50, 2, 40), (-50, 0, -50), (50, 0, -50), (-50, 2, -50), (50, 2, -50), (-50, 2, -40), (-50, 2, -50), (50, 2, -40), (50, 2, -50), (-50, 2, -40), (-50, 1, -40), (-50, 2, -50), (-50, 0, -50), (-50, 1, -30.000002), (-50, 1, -1), (-50, 1, 1), (-50, 1, 30.000002), (-50, 1, 40), (-50, 0, 50), (-50, 2, 40), (-50, 2, 50), (50, 2, 50), (50, 1, 40), (50, 0, 50), (50, 0, -50), (50, 1, 30.000002), (50, 1, 1), (50, 1, -1), (50, 1, -30.000002), (50, 1, -40), (50, 2, -40), (50, 2, -50), (50, 2, 40), (-50, 1, -30.000002), (50, 1, -30.000002), (-50, 1, -1), (50, 1, -1), (-50, 1, 30.000002), (-50, 1, 1), (50, 1, 30.000002), (50, 1, 1), (-50, 1, 40), (50, 1, 40), (-50, 1, -40), (50, 1, -40), (-50, 1, 40), (50, 1, 40), (-50, 2, 40), (50, 2, 40), (50, 0, 50), (-50, 0, 50), (50, 2, 50), (-50, 2, 50), (50, 1, -40), (-50, 1, -40), (50, 2, -40), (-50, 2, -40), (-50, 0, -50), (-50, 0, 50), (50, 0, -50), (50, 0, 50), (-50, 2, 50), (-50, 2, 40), (50, 2, 50), (50, 2, 40), (-50, 0, -50), (50, 0, -50), (-50, 2, -50), (50, 2, -50), (-50, 2, -40), (-50, 2, -50), (50, 2, -40), (50, 2, -50), (-50, 2, -40), (-50, 1, -40), (-50, 2, -50), (-50, 0, -50), (-50, 1, -30.000002), (-50, 1, -1), (-50, 1, 1), (-50, 1, 30.000002), (-50, 1, 40), (-50, 0, 50), (-50, 2, 40), (-50, 2, 50), (50, 2, 50), (50, 1, 40), (50, 0, 50), (50, 0, -50), (50, 1, 30.000002), (50, 1, 1), (50, 1, -1), (50, 1, -30.000002), (50, 1, -40), (50, 2, -40), (50, 2, -50), (50, 2, 40), (-50, 1, -30.000002), (50, 1, -30.000002), (-50, 1, -1), (50, 1, -1), (-50, 1, 30.000002), (-50, 1, 1), (50, 1, 30.000002), (50, 1, 1), (-50, 1, 40), (50, 1, 40), (-50, 1, -40), (50, 1, -40), (-50, 1, 40), (50, 1, 40), (-50, 2, 40), (50, 2, 40), (50, 0, 50), (-50, 0, 50), (50, 2, 50), (-50, 2, 50), (50, 1, -40), (-50, 1, -40), (50, 2, -40), (-50, 2, -40), (-50, 0, -50), (-50, 0, 50), (50, 0, -50), (50, 0, 50), (-50, 2, 50), (-50, 2, 40), (50, 2, 50), (50, 2, 40), (-50, 0, -50), (50, 0, -50), (-50, 2, -50), (50, 2, -50), (-50, 2, -40), (-50, 2, -50), (50, 2, -40), (50, 2, -50), (-50, 2, -40), (-50, 1, -40), (-50, 2, -50), (-50, 0, -50), (-50, 1, -30.000002), (-50, 1, -1), (-50, 1, 1), (-50, 1, 30.000002), (-50, 1, 40), (-50, 0, 50), (-50, 2, 40), (-50, 2, 50), (50, 2, 50), (50, 1, 40), (50, 0, 50), (50, 0, -50), (50, 1, 30.000002), (50, 1, 1), (50, 1, -1), (50, 1, -30.000002), (50, 1, -40), (50, 2, -40), (50, 2, -50), (50, 2, 40), (-50, 1, -30.000002), (50, 1, -30.000002), (-50, 1, -1), (50, 1, -1), (-50, 1, 30.000002), (-50, 1, 1), (50, 1, 30.000002), (50, 1, 1), (-50, 1, 40), (50, 1, 40), (-50, 1, -40), (50, 1, -40)]
                texCoord2f[] primvars:st = [(19.68504, 0.78740156), (-19.68504, 0.39370078), (19.68504, 0.39370078), (-19.68504, 0.39370078), (19.68504, 0.78740156), (-19.68504, 0.78740156), (19.68504, 0.78740156), (-19.68504, 0), (19.68504, 0), (-19.68504, 0), (19.68504, 0.78740156), (-19.68504, 0.78740156), (19.68504, 0.78740156), (-19.68504, 0.39370078), (19.68504, 0.39370078), (-19.68504, 0.39370078), (19.68504, 0.78740156), (-19.68504, 0.78740156), (-19.68504, 19.68504), (19.68504, -19.68504), (19.68504, 19.68504), (19.68504, -19.68504), (-19.68504, 19.68504), (-19.68504, -19.68504), (19.68504, -19.68504), (-19.68504, -15.748032), (-19.68504, -19.68504), (-19.68504, -15.748032), (19.68504, -19.68504), (19.68504, -15.748032), (19.68504, 0.78740156), (-19.68504, 0), (19.68504, 0), (-19.68504, 0), (19.68504, 0.78740156), (-19.68504, 0.78740156), (19.68504, 15.748032), (-19.68504, 19.68504), (-19.68504, 15.748032), (-19.68504, 19.68504), (19.68504, 15.748032), (19.68504, 19.68504), (-19.68504, 0.78740156), (-15.748032, 0.39370078), (-15.748032, 0.78740156), (-19.68504, 0), (-15.748032, 0.39370078), (-19.68504, 0.78740156), (-19.68504, 0), (-11.811024, 0.39370078), (-15.748032, 0.39370078), (-19.68504, 0), (-0.39370078, 0.39370078), (-11.811024, 0.39370078), (-19.68504, 0), (0.39370078, 0.39370078), (-0.39370078, 0.39370078), (-19.68504, 0), (11.811024, 0.39370078), (0.39370078, 0.39370078), (-19.68504, 0), (15.748032, 0.39370078), (11.811024, 0.39370078), (19.68504, 0), (15.748032, 0.39370078), (-19.68504, 0), (19.68504, 0), (15.748032, 0.78740156), (15.748032, 0.39370078), (15.748032, 0.78740156), (19.68504, 0), (19.68504, 0.78740156), (-19.68504, 0), (-15.748032, 0.39370078), (-19.68504, 0.78740156), (-15.748032, 0.39370078), (-19.68504, 0), (19.68504, 0), (-15.748032, 0.39370078), (19.68504, 0), (-11.811024, 0.39370078), (-11.811024, 0.39370078), (19.68504, 0), (-0.39370078, 0.39370078), (-0.39370078, 0.39370078), (19.68504, 0), (0.39370078, 0.39370078), (0.39370078, 0.39370078), (19.68504, 0), (11.811024, 0.39370078), (11.811024, 0.39370078), (19.68504, 0), (15.748032, 0.39370078), (15.748032, 0.39370078), (19.68504, 0), (15.748032, 0.78740156), (15.748032, 0.78740156), (19.68504, 0), (19.68504, 0.78740156), (-15.748032, 0.78740156), (-19.68504, 0.78740156), (-15.748032, 0.39370078), (-19.68504, 0.39370078), (19.68504, 11.811024), (-19.68504, 11.811024), (19.68504, 11.811024), (-19.68504, 0.39370078), (19.68504, 0.39370078), (19.68504, -11.811024), (-19.68504, -0.39370084), (-19.68504, -11.811024), (-19.68504, -0.39370084), (19.68504, -11.811024), (19.68504, -0.39370084), (19.68504, -15.748032), (-19.68504, -11.811024), (-19.68504, -15.748032), (-19.68504, -11.811024), (19.68504, -15.748032), (19.68504, -11.811024), (19.68504, 11.811024), (-19.68504, 15.748032), (-19.68504, 11.811024), (-19.68504, 15.748032), (19.68504, 11.811024), (19.68504, 15.748032), (19.68504, -0.39370084), (-19.68504, 0.39370078), (-19.68504, -0.39370084), (-19.68504, 0.39370078), (19.68504, -0.39370084), (19.68504, 0.39370078)] (
                    interpolation = "faceVarying"
                )
                uniform token subdivisionScheme = "none"
                float3 xformOp:rotateXYZ = (0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (150, 0, -50)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                def GeomSubset "pavement" (
                    apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    uniform token elementType = "face"
                    uniform token familyName = "materialBind"
                    int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
                    rel material:binding = </World/Looks/pavement> (
                        bindMaterialAs = "weakerThanDescendants"
                    )
                }

                def GeomSubset "asphalt" (
                    apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    uniform token elementType = "face"
                    uniform token familyName = "materialBind"
                    int[] indices = [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37]
                    rel material:binding = </World/Looks/asphalt> (
                        bindMaterialAs = "weakerThanDescendants"
                    )
                }

                def GeomSubset "asphaltEdge" (
                    apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    uniform token elementType = "face"
                    uniform token familyName = "materialBind"
                    int[] indices = [38, 39, 40, 41]
                    rel material:binding = </World/Looks/asphaltEdge> (
                        bindMaterialAs = "weakerThanDescendants"
                    )
                }

                def GeomSubset "line" (
                    apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    uniform token elementType = "face"
                    uniform token familyName = "materialBind"
                    int[] indices = [42, 43]
                    rel material:binding = </World/Looks/line> (
                        bindMaterialAs = "weakerThanDescendants"
                    )
                }
            }

            def Mesh "road_straight_22" (
                prepend specializes = </_osm_street_data>
            )
            {
                float3[] extent = [(-50, 0, -50), (50, 2, 50)]
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [2, 1, 0, 1, 2, 3, 6, 5, 4, 5, 6, 7, 10, 9, 8, 9, 10, 11, 14, 13, 12, 13, 14, 15, 18, 17, 16, 17, 18, 19, 22, 21, 20, 21, 22, 23, 26, 25, 24, 25, 26, 27, 94, 93, 92, 95, 93, 94, 95, 96, 93, 95, 97, 96, 95, 98, 97, 95, 99, 98, 95, 100, 99, 101, 100, 95, 101, 102, 100, 102, 101, 103, 106, 105, 104, 105, 106, 107, 105, 107, 108, 108, 107, 109, 109, 107, 110, 110, 107, 111, 111, 107, 112, 112, 107, 113, 113, 107, 114, 115, 104, 105, 118, 117, 116, 117, 118, 119, 122, 121, 120, 121, 122, 123, 189, 184, 188, 184, 189, 186, 181, 190, 180, 190, 181, 191, 251, 246, 249, 246, 251, 247]
                normal3f[] normals = [(0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0)] (
                    interpolation = "faceVarying"
                )
                point3f[] points = [(-50, 1, 40), (50, 1, 40), (-50, 2, 40), (50, 2, 40), (50, 0, 50), (-50, 0, 50), (50, 2, 50), (-50, 2, 50), (50, 1, -40), (-50, 1, -40), (50, 2, -40), (-50, 2, -40), (-50, 0, -50), (-50, 0, 50), (50, 0, -50), (50, 0, 50), (-50, 2, 50), (-50, 2, 40), (50, 2, 50), (50, 2, 40), (-50, 0, -50), (50, 0, -50), (-50, 2, -50), (50, 2, -50), (-50, 2, -40), (-50, 2, -50), (50, 2, -40), (50, 2, -50), (-50, 2, -40), (-50, 1, -40), (-50, 2, -50), (-50, 0, -50), (-50, 1, -30.000002), (-50, 1, -1), (-50, 1, 1), (-50, 1, 30.000002), (-50, 1, 40), (-50, 0, 50), (-50, 2, 40), (-50, 2, 50), (50, 2, 50), (50, 1, 40), (50, 0, 50), (50, 0, -50), (50, 1, 30.000002), (50, 1, 1), (50, 1, -1), (50, 1, -30.000002), (50, 1, -40), (50, 2, -40), (50, 2, -50), (50, 2, 40), (-50, 1, -30.000002), (50, 1, -30.000002), (-50, 1, -1), (50, 1, -1), (-50, 1, 30.000002), (-50, 1, 1), (50, 1, 30.000002), (50, 1, 1), (-50, 1, 40), (50, 1, 40), (-50, 1, -40), (50, 1, -40), (-50, 1, 40), (50, 1, 40), (-50, 2, 40), (50, 2, 40), (50, 0, 50), (-50, 0, 50), (50, 2, 50), (-50, 2, 50), (50, 1, -40), (-50, 1, -40), (50, 2, -40), (-50, 2, -40), (-50, 0, -50), (-50, 0, 50), (50, 0, -50), (50, 0, 50), (-50, 2, 50), (-50, 2, 40), (50, 2, 50), (50, 2, 40), (-50, 0, -50), (50, 0, -50), (-50, 2, -50), (50, 2, -50), (-50, 2, -40), (-50, 2, -50), (50, 2, -40), (50, 2, -50), (-50, 2, -40), (-50, 1, -40), (-50, 2, -50), (-50, 0, -50), (-50, 1, -30.000002), (-50, 1, -1), (-50, 1, 1), (-50, 1, 30.000002), (-50, 1, 40), (-50, 0, 50), (-50, 2, 40), (-50, 2, 50), (50, 2, 50), (50, 1, 40), (50, 0, 50), (50, 0, -50), (50, 1, 30.000002), (50, 1, 1), (50, 1, -1), (50, 1, -30.000002), (50, 1, -40), (50, 2, -40), (50, 2, -50), (50, 2, 40), (-50, 1, -30.000002), (50, 1, -30.000002), (-50, 1, -1), (50, 1, -1), (-50, 1, 30.000002), (-50, 1, 1), (50, 1, 30.000002), (50, 1, 1), (-50, 1, 40), (50, 1, 40), (-50, 1, -40), (50, 1, -40), (-50, 1, 40), (50, 1, 40), (-50, 2, 40), (50, 2, 40), (50, 0, 50), (-50, 0, 50), (50, 2, 50), (-50, 2, 50), (50, 1, -40), (-50, 1, -40), (50, 2, -40), (-50, 2, -40), (-50, 0, -50), (-50, 0, 50), (50, 0, -50), (50, 0, 50), (-50, 2, 50), (-50, 2, 40), (50, 2, 50), (50, 2, 40), (-50, 0, -50), (50, 0, -50), (-50, 2, -50), (50, 2, -50), (-50, 2, -40), (-50, 2, -50), (50, 2, -40), (50, 2, -50), (-50, 2, -40), (-50, 1, -40), (-50, 2, -50), (-50, 0, -50), (-50, 1, -30.000002), (-50, 1, -1), (-50, 1, 1), (-50, 1, 30.000002), (-50, 1, 40), (-50, 0, 50), (-50, 2, 40), (-50, 2, 50), (50, 2, 50), (50, 1, 40), (50, 0, 50), (50, 0, -50), (50, 1, 30.000002), (50, 1, 1), (50, 1, -1), (50, 1, -30.000002), (50, 1, -40), (50, 2, -40), (50, 2, -50), (50, 2, 40), (-50, 1, -30.000002), (50, 1, -30.000002), (-50, 1, -1), (50, 1, -1), (-50, 1, 30.000002), (-50, 1, 1), (50, 1, 30.000002), (50, 1, 1), (-50, 1, 40), (50, 1, 40), (-50, 1, -40), (50, 1, -40), (-50, 1, 40), (50, 1, 40), (-50, 2, 40), (50, 2, 40), (50, 0, 50), (-50, 0, 50), (50, 2, 50), (-50, 2, 50), (50, 1, -40), (-50, 1, -40), (50, 2, -40), (-50, 2, -40), (-50, 0, -50), (-50, 0, 50), (50, 0, -50), (50, 0, 50), (-50, 2, 50), (-50, 2, 40), (50, 2, 50), (50, 2, 40), (-50, 0, -50), (50, 0, -50), (-50, 2, -50), (50, 2, -50), (-50, 2, -40), (-50, 2, -50), (50, 2, -40), (50, 2, -50), (-50, 2, -40), (-50, 1, -40), (-50, 2, -50), (-50, 0, -50), (-50, 1, -30.000002), (-50, 1, -1), (-50, 1, 1), (-50, 1, 30.000002), (-50, 1, 40), (-50, 0, 50), (-50, 2, 40), (-50, 2, 50), (50, 2, 50), (50, 1, 40), (50, 0, 50), (50, 0, -50), (50, 1, 30.000002), (50, 1, 1), (50, 1, -1), (50, 1, -30.000002), (50, 1, -40), (50, 2, -40), (50, 2, -50), (50, 2, 40), (-50, 1, -30.000002), (50, 1, -30.000002), (-50, 1, -1), (50, 1, -1), (-50, 1, 30.000002), (-50, 1, 1), (50, 1, 30.000002), (50, 1, 1), (-50, 1, 40), (50, 1, 40), (-50, 1, -40), (50, 1, -40)]
                texCoord2f[] primvars:st = [(19.68504, 0.78740156), (-19.68504, 0.39370078), (19.68504, 0.39370078), (-19.68504, 0.39370078), (19.68504, 0.78740156), (-19.68504, 0.78740156), (19.68504, 0.78740156), (-19.68504, 0), (19.68504, 0), (-19.68504, 0), (19.68504, 0.78740156), (-19.68504, 0.78740156), (19.68504, 0.78740156), (-19.68504, 0.39370078), (19.68504, 0.39370078), (-19.68504, 0.39370078), (19.68504, 0.78740156), (-19.68504, 0.78740156), (-19.68504, 19.68504), (19.68504, -19.68504), (19.68504, 19.68504), (19.68504, -19.68504), (-19.68504, 19.68504), (-19.68504, -19.68504), (19.68504, -19.68504), (-19.68504, -15.748032), (-19.68504, -19.68504), (-19.68504, -15.748032), (19.68504, -19.68504), (19.68504, -15.748032), (19.68504, 0.78740156), (-19.68504, 0), (19.68504, 0), (-19.68504, 0), (19.68504, 0.78740156), (-19.68504, 0.78740156), (19.68504, 15.748032), (-19.68504, 19.68504), (-19.68504, 15.748032), (-19.68504, 19.68504), (19.68504, 15.748032), (19.68504, 19.68504), (-19.68504, 0.78740156), (-15.748032, 0.39370078), (-15.748032, 0.78740156), (-19.68504, 0), (-15.748032, 0.39370078), (-19.68504, 0.78740156), (-19.68504, 0), (-11.811024, 0.39370078), (-15.748032, 0.39370078), (-19.68504, 0), (-0.39370078, 0.39370078), (-11.811024, 0.39370078), (-19.68504, 0), (0.39370078, 0.39370078), (-0.39370078, 0.39370078), (-19.68504, 0), (11.811024, 0.39370078), (0.39370078, 0.39370078), (-19.68504, 0), (15.748032, 0.39370078), (11.811024, 0.39370078), (19.68504, 0), (15.748032, 0.39370078), (-19.68504, 0), (19.68504, 0), (15.748032, 0.78740156), (15.748032, 0.39370078), (15.748032, 0.78740156), (19.68504, 0), (19.68504, 0.78740156), (-19.68504, 0), (-15.748032, 0.39370078), (-19.68504, 0.78740156), (-15.748032, 0.39370078), (-19.68504, 0), (19.68504, 0), (-15.748032, 0.39370078), (19.68504, 0), (-11.811024, 0.39370078), (-11.811024, 0.39370078), (19.68504, 0), (-0.39370078, 0.39370078), (-0.39370078, 0.39370078), (19.68504, 0), (0.39370078, 0.39370078), (0.39370078, 0.39370078), (19.68504, 0), (11.811024, 0.39370078), (11.811024, 0.39370078), (19.68504, 0), (15.748032, 0.39370078), (15.748032, 0.39370078), (19.68504, 0), (15.748032, 0.78740156), (15.748032, 0.78740156), (19.68504, 0), (19.68504, 0.78740156), (-15.748032, 0.78740156), (-19.68504, 0.78740156), (-15.748032, 0.39370078), (-19.68504, 0.39370078), (19.68504, 11.811024), (-19.68504, 11.811024), (19.68504, 11.811024), (-19.68504, 0.39370078), (19.68504, 0.39370078), (19.68504, -11.811024), (-19.68504, -0.39370084), (-19.68504, -11.811024), (-19.68504, -0.39370084), (19.68504, -11.811024), (19.68504, -0.39370084), (19.68504, -15.748032), (-19.68504, -11.811024), (-19.68504, -15.748032), (-19.68504, -11.811024), (19.68504, -15.748032), (19.68504, -11.811024), (19.68504, 11.811024), (-19.68504, 15.748032), (-19.68504, 11.811024), (-19.68504, 15.748032), (19.68504, 11.811024), (19.68504, 15.748032), (19.68504, -0.39370084), (-19.68504, 0.39370078), (-19.68504, -0.39370084), (-19.68504, 0.39370078), (19.68504, -0.39370084), (19.68504, 0.39370078)] (
                    interpolation = "faceVarying"
                )
                uniform token subdivisionScheme = "none"
                float3 xformOp:rotateXYZ = (0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (250, 0, 50)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                def GeomSubset "pavement" (
                    apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    uniform token elementType = "face"
                    uniform token familyName = "materialBind"
                    int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
                    rel material:binding = </World/Looks/pavement> (
                        bindMaterialAs = "weakerThanDescendants"
                    )
                }

                def GeomSubset "asphalt" (
                    apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    uniform token elementType = "face"
                    uniform token familyName = "materialBind"
                    int[] indices = [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37]
                    rel material:binding = </World/Looks/asphalt> (
                        bindMaterialAs = "weakerThanDescendants"
                    )
                }

                def GeomSubset "asphaltEdge" (
                    apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    uniform token elementType = "face"
                    uniform token familyName = "materialBind"
                    int[] indices = [38, 39, 40, 41]
                    rel material:binding = </World/Looks/asphaltEdge> (
                        bindMaterialAs = "weakerThanDescendants"
                    )
                }

                def GeomSubset "line" (
                    apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    uniform token elementType = "face"
                    uniform token familyName = "materialBind"
                    int[] indices = [42, 43]
                    rel material:binding = </World/Looks/line> (
                        bindMaterialAs = "weakerThanDescendants"
                    )
                }
            }

            def Mesh "road_straight_23" (
                prepend specializes = </_osm_street_data>
            )
            {
                float3[] extent = [(-50, 0, -50), (50, 2, 50)]
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [2, 1, 0, 1, 2, 3, 6, 5, 4, 5, 6, 7, 10, 9, 8, 9, 10, 11, 14, 13, 12, 13, 14, 15, 18, 17, 16, 17, 18, 19, 22, 21, 20, 21, 22, 23, 26, 25, 24, 25, 26, 27, 94, 93, 92, 95, 93, 94, 95, 96, 93, 95, 97, 96, 95, 98, 97, 95, 99, 98, 95, 100, 99, 101, 100, 95, 101, 102, 100, 102, 101, 103, 106, 105, 104, 105, 106, 107, 105, 107, 108, 108, 107, 109, 109, 107, 110, 110, 107, 111, 111, 107, 112, 112, 107, 113, 113, 107, 114, 115, 104, 105, 118, 117, 116, 117, 118, 119, 122, 121, 120, 121, 122, 123, 189, 184, 188, 184, 189, 186, 181, 190, 180, 190, 181, 191, 251, 246, 249, 246, 251, 247]
                normal3f[] normals = [(0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0)] (
                    interpolation = "faceVarying"
                )
                point3f[] points = [(-50, 1, 40), (50, 1, 40), (-50, 2, 40), (50, 2, 40), (50, 0, 50), (-50, 0, 50), (50, 2, 50), (-50, 2, 50), (50, 1, -40), (-50, 1, -40), (50, 2, -40), (-50, 2, -40), (-50, 0, -50), (-50, 0, 50), (50, 0, -50), (50, 0, 50), (-50, 2, 50), (-50, 2, 40), (50, 2, 50), (50, 2, 40), (-50, 0, -50), (50, 0, -50), (-50, 2, -50), (50, 2, -50), (-50, 2, -40), (-50, 2, -50), (50, 2, -40), (50, 2, -50), (-50, 2, -40), (-50, 1, -40), (-50, 2, -50), (-50, 0, -50), (-50, 1, -30.000002), (-50, 1, -1), (-50, 1, 1), (-50, 1, 30.000002), (-50, 1, 40), (-50, 0, 50), (-50, 2, 40), (-50, 2, 50), (50, 2, 50), (50, 1, 40), (50, 0, 50), (50, 0, -50), (50, 1, 30.000002), (50, 1, 1), (50, 1, -1), (50, 1, -30.000002), (50, 1, -40), (50, 2, -40), (50, 2, -50), (50, 2, 40), (-50, 1, -30.000002), (50, 1, -30.000002), (-50, 1, -1), (50, 1, -1), (-50, 1, 30.000002), (-50, 1, 1), (50, 1, 30.000002), (50, 1, 1), (-50, 1, 40), (50, 1, 40), (-50, 1, -40), (50, 1, -40), (-50, 1, 40), (50, 1, 40), (-50, 2, 40), (50, 2, 40), (50, 0, 50), (-50, 0, 50), (50, 2, 50), (-50, 2, 50), (50, 1, -40), (-50, 1, -40), (50, 2, -40), (-50, 2, -40), (-50, 0, -50), (-50, 0, 50), (50, 0, -50), (50, 0, 50), (-50, 2, 50), (-50, 2, 40), (50, 2, 50), (50, 2, 40), (-50, 0, -50), (50, 0, -50), (-50, 2, -50), (50, 2, -50), (-50, 2, -40), (-50, 2, -50), (50, 2, -40), (50, 2, -50), (-50, 2, -40), (-50, 1, -40), (-50, 2, -50), (-50, 0, -50), (-50, 1, -30.000002), (-50, 1, -1), (-50, 1, 1), (-50, 1, 30.000002), (-50, 1, 40), (-50, 0, 50), (-50, 2, 40), (-50, 2, 50), (50, 2, 50), (50, 1, 40), (50, 0, 50), (50, 0, -50), (50, 1, 30.000002), (50, 1, 1), (50, 1, -1), (50, 1, -30.000002), (50, 1, -40), (50, 2, -40), (50, 2, -50), (50, 2, 40), (-50, 1, -30.000002), (50, 1, -30.000002), (-50, 1, -1), (50, 1, -1), (-50, 1, 30.000002), (-50, 1, 1), (50, 1, 30.000002), (50, 1, 1), (-50, 1, 40), (50, 1, 40), (-50, 1, -40), (50, 1, -40), (-50, 1, 40), (50, 1, 40), (-50, 2, 40), (50, 2, 40), (50, 0, 50), (-50, 0, 50), (50, 2, 50), (-50, 2, 50), (50, 1, -40), (-50, 1, -40), (50, 2, -40), (-50, 2, -40), (-50, 0, -50), (-50, 0, 50), (50, 0, -50), (50, 0, 50), (-50, 2, 50), (-50, 2, 40), (50, 2, 50), (50, 2, 40), (-50, 0, -50), (50, 0, -50), (-50, 2, -50), (50, 2, -50), (-50, 2, -40), (-50, 2, -50), (50, 2, -40), (50, 2, -50), (-50, 2, -40), (-50, 1, -40), (-50, 2, -50), (-50, 0, -50), (-50, 1, -30.000002), (-50, 1, -1), (-50, 1, 1), (-50, 1, 30.000002), (-50, 1, 40), (-50, 0, 50), (-50, 2, 40), (-50, 2, 50), (50, 2, 50), (50, 1, 40), (50, 0, 50), (50, 0, -50), (50, 1, 30.000002), (50, 1, 1), (50, 1, -1), (50, 1, -30.000002), (50, 1, -40), (50, 2, -40), (50, 2, -50), (50, 2, 40), (-50, 1, -30.000002), (50, 1, -30.000002), (-50, 1, -1), (50, 1, -1), (-50, 1, 30.000002), (-50, 1, 1), (50, 1, 30.000002), (50, 1, 1), (-50, 1, 40), (50, 1, 40), (-50, 1, -40), (50, 1, -40), (-50, 1, 40), (50, 1, 40), (-50, 2, 40), (50, 2, 40), (50, 0, 50), (-50, 0, 50), (50, 2, 50), (-50, 2, 50), (50, 1, -40), (-50, 1, -40), (50, 2, -40), (-50, 2, -40), (-50, 0, -50), (-50, 0, 50), (50, 0, -50), (50, 0, 50), (-50, 2, 50), (-50, 2, 40), (50, 2, 50), (50, 2, 40), (-50, 0, -50), (50, 0, -50), (-50, 2, -50), (50, 2, -50), (-50, 2, -40), (-50, 2, -50), (50, 2, -40), (50, 2, -50), (-50, 2, -40), (-50, 1, -40), (-50, 2, -50), (-50, 0, -50), (-50, 1, -30.000002), (-50, 1, -1), (-50, 1, 1), (-50, 1, 30.000002), (-50, 1, 40), (-50, 0, 50), (-50, 2, 40), (-50, 2, 50), (50, 2, 50), (50, 1, 40), (50, 0, 50), (50, 0, -50), (50, 1, 30.000002), (50, 1, 1), (50, 1, -1), (50, 1, -30.000002), (50, 1, -40), (50, 2, -40), (50, 2, -50), (50, 2, 40), (-50, 1, -30.000002), (50, 1, -30.000002), (-50, 1, -1), (50, 1, -1), (-50, 1, 30.000002), (-50, 1, 1), (50, 1, 30.000002), (50, 1, 1), (-50, 1, 40), (50, 1, 40), (-50, 1, -40), (50, 1, -40)]
                texCoord2f[] primvars:st = [(19.68504, 0.78740156), (-19.68504, 0.39370078), (19.68504, 0.39370078), (-19.68504, 0.39370078), (19.68504, 0.78740156), (-19.68504, 0.78740156), (19.68504, 0.78740156), (-19.68504, 0), (19.68504, 0), (-19.68504, 0), (19.68504, 0.78740156), (-19.68504, 0.78740156), (19.68504, 0.78740156), (-19.68504, 0.39370078), (19.68504, 0.39370078), (-19.68504, 0.39370078), (19.68504, 0.78740156), (-19.68504, 0.78740156), (-19.68504, 19.68504), (19.68504, -19.68504), (19.68504, 19.68504), (19.68504, -19.68504), (-19.68504, 19.68504), (-19.68504, -19.68504), (19.68504, -19.68504), (-19.68504, -15.748032), (-19.68504, -19.68504), (-19.68504, -15.748032), (19.68504, -19.68504), (19.68504, -15.748032), (19.68504, 0.78740156), (-19.68504, 0), (19.68504, 0), (-19.68504, 0), (19.68504, 0.78740156), (-19.68504, 0.78740156), (19.68504, 15.748032), (-19.68504, 19.68504), (-19.68504, 15.748032), (-19.68504, 19.68504), (19.68504, 15.748032), (19.68504, 19.68504), (-19.68504, 0.78740156), (-15.748032, 0.39370078), (-15.748032, 0.78740156), (-19.68504, 0), (-15.748032, 0.39370078), (-19.68504, 0.78740156), (-19.68504, 0), (-11.811024, 0.39370078), (-15.748032, 0.39370078), (-19.68504, 0), (-0.39370078, 0.39370078), (-11.811024, 0.39370078), (-19.68504, 0), (0.39370078, 0.39370078), (-0.39370078, 0.39370078), (-19.68504, 0), (11.811024, 0.39370078), (0.39370078, 0.39370078), (-19.68504, 0), (15.748032, 0.39370078), (11.811024, 0.39370078), (19.68504, 0), (15.748032, 0.39370078), (-19.68504, 0), (19.68504, 0), (15.748032, 0.78740156), (15.748032, 0.39370078), (15.748032, 0.78740156), (19.68504, 0), (19.68504, 0.78740156), (-19.68504, 0), (-15.748032, 0.39370078), (-19.68504, 0.78740156), (-15.748032, 0.39370078), (-19.68504, 0), (19.68504, 0), (-15.748032, 0.39370078), (19.68504, 0), (-11.811024, 0.39370078), (-11.811024, 0.39370078), (19.68504, 0), (-0.39370078, 0.39370078), (-0.39370078, 0.39370078), (19.68504, 0), (0.39370078, 0.39370078), (0.39370078, 0.39370078), (19.68504, 0), (11.811024, 0.39370078), (11.811024, 0.39370078), (19.68504, 0), (15.748032, 0.39370078), (15.748032, 0.39370078), (19.68504, 0), (15.748032, 0.78740156), (15.748032, 0.78740156), (19.68504, 0), (19.68504, 0.78740156), (-15.748032, 0.78740156), (-19.68504, 0.78740156), (-15.748032, 0.39370078), (-19.68504, 0.39370078), (19.68504, 11.811024), (-19.68504, 11.811024), (19.68504, 11.811024), (-19.68504, 0.39370078), (19.68504, 0.39370078), (19.68504, -11.811024), (-19.68504, -0.39370084), (-19.68504, -11.811024), (-19.68504, -0.39370084), (19.68504, -11.811024), (19.68504, -0.39370084), (19.68504, -15.748032), (-19.68504, -11.811024), (-19.68504, -15.748032), (-19.68504, -11.811024), (19.68504, -15.748032), (19.68504, -11.811024), (19.68504, 11.811024), (-19.68504, 15.748032), (-19.68504, 11.811024), (-19.68504, 15.748032), (19.68504, 11.811024), (19.68504, 15.748032), (19.68504, -0.39370084), (-19.68504, 0.39370078), (-19.68504, -0.39370084), (-19.68504, 0.39370078), (19.68504, -0.39370084), (19.68504, 0.39370078)] (
                    interpolation = "faceVarying"
                )
                uniform token subdivisionScheme = "none"
                float3 xformOp:rotateXYZ = (0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (250, 0, -50)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                def GeomSubset "pavement" (
                    apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    uniform token elementType = "face"
                    uniform token familyName = "materialBind"
                    int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
                    rel material:binding = </World/Looks/pavement> (
                        bindMaterialAs = "weakerThanDescendants"
                    )
                }

                def GeomSubset "asphalt" (
                    apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    uniform token elementType = "face"
                    uniform token familyName = "materialBind"
                    int[] indices = [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37]
                    rel material:binding = </World/Looks/asphalt> (
                        bindMaterialAs = "weakerThanDescendants"
                    )
                }

                def GeomSubset "asphaltEdge" (
                    apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    uniform token elementType = "face"
                    uniform token familyName = "materialBind"
                    int[] indices = [38, 39, 40, 41]
                    rel material:binding = </World/Looks/asphaltEdge> (
                        bindMaterialAs = "weakerThanDescendants"
                    )
                }

                def GeomSubset "line" (
                    apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    uniform token elementType = "face"
                    uniform token familyName = "materialBind"
                    int[] indices = [42, 43]
                    rel material:binding = </World/Looks/line> (
                        bindMaterialAs = "weakerThanDescendants"
                    )
                }
            }

            def Mesh "road_straight_24" (
                prepend specializes = </_osm_street_data>
            )
            {
                float3[] extent = [(-50, 0, -50), (50, 2, 50)]
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [2, 1, 0, 1, 2, 3, 6, 5, 4, 5, 6, 7, 10, 9, 8, 9, 10, 11, 14, 13, 12, 13, 14, 15, 18, 17, 16, 17, 18, 19, 22, 21, 20, 21, 22, 23, 26, 25, 24, 25, 26, 27, 94, 93, 92, 95, 93, 94, 95, 96, 93, 95, 97, 96, 95, 98, 97, 95, 99, 98, 95, 100, 99, 101, 100, 95, 101, 102, 100, 102, 101, 103, 106, 105, 104, 105, 106, 107, 105, 107, 108, 108, 107, 109, 109, 107, 110, 110, 107, 111, 111, 107, 112, 112, 107, 113, 113, 107, 114, 115, 104, 105, 118, 117, 116, 117, 118, 119, 122, 121, 120, 121, 122, 123, 189, 184, 188, 184, 189, 186, 181, 190, 180, 190, 181, 191, 251, 246, 249, 246, 251, 247]
                normal3f[] normals = [(0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0)] (
                    interpolation = "faceVarying"
                )
                point3f[] points = [(-50, 1, 40), (50, 1, 40), (-50, 2, 40), (50, 2, 40), (50, 0, 50), (-50, 0, 50), (50, 2, 50), (-50, 2, 50), (50, 1, -40), (-50, 1, -40), (50, 2, -40), (-50, 2, -40), (-50, 0, -50), (-50, 0, 50), (50, 0, -50), (50, 0, 50), (-50, 2, 50), (-50, 2, 40), (50, 2, 50), (50, 2, 40), (-50, 0, -50), (50, 0, -50), (-50, 2, -50), (50, 2, -50), (-50, 2, -40), (-50, 2, -50), (50, 2, -40), (50, 2, -50), (-50, 2, -40), (-50, 1, -40), (-50, 2, -50), (-50, 0, -50), (-50, 1, -30.000002), (-50, 1, -1), (-50, 1, 1), (-50, 1, 30.000002), (-50, 1, 40), (-50, 0, 50), (-50, 2, 40), (-50, 2, 50), (50, 2, 50), (50, 1, 40), (50, 0, 50), (50, 0, -50), (50, 1, 30.000002), (50, 1, 1), (50, 1, -1), (50, 1, -30.000002), (50, 1, -40), (50, 2, -40), (50, 2, -50), (50, 2, 40), (-50, 1, -30.000002), (50, 1, -30.000002), (-50, 1, -1), (50, 1, -1), (-50, 1, 30.000002), (-50, 1, 1), (50, 1, 30.000002), (50, 1, 1), (-50, 1, 40), (50, 1, 40), (-50, 1, -40), (50, 1, -40), (-50, 1, 40), (50, 1, 40), (-50, 2, 40), (50, 2, 40), (50, 0, 50), (-50, 0, 50), (50, 2, 50), (-50, 2, 50), (50, 1, -40), (-50, 1, -40), (50, 2, -40), (-50, 2, -40), (-50, 0, -50), (-50, 0, 50), (50, 0, -50), (50, 0, 50), (-50, 2, 50), (-50, 2, 40), (50, 2, 50), (50, 2, 40), (-50, 0, -50), (50, 0, -50), (-50, 2, -50), (50, 2, -50), (-50, 2, -40), (-50, 2, -50), (50, 2, -40), (50, 2, -50), (-50, 2, -40), (-50, 1, -40), (-50, 2, -50), (-50, 0, -50), (-50, 1, -30.000002), (-50, 1, -1), (-50, 1, 1), (-50, 1, 30.000002), (-50, 1, 40), (-50, 0, 50), (-50, 2, 40), (-50, 2, 50), (50, 2, 50), (50, 1, 40), (50, 0, 50), (50, 0, -50), (50, 1, 30.000002), (50, 1, 1), (50, 1, -1), (50, 1, -30.000002), (50, 1, -40), (50, 2, -40), (50, 2, -50), (50, 2, 40), (-50, 1, -30.000002), (50, 1, -30.000002), (-50, 1, -1), (50, 1, -1), (-50, 1, 30.000002), (-50, 1, 1), (50, 1, 30.000002), (50, 1, 1), (-50, 1, 40), (50, 1, 40), (-50, 1, -40), (50, 1, -40), (-50, 1, 40), (50, 1, 40), (-50, 2, 40), (50, 2, 40), (50, 0, 50), (-50, 0, 50), (50, 2, 50), (-50, 2, 50), (50, 1, -40), (-50, 1, -40), (50, 2, -40), (-50, 2, -40), (-50, 0, -50), (-50, 0, 50), (50, 0, -50), (50, 0, 50), (-50, 2, 50), (-50, 2, 40), (50, 2, 50), (50, 2, 40), (-50, 0, -50), (50, 0, -50), (-50, 2, -50), (50, 2, -50), (-50, 2, -40), (-50, 2, -50), (50, 2, -40), (50, 2, -50), (-50, 2, -40), (-50, 1, -40), (-50, 2, -50), (-50, 0, -50), (-50, 1, -30.000002), (-50, 1, -1), (-50, 1, 1), (-50, 1, 30.000002), (-50, 1, 40), (-50, 0, 50), (-50, 2, 40), (-50, 2, 50), (50, 2, 50), (50, 1, 40), (50, 0, 50), (50, 0, -50), (50, 1, 30.000002), (50, 1, 1), (50, 1, -1), (50, 1, -30.000002), (50, 1, -40), (50, 2, -40), (50, 2, -50), (50, 2, 40), (-50, 1, -30.000002), (50, 1, -30.000002), (-50, 1, -1), (50, 1, -1), (-50, 1, 30.000002), (-50, 1, 1), (50, 1, 30.000002), (50, 1, 1), (-50, 1, 40), (50, 1, 40), (-50, 1, -40), (50, 1, -40), (-50, 1, 40), (50, 1, 40), (-50, 2, 40), (50, 2, 40), (50, 0, 50), (-50, 0, 50), (50, 2, 50), (-50, 2, 50), (50, 1, -40), (-50, 1, -40), (50, 2, -40), (-50, 2, -40), (-50, 0, -50), (-50, 0, 50), (50, 0, -50), (50, 0, 50), (-50, 2, 50), (-50, 2, 40), (50, 2, 50), (50, 2, 40), (-50, 0, -50), (50, 0, -50), (-50, 2, -50), (50, 2, -50), (-50, 2, -40), (-50, 2, -50), (50, 2, -40), (50, 2, -50), (-50, 2, -40), (-50, 1, -40), (-50, 2, -50), (-50, 0, -50), (-50, 1, -30.000002), (-50, 1, -1), (-50, 1, 1), (-50, 1, 30.000002), (-50, 1, 40), (-50, 0, 50), (-50, 2, 40), (-50, 2, 50), (50, 2, 50), (50, 1, 40), (50, 0, 50), (50, 0, -50), (50, 1, 30.000002), (50, 1, 1), (50, 1, -1), (50, 1, -30.000002), (50, 1, -40), (50, 2, -40), (50, 2, -50), (50, 2, 40), (-50, 1, -30.000002), (50, 1, -30.000002), (-50, 1, -1), (50, 1, -1), (-50, 1, 30.000002), (-50, 1, 1), (50, 1, 30.000002), (50, 1, 1), (-50, 1, 40), (50, 1, 40), (-50, 1, -40), (50, 1, -40)]
                texCoord2f[] primvars:st = [(19.68504, 0.78740156), (-19.68504, 0.39370078), (19.68504, 0.39370078), (-19.68504, 0.39370078), (19.68504, 0.78740156), (-19.68504, 0.78740156), (19.68504, 0.78740156), (-19.68504, 0), (19.68504, 0), (-19.68504, 0), (19.68504, 0.78740156), (-19.68504, 0.78740156), (19.68504, 0.78740156), (-19.68504, 0.39370078), (19.68504, 0.39370078), (-19.68504, 0.39370078), (19.68504, 0.78740156), (-19.68504, 0.78740156), (-19.68504, 19.68504), (19.68504, -19.68504), (19.68504, 19.68504), (19.68504, -19.68504), (-19.68504, 19.68504), (-19.68504, -19.68504), (19.68504, -19.68504), (-19.68504, -15.748032), (-19.68504, -19.68504), (-19.68504, -15.748032), (19.68504, -19.68504), (19.68504, -15.748032), (19.68504, 0.78740156), (-19.68504, 0), (19.68504, 0), (-19.68504, 0), (19.68504, 0.78740156), (-19.68504, 0.78740156), (19.68504, 15.748032), (-19.68504, 19.68504), (-19.68504, 15.748032), (-19.68504, 19.68504), (19.68504, 15.748032), (19.68504, 19.68504), (-19.68504, 0.78740156), (-15.748032, 0.39370078), (-15.748032, 0.78740156), (-19.68504, 0), (-15.748032, 0.39370078), (-19.68504, 0.78740156), (-19.68504, 0), (-11.811024, 0.39370078), (-15.748032, 0.39370078), (-19.68504, 0), (-0.39370078, 0.39370078), (-11.811024, 0.39370078), (-19.68504, 0), (0.39370078, 0.39370078), (-0.39370078, 0.39370078), (-19.68504, 0), (11.811024, 0.39370078), (0.39370078, 0.39370078), (-19.68504, 0), (15.748032, 0.39370078), (11.811024, 0.39370078), (19.68504, 0), (15.748032, 0.39370078), (-19.68504, 0), (19.68504, 0), (15.748032, 0.78740156), (15.748032, 0.39370078), (15.748032, 0.78740156), (19.68504, 0), (19.68504, 0.78740156), (-19.68504, 0), (-15.748032, 0.39370078), (-19.68504, 0.78740156), (-15.748032, 0.39370078), (-19.68504, 0), (19.68504, 0), (-15.748032, 0.39370078), (19.68504, 0), (-11.811024, 0.39370078), (-11.811024, 0.39370078), (19.68504, 0), (-0.39370078, 0.39370078), (-0.39370078, 0.39370078), (19.68504, 0), (0.39370078, 0.39370078), (0.39370078, 0.39370078), (19.68504, 0), (11.811024, 0.39370078), (11.811024, 0.39370078), (19.68504, 0), (15.748032, 0.39370078), (15.748032, 0.39370078), (19.68504, 0), (15.748032, 0.78740156), (15.748032, 0.78740156), (19.68504, 0), (19.68504, 0.78740156), (-15.748032, 0.78740156), (-19.68504, 0.78740156), (-15.748032, 0.39370078), (-19.68504, 0.39370078), (19.68504, 11.811024), (-19.68504, 11.811024), (19.68504, 11.811024), (-19.68504, 0.39370078), (19.68504, 0.39370078), (19.68504, -11.811024), (-19.68504, -0.39370084), (-19.68504, -11.811024), (-19.68504, -0.39370084), (19.68504, -11.811024), (19.68504, -0.39370084), (19.68504, -15.748032), (-19.68504, -11.811024), (-19.68504, -15.748032), (-19.68504, -11.811024), (19.68504, -15.748032), (19.68504, -11.811024), (19.68504, 11.811024), (-19.68504, 15.748032), (-19.68504, 11.811024), (-19.68504, 15.748032), (19.68504, 11.811024), (19.68504, 15.748032), (19.68504, -0.39370084), (-19.68504, 0.39370078), (-19.68504, -0.39370084), (-19.68504, 0.39370078), (19.68504, -0.39370084), (19.68504, 0.39370078)] (
                    interpolation = "faceVarying"
                )
                uniform token subdivisionScheme = "none"
                float3 xformOp:rotateXYZ = (0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (350, 0, 50)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                def GeomSubset "pavement" (
                    apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    uniform token elementType = "face"
                    uniform token familyName = "materialBind"
                    int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
                    rel material:binding = </World/Looks/pavement> (
                        bindMaterialAs = "weakerThanDescendants"
                    )
                }

                def GeomSubset "asphalt" (
                    apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    uniform token elementType = "face"
                    uniform token familyName = "materialBind"
                    int[] indices = [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37]
                    rel material:binding = </World/Looks/asphalt> (
                        bindMaterialAs = "weakerThanDescendants"
                    )
                }

                def GeomSubset "asphaltEdge" (
                    apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    uniform token elementType = "face"
                    uniform token familyName = "materialBind"
                    int[] indices = [38, 39, 40, 41]
                    rel material:binding = </World/Looks/asphaltEdge> (
                        bindMaterialAs = "weakerThanDescendants"
                    )
                }

                def GeomSubset "line" (
                    apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    uniform token elementType = "face"
                    uniform token familyName = "materialBind"
                    int[] indices = [42, 43]
                    rel material:binding = </World/Looks/line> (
                        bindMaterialAs = "weakerThanDescendants"
                    )
                }
            }

            def Mesh "road_straight_25" (
                prepend specializes = </_osm_street_data>
            )
            {
                float3[] extent = [(-50, 0, -50), (50, 2, 50)]
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [2, 1, 0, 1, 2, 3, 6, 5, 4, 5, 6, 7, 10, 9, 8, 9, 10, 11, 14, 13, 12, 13, 14, 15, 18, 17, 16, 17, 18, 19, 22, 21, 20, 21, 22, 23, 26, 25, 24, 25, 26, 27, 94, 93, 92, 95, 93, 94, 95, 96, 93, 95, 97, 96, 95, 98, 97, 95, 99, 98, 95, 100, 99, 101, 100, 95, 101, 102, 100, 102, 101, 103, 106, 105, 104, 105, 106, 107, 105, 107, 108, 108, 107, 109, 109, 107, 110, 110, 107, 111, 111, 107, 112, 112, 107, 113, 113, 107, 114, 115, 104, 105, 118, 117, 116, 117, 118, 119, 122, 121, 120, 121, 122, 123, 189, 184, 188, 184, 189, 186, 181, 190, 180, 190, 181, 191, 251, 246, 249, 246, 251, 247]
                normal3f[] normals = [(0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0)] (
                    interpolation = "faceVarying"
                )
                point3f[] points = [(-50, 1, 40), (50, 1, 40), (-50, 2, 40), (50, 2, 40), (50, 0, 50), (-50, 0, 50), (50, 2, 50), (-50, 2, 50), (50, 1, -40), (-50, 1, -40), (50, 2, -40), (-50, 2, -40), (-50, 0, -50), (-50, 0, 50), (50, 0, -50), (50, 0, 50), (-50, 2, 50), (-50, 2, 40), (50, 2, 50), (50, 2, 40), (-50, 0, -50), (50, 0, -50), (-50, 2, -50), (50, 2, -50), (-50, 2, -40), (-50, 2, -50), (50, 2, -40), (50, 2, -50), (-50, 2, -40), (-50, 1, -40), (-50, 2, -50), (-50, 0, -50), (-50, 1, -30.000002), (-50, 1, -1), (-50, 1, 1), (-50, 1, 30.000002), (-50, 1, 40), (-50, 0, 50), (-50, 2, 40), (-50, 2, 50), (50, 2, 50), (50, 1, 40), (50, 0, 50), (50, 0, -50), (50, 1, 30.000002), (50, 1, 1), (50, 1, -1), (50, 1, -30.000002), (50, 1, -40), (50, 2, -40), (50, 2, -50), (50, 2, 40), (-50, 1, -30.000002), (50, 1, -30.000002), (-50, 1, -1), (50, 1, -1), (-50, 1, 30.000002), (-50, 1, 1), (50, 1, 30.000002), (50, 1, 1), (-50, 1, 40), (50, 1, 40), (-50, 1, -40), (50, 1, -40), (-50, 1, 40), (50, 1, 40), (-50, 2, 40), (50, 2, 40), (50, 0, 50), (-50, 0, 50), (50, 2, 50), (-50, 2, 50), (50, 1, -40), (-50, 1, -40), (50, 2, -40), (-50, 2, -40), (-50, 0, -50), (-50, 0, 50), (50, 0, -50), (50, 0, 50), (-50, 2, 50), (-50, 2, 40), (50, 2, 50), (50, 2, 40), (-50, 0, -50), (50, 0, -50), (-50, 2, -50), (50, 2, -50), (-50, 2, -40), (-50, 2, -50), (50, 2, -40), (50, 2, -50), (-50, 2, -40), (-50, 1, -40), (-50, 2, -50), (-50, 0, -50), (-50, 1, -30.000002), (-50, 1, -1), (-50, 1, 1), (-50, 1, 30.000002), (-50, 1, 40), (-50, 0, 50), (-50, 2, 40), (-50, 2, 50), (50, 2, 50), (50, 1, 40), (50, 0, 50), (50, 0, -50), (50, 1, 30.000002), (50, 1, 1), (50, 1, -1), (50, 1, -30.000002), (50, 1, -40), (50, 2, -40), (50, 2, -50), (50, 2, 40), (-50, 1, -30.000002), (50, 1, -30.000002), (-50, 1, -1), (50, 1, -1), (-50, 1, 30.000002), (-50, 1, 1), (50, 1, 30.000002), (50, 1, 1), (-50, 1, 40), (50, 1, 40), (-50, 1, -40), (50, 1, -40), (-50, 1, 40), (50, 1, 40), (-50, 2, 40), (50, 2, 40), (50, 0, 50), (-50, 0, 50), (50, 2, 50), (-50, 2, 50), (50, 1, -40), (-50, 1, -40), (50, 2, -40), (-50, 2, -40), (-50, 0, -50), (-50, 0, 50), (50, 0, -50), (50, 0, 50), (-50, 2, 50), (-50, 2, 40), (50, 2, 50), (50, 2, 40), (-50, 0, -50), (50, 0, -50), (-50, 2, -50), (50, 2, -50), (-50, 2, -40), (-50, 2, -50), (50, 2, -40), (50, 2, -50), (-50, 2, -40), (-50, 1, -40), (-50, 2, -50), (-50, 0, -50), (-50, 1, -30.000002), (-50, 1, -1), (-50, 1, 1), (-50, 1, 30.000002), (-50, 1, 40), (-50, 0, 50), (-50, 2, 40), (-50, 2, 50), (50, 2, 50), (50, 1, 40), (50, 0, 50), (50, 0, -50), (50, 1, 30.000002), (50, 1, 1), (50, 1, -1), (50, 1, -30.000002), (50, 1, -40), (50, 2, -40), (50, 2, -50), (50, 2, 40), (-50, 1, -30.000002), (50, 1, -30.000002), (-50, 1, -1), (50, 1, -1), (-50, 1, 30.000002), (-50, 1, 1), (50, 1, 30.000002), (50, 1, 1), (-50, 1, 40), (50, 1, 40), (-50, 1, -40), (50, 1, -40), (-50, 1, 40), (50, 1, 40), (-50, 2, 40), (50, 2, 40), (50, 0, 50), (-50, 0, 50), (50, 2, 50), (-50, 2, 50), (50, 1, -40), (-50, 1, -40), (50, 2, -40), (-50, 2, -40), (-50, 0, -50), (-50, 0, 50), (50, 0, -50), (50, 0, 50), (-50, 2, 50), (-50, 2, 40), (50, 2, 50), (50, 2, 40), (-50, 0, -50), (50, 0, -50), (-50, 2, -50), (50, 2, -50), (-50, 2, -40), (-50, 2, -50), (50, 2, -40), (50, 2, -50), (-50, 2, -40), (-50, 1, -40), (-50, 2, -50), (-50, 0, -50), (-50, 1, -30.000002), (-50, 1, -1), (-50, 1, 1), (-50, 1, 30.000002), (-50, 1, 40), (-50, 0, 50), (-50, 2, 40), (-50, 2, 50), (50, 2, 50), (50, 1, 40), (50, 0, 50), (50, 0, -50), (50, 1, 30.000002), (50, 1, 1), (50, 1, -1), (50, 1, -30.000002), (50, 1, -40), (50, 2, -40), (50, 2, -50), (50, 2, 40), (-50, 1, -30.000002), (50, 1, -30.000002), (-50, 1, -1), (50, 1, -1), (-50, 1, 30.000002), (-50, 1, 1), (50, 1, 30.000002), (50, 1, 1), (-50, 1, 40), (50, 1, 40), (-50, 1, -40), (50, 1, -40)]
                texCoord2f[] primvars:st = [(19.68504, 0.78740156), (-19.68504, 0.39370078), (19.68504, 0.39370078), (-19.68504, 0.39370078), (19.68504, 0.78740156), (-19.68504, 0.78740156), (19.68504, 0.78740156), (-19.68504, 0), (19.68504, 0), (-19.68504, 0), (19.68504, 0.78740156), (-19.68504, 0.78740156), (19.68504, 0.78740156), (-19.68504, 0.39370078), (19.68504, 0.39370078), (-19.68504, 0.39370078), (19.68504, 0.78740156), (-19.68504, 0.78740156), (-19.68504, 19.68504), (19.68504, -19.68504), (19.68504, 19.68504), (19.68504, -19.68504), (-19.68504, 19.68504), (-19.68504, -19.68504), (19.68504, -19.68504), (-19.68504, -15.748032), (-19.68504, -19.68504), (-19.68504, -15.748032), (19.68504, -19.68504), (19.68504, -15.748032), (19.68504, 0.78740156), (-19.68504, 0), (19.68504, 0), (-19.68504, 0), (19.68504, 0.78740156), (-19.68504, 0.78740156), (19.68504, 15.748032), (-19.68504, 19.68504), (-19.68504, 15.748032), (-19.68504, 19.68504), (19.68504, 15.748032), (19.68504, 19.68504), (-19.68504, 0.78740156), (-15.748032, 0.39370078), (-15.748032, 0.78740156), (-19.68504, 0), (-15.748032, 0.39370078), (-19.68504, 0.78740156), (-19.68504, 0), (-11.811024, 0.39370078), (-15.748032, 0.39370078), (-19.68504, 0), (-0.39370078, 0.39370078), (-11.811024, 0.39370078), (-19.68504, 0), (0.39370078, 0.39370078), (-0.39370078, 0.39370078), (-19.68504, 0), (11.811024, 0.39370078), (0.39370078, 0.39370078), (-19.68504, 0), (15.748032, 0.39370078), (11.811024, 0.39370078), (19.68504, 0), (15.748032, 0.39370078), (-19.68504, 0), (19.68504, 0), (15.748032, 0.78740156), (15.748032, 0.39370078), (15.748032, 0.78740156), (19.68504, 0), (19.68504, 0.78740156), (-19.68504, 0), (-15.748032, 0.39370078), (-19.68504, 0.78740156), (-15.748032, 0.39370078), (-19.68504, 0), (19.68504, 0), (-15.748032, 0.39370078), (19.68504, 0), (-11.811024, 0.39370078), (-11.811024, 0.39370078), (19.68504, 0), (-0.39370078, 0.39370078), (-0.39370078, 0.39370078), (19.68504, 0), (0.39370078, 0.39370078), (0.39370078, 0.39370078), (19.68504, 0), (11.811024, 0.39370078), (11.811024, 0.39370078), (19.68504, 0), (15.748032, 0.39370078), (15.748032, 0.39370078), (19.68504, 0), (15.748032, 0.78740156), (15.748032, 0.78740156), (19.68504, 0), (19.68504, 0.78740156), (-15.748032, 0.78740156), (-19.68504, 0.78740156), (-15.748032, 0.39370078), (-19.68504, 0.39370078), (19.68504, 11.811024), (-19.68504, 11.811024), (19.68504, 11.811024), (-19.68504, 0.39370078), (19.68504, 0.39370078), (19.68504, -11.811024), (-19.68504, -0.39370084), (-19.68504, -11.811024), (-19.68504, -0.39370084), (19.68504, -11.811024), (19.68504, -0.39370084), (19.68504, -15.748032), (-19.68504, -11.811024), (-19.68504, -15.748032), (-19.68504, -11.811024), (19.68504, -15.748032), (19.68504, -11.811024), (19.68504, 11.811024), (-19.68504, 15.748032), (-19.68504, 11.811024), (-19.68504, 15.748032), (19.68504, 11.811024), (19.68504, 15.748032), (19.68504, -0.39370084), (-19.68504, 0.39370078), (-19.68504, -0.39370084), (-19.68504, 0.39370078), (19.68504, -0.39370084), (19.68504, 0.39370078)] (
                    interpolation = "faceVarying"
                )
                uniform token subdivisionScheme = "none"
                float3 xformOp:rotateXYZ = (0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (350, 0, -50)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                def GeomSubset "pavement" (
                    apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    uniform token elementType = "face"
                    uniform token familyName = "materialBind"
                    int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
                    rel material:binding = </World/Looks/pavement> (
                        bindMaterialAs = "weakerThanDescendants"
                    )
                }

                def GeomSubset "asphalt" (
                    apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    uniform token elementType = "face"
                    uniform token familyName = "materialBind"
                    int[] indices = [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37]
                    rel material:binding = </World/Looks/asphalt> (
                        bindMaterialAs = "weakerThanDescendants"
                    )
                }

                def GeomSubset "asphaltEdge" (
                    apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    uniform token elementType = "face"
                    uniform token familyName = "materialBind"
                    int[] indices = [38, 39, 40, 41]
                    rel material:binding = </World/Looks/asphaltEdge> (
                        bindMaterialAs = "weakerThanDescendants"
                    )
                }

                def GeomSubset "line" (
                    apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    uniform token elementType = "face"
                    uniform token familyName = "materialBind"
                    int[] indices = [42, 43]
                    rel material:binding = </World/Looks/line> (
                        bindMaterialAs = "weakerThanDescendants"
                    )
                }
            }

            def Mesh "road_straight_27" (
                prepend specializes = </_osm_street_data>
            )
            {
                float3[] extent = [(-50, 0, -50), (50, 2, 50)]
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [2, 1, 0, 1, 2, 3, 6, 5, 4, 5, 6, 7, 10, 9, 8, 9, 10, 11, 14, 13, 12, 13, 14, 15, 18, 17, 16, 17, 18, 19, 22, 21, 20, 21, 22, 23, 26, 25, 24, 25, 26, 27, 94, 93, 92, 95, 93, 94, 95, 96, 93, 95, 97, 96, 95, 98, 97, 95, 99, 98, 95, 100, 99, 101, 100, 95, 101, 102, 100, 102, 101, 103, 106, 105, 104, 105, 106, 107, 105, 107, 108, 108, 107, 109, 109, 107, 110, 110, 107, 111, 111, 107, 112, 112, 107, 113, 113, 107, 114, 115, 104, 105, 118, 117, 116, 117, 118, 119, 122, 121, 120, 121, 122, 123, 189, 184, 188, 184, 189, 186, 181, 190, 180, 190, 181, 191, 251, 246, 249, 246, 251, 247]
                normal3f[] normals = [(0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0)] (
                    interpolation = "faceVarying"
                )
                custom int osm:street:maxspeed = 20
                point3f[] points = [(-50, 1, 40), (50, 1, 40), (-50, 2, 40), (50, 2, 40), (50, 0, 50), (-50, 0, 50), (50, 2, 50), (-50, 2, 50), (50, 1, -40), (-50, 1, -40), (50, 2, -40), (-50, 2, -40), (-50, 0, -50), (-50, 0, 50), (50, 0, -50), (50, 0, 50), (-50, 2, 50), (-50, 2, 40), (50, 2, 50), (50, 2, 40), (-50, 0, -50), (50, 0, -50), (-50, 2, -50), (50, 2, -50), (-50, 2, -40), (-50, 2, -50), (50, 2, -40), (50, 2, -50), (-50, 2, -40), (-50, 1, -40), (-50, 2, -50), (-50, 0, -50), (-50, 1, -30.000002), (-50, 1, -1), (-50, 1, 1), (-50, 1, 30.000002), (-50, 1, 40), (-50, 0, 50), (-50, 2, 40), (-50, 2, 50), (50, 2, 50), (50, 1, 40), (50, 0, 50), (50, 0, -50), (50, 1, 30.000002), (50, 1, 1), (50, 1, -1), (50, 1, -30.000002), (50, 1, -40), (50, 2, -40), (50, 2, -50), (50, 2, 40), (-50, 1, -30.000002), (50, 1, -30.000002), (-50, 1, -1), (50, 1, -1), (-50, 1, 30.000002), (-50, 1, 1), (50, 1, 30.000002), (50, 1, 1), (-50, 1, 40), (50, 1, 40), (-50, 1, -40), (50, 1, -40), (-50, 1, 40), (50, 1, 40), (-50, 2, 40), (50, 2, 40), (50, 0, 50), (-50, 0, 50), (50, 2, 50), (-50, 2, 50), (50, 1, -40), (-50, 1, -40), (50, 2, -40), (-50, 2, -40), (-50, 0, -50), (-50, 0, 50), (50, 0, -50), (50, 0, 50), (-50, 2, 50), (-50, 2, 40), (50, 2, 50), (50, 2, 40), (-50, 0, -50), (50, 0, -50), (-50, 2, -50), (50, 2, -50), (-50, 2, -40), (-50, 2, -50), (50, 2, -40), (50, 2, -50), (-50, 2, -40), (-50, 1, -40), (-50, 2, -50), (-50, 0, -50), (-50, 1, -30.000002), (-50, 1, -1), (-50, 1, 1), (-50, 1, 30.000002), (-50, 1, 40), (-50, 0, 50), (-50, 2, 40), (-50, 2, 50), (50, 2, 50), (50, 1, 40), (50, 0, 50), (50, 0, -50), (50, 1, 30.000002), (50, 1, 1), (50, 1, -1), (50, 1, -30.000002), (50, 1, -40), (50, 2, -40), (50, 2, -50), (50, 2, 40), (-50, 1, -30.000002), (50, 1, -30.000002), (-50, 1, -1), (50, 1, -1), (-50, 1, 30.000002), (-50, 1, 1), (50, 1, 30.000002), (50, 1, 1), (-50, 1, 40), (50, 1, 40), (-50, 1, -40), (50, 1, -40), (-50, 1, 40), (50, 1, 40), (-50, 2, 40), (50, 2, 40), (50, 0, 50), (-50, 0, 50), (50, 2, 50), (-50, 2, 50), (50, 1, -40), (-50, 1, -40), (50, 2, -40), (-50, 2, -40), (-50, 0, -50), (-50, 0, 50), (50, 0, -50), (50, 0, 50), (-50, 2, 50), (-50, 2, 40), (50, 2, 50), (50, 2, 40), (-50, 0, -50), (50, 0, -50), (-50, 2, -50), (50, 2, -50), (-50, 2, -40), (-50, 2, -50), (50, 2, -40), (50, 2, -50), (-50, 2, -40), (-50, 1, -40), (-50, 2, -50), (-50, 0, -50), (-50, 1, -30.000002), (-50, 1, -1), (-50, 1, 1), (-50, 1, 30.000002), (-50, 1, 40), (-50, 0, 50), (-50, 2, 40), (-50, 2, 50), (50, 2, 50), (50, 1, 40), (50, 0, 50), (50, 0, -50), (50, 1, 30.000002), (50, 1, 1), (50, 1, -1), (50, 1, -30.000002), (50, 1, -40), (50, 2, -40), (50, 2, -50), (50, 2, 40), (-50, 1, -30.000002), (50, 1, -30.000002), (-50, 1, -1), (50, 1, -1), (-50, 1, 30.000002), (-50, 1, 1), (50, 1, 30.000002), (50, 1, 1), (-50, 1, 40), (50, 1, 40), (-50, 1, -40), (50, 1, -40), (-50, 1, 40), (50, 1, 40), (-50, 2, 40), (50, 2, 40), (50, 0, 50), (-50, 0, 50), (50, 2, 50), (-50, 2, 50), (50, 1, -40), (-50, 1, -40), (50, 2, -40), (-50, 2, -40), (-50, 0, -50), (-50, 0, 50), (50, 0, -50), (50, 0, 50), (-50, 2, 50), (-50, 2, 40), (50, 2, 50), (50, 2, 40), (-50, 0, -50), (50, 0, -50), (-50, 2, -50), (50, 2, -50), (-50, 2, -40), (-50, 2, -50), (50, 2, -40), (50, 2, -50), (-50, 2, -40), (-50, 1, -40), (-50, 2, -50), (-50, 0, -50), (-50, 1, -30.000002), (-50, 1, -1), (-50, 1, 1), (-50, 1, 30.000002), (-50, 1, 40), (-50, 0, 50), (-50, 2, 40), (-50, 2, 50), (50, 2, 50), (50, 1, 40), (50, 0, 50), (50, 0, -50), (50, 1, 30.000002), (50, 1, 1), (50, 1, -1), (50, 1, -30.000002), (50, 1, -40), (50, 2, -40), (50, 2, -50), (50, 2, 40), (-50, 1, -30.000002), (50, 1, -30.000002), (-50, 1, -1), (50, 1, -1), (-50, 1, 30.000002), (-50, 1, 1), (50, 1, 30.000002), (50, 1, 1), (-50, 1, 40), (50, 1, 40), (-50, 1, -40), (50, 1, -40)]
                texCoord2f[] primvars:st = [(19.68504, 0.78740156), (-19.68504, 0.39370078), (19.68504, 0.39370078), (-19.68504, 0.39370078), (19.68504, 0.78740156), (-19.68504, 0.78740156), (19.68504, 0.78740156), (-19.68504, 0), (19.68504, 0), (-19.68504, 0), (19.68504, 0.78740156), (-19.68504, 0.78740156), (19.68504, 0.78740156), (-19.68504, 0.39370078), (19.68504, 0.39370078), (-19.68504, 0.39370078), (19.68504, 0.78740156), (-19.68504, 0.78740156), (-19.68504, 19.68504), (19.68504, -19.68504), (19.68504, 19.68504), (19.68504, -19.68504), (-19.68504, 19.68504), (-19.68504, -19.68504), (19.68504, -19.68504), (-19.68504, -15.748032), (-19.68504, -19.68504), (-19.68504, -15.748032), (19.68504, -19.68504), (19.68504, -15.748032), (19.68504, 0.78740156), (-19.68504, 0), (19.68504, 0), (-19.68504, 0), (19.68504, 0.78740156), (-19.68504, 0.78740156), (19.68504, 15.748032), (-19.68504, 19.68504), (-19.68504, 15.748032), (-19.68504, 19.68504), (19.68504, 15.748032), (19.68504, 19.68504), (-19.68504, 0.78740156), (-15.748032, 0.39370078), (-15.748032, 0.78740156), (-19.68504, 0), (-15.748032, 0.39370078), (-19.68504, 0.78740156), (-19.68504, 0), (-11.811024, 0.39370078), (-15.748032, 0.39370078), (-19.68504, 0), (-0.39370078, 0.39370078), (-11.811024, 0.39370078), (-19.68504, 0), (0.39370078, 0.39370078), (-0.39370078, 0.39370078), (-19.68504, 0), (11.811024, 0.39370078), (0.39370078, 0.39370078), (-19.68504, 0), (15.748032, 0.39370078), (11.811024, 0.39370078), (19.68504, 0), (15.748032, 0.39370078), (-19.68504, 0), (19.68504, 0), (15.748032, 0.78740156), (15.748032, 0.39370078), (15.748032, 0.78740156), (19.68504, 0), (19.68504, 0.78740156), (-19.68504, 0), (-15.748032, 0.39370078), (-19.68504, 0.78740156), (-15.748032, 0.39370078), (-19.68504, 0), (19.68504, 0), (-15.748032, 0.39370078), (19.68504, 0), (-11.811024, 0.39370078), (-11.811024, 0.39370078), (19.68504, 0), (-0.39370078, 0.39370078), (-0.39370078, 0.39370078), (19.68504, 0), (0.39370078, 0.39370078), (0.39370078, 0.39370078), (19.68504, 0), (11.811024, 0.39370078), (11.811024, 0.39370078), (19.68504, 0), (15.748032, 0.39370078), (15.748032, 0.39370078), (19.68504, 0), (15.748032, 0.78740156), (15.748032, 0.78740156), (19.68504, 0), (19.68504, 0.78740156), (-15.748032, 0.78740156), (-19.68504, 0.78740156), (-15.748032, 0.39370078), (-19.68504, 0.39370078), (19.68504, 11.811024), (-19.68504, 11.811024), (19.68504, 11.811024), (-19.68504, 0.39370078), (19.68504, 0.39370078), (19.68504, -11.811024), (-19.68504, -0.39370084), (-19.68504, -11.811024), (-19.68504, -0.39370084), (19.68504, -11.811024), (19.68504, -0.39370084), (19.68504, -15.748032), (-19.68504, -11.811024), (-19.68504, -15.748032), (-19.68504, -11.811024), (19.68504, -15.748032), (19.68504, -11.811024), (19.68504, 11.811024), (-19.68504, 15.748032), (-19.68504, 11.811024), (-19.68504, 15.748032), (19.68504, 11.811024), (19.68504, 15.748032), (19.68504, -0.39370084), (-19.68504, 0.39370078), (-19.68504, -0.39370084), (-19.68504, 0.39370078), (19.68504, -0.39370084), (19.68504, 0.39370078)] (
                    interpolation = "faceVarying"
                )
                uniform token subdivisionScheme = "none"
                float3 xformOp:rotateXYZ = (0, 90, 0)
                float3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (450, 0, 150)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                def GeomSubset "pavement" (
                    apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    uniform token elementType = "face"
                    uniform token familyName = "materialBind"
                    int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
                    rel material:binding = </World/Looks/pavement> (
                        bindMaterialAs = "weakerThanDescendants"
                    )
                }

                def GeomSubset "asphalt" (
                    apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    uniform token elementType = "face"
                    uniform token familyName = "materialBind"
                    int[] indices = [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37]
                    rel material:binding = </World/Looks/asphalt> (
                        bindMaterialAs = "weakerThanDescendants"
                    )
                }

                def GeomSubset "asphaltEdge" (
                    apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    uniform token elementType = "face"
                    uniform token familyName = "materialBind"
                    int[] indices = [38, 39, 40, 41]
                    rel material:binding = </World/Looks/asphaltEdge> (
                        bindMaterialAs = "weakerThanDescendants"
                    )
                }

                def GeomSubset "line" (
                    apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    uniform token elementType = "face"
                    uniform token familyName = "materialBind"
                    int[] indices = [42, 43]
                    rel material:binding = </World/Looks/line> (
                        bindMaterialAs = "weakerThanDescendants"
                    )
                }
            }

            def Mesh "road_straight_28" (
                prepend specializes = </_osm_street_data>
            )
            {
                float3[] extent = [(-50, 0, -50), (50, 2, 50)]
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [2, 1, 0, 1, 2, 3, 6, 5, 4, 5, 6, 7, 10, 9, 8, 9, 10, 11, 14, 13, 12, 13, 14, 15, 18, 17, 16, 17, 18, 19, 22, 21, 20, 21, 22, 23, 26, 25, 24, 25, 26, 27, 94, 93, 92, 95, 93, 94, 95, 96, 93, 95, 97, 96, 95, 98, 97, 95, 99, 98, 95, 100, 99, 101, 100, 95, 101, 102, 100, 102, 101, 103, 106, 105, 104, 105, 106, 107, 105, 107, 108, 108, 107, 109, 109, 107, 110, 110, 107, 111, 111, 107, 112, 112, 107, 113, 113, 107, 114, 115, 104, 105, 118, 117, 116, 117, 118, 119, 122, 121, 120, 121, 122, 123, 189, 184, 188, 184, 189, 186, 181, 190, 180, 190, 181, 191, 251, 246, 249, 246, 251, 247]
                normal3f[] normals = [(0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0)] (
                    interpolation = "faceVarying"
                )
                custom int osm:street:maxspeed = 20
                point3f[] points = [(-50, 1, 40), (50, 1, 40), (-50, 2, 40), (50, 2, 40), (50, 0, 50), (-50, 0, 50), (50, 2, 50), (-50, 2, 50), (50, 1, -40), (-50, 1, -40), (50, 2, -40), (-50, 2, -40), (-50, 0, -50), (-50, 0, 50), (50, 0, -50), (50, 0, 50), (-50, 2, 50), (-50, 2, 40), (50, 2, 50), (50, 2, 40), (-50, 0, -50), (50, 0, -50), (-50, 2, -50), (50, 2, -50), (-50, 2, -40), (-50, 2, -50), (50, 2, -40), (50, 2, -50), (-50, 2, -40), (-50, 1, -40), (-50, 2, -50), (-50, 0, -50), (-50, 1, -30.000002), (-50, 1, -1), (-50, 1, 1), (-50, 1, 30.000002), (-50, 1, 40), (-50, 0, 50), (-50, 2, 40), (-50, 2, 50), (50, 2, 50), (50, 1, 40), (50, 0, 50), (50, 0, -50), (50, 1, 30.000002), (50, 1, 1), (50, 1, -1), (50, 1, -30.000002), (50, 1, -40), (50, 2, -40), (50, 2, -50), (50, 2, 40), (-50, 1, -30.000002), (50, 1, -30.000002), (-50, 1, -1), (50, 1, -1), (-50, 1, 30.000002), (-50, 1, 1), (50, 1, 30.000002), (50, 1, 1), (-50, 1, 40), (50, 1, 40), (-50, 1, -40), (50, 1, -40), (-50, 1, 40), (50, 1, 40), (-50, 2, 40), (50, 2, 40), (50, 0, 50), (-50, 0, 50), (50, 2, 50), (-50, 2, 50), (50, 1, -40), (-50, 1, -40), (50, 2, -40), (-50, 2, -40), (-50, 0, -50), (-50, 0, 50), (50, 0, -50), (50, 0, 50), (-50, 2, 50), (-50, 2, 40), (50, 2, 50), (50, 2, 40), (-50, 0, -50), (50, 0, -50), (-50, 2, -50), (50, 2, -50), (-50, 2, -40), (-50, 2, -50), (50, 2, -40), (50, 2, -50), (-50, 2, -40), (-50, 1, -40), (-50, 2, -50), (-50, 0, -50), (-50, 1, -30.000002), (-50, 1, -1), (-50, 1, 1), (-50, 1, 30.000002), (-50, 1, 40), (-50, 0, 50), (-50, 2, 40), (-50, 2, 50), (50, 2, 50), (50, 1, 40), (50, 0, 50), (50, 0, -50), (50, 1, 30.000002), (50, 1, 1), (50, 1, -1), (50, 1, -30.000002), (50, 1, -40), (50, 2, -40), (50, 2, -50), (50, 2, 40), (-50, 1, -30.000002), (50, 1, -30.000002), (-50, 1, -1), (50, 1, -1), (-50, 1, 30.000002), (-50, 1, 1), (50, 1, 30.000002), (50, 1, 1), (-50, 1, 40), (50, 1, 40), (-50, 1, -40), (50, 1, -40), (-50, 1, 40), (50, 1, 40), (-50, 2, 40), (50, 2, 40), (50, 0, 50), (-50, 0, 50), (50, 2, 50), (-50, 2, 50), (50, 1, -40), (-50, 1, -40), (50, 2, -40), (-50, 2, -40), (-50, 0, -50), (-50, 0, 50), (50, 0, -50), (50, 0, 50), (-50, 2, 50), (-50, 2, 40), (50, 2, 50), (50, 2, 40), (-50, 0, -50), (50, 0, -50), (-50, 2, -50), (50, 2, -50), (-50, 2, -40), (-50, 2, -50), (50, 2, -40), (50, 2, -50), (-50, 2, -40), (-50, 1, -40), (-50, 2, -50), (-50, 0, -50), (-50, 1, -30.000002), (-50, 1, -1), (-50, 1, 1), (-50, 1, 30.000002), (-50, 1, 40), (-50, 0, 50), (-50, 2, 40), (-50, 2, 50), (50, 2, 50), (50, 1, 40), (50, 0, 50), (50, 0, -50), (50, 1, 30.000002), (50, 1, 1), (50, 1, -1), (50, 1, -30.000002), (50, 1, -40), (50, 2, -40), (50, 2, -50), (50, 2, 40), (-50, 1, -30.000002), (50, 1, -30.000002), (-50, 1, -1), (50, 1, -1), (-50, 1, 30.000002), (-50, 1, 1), (50, 1, 30.000002), (50, 1, 1), (-50, 1, 40), (50, 1, 40), (-50, 1, -40), (50, 1, -40), (-50, 1, 40), (50, 1, 40), (-50, 2, 40), (50, 2, 40), (50, 0, 50), (-50, 0, 50), (50, 2, 50), (-50, 2, 50), (50, 1, -40), (-50, 1, -40), (50, 2, -40), (-50, 2, -40), (-50, 0, -50), (-50, 0, 50), (50, 0, -50), (50, 0, 50), (-50, 2, 50), (-50, 2, 40), (50, 2, 50), (50, 2, 40), (-50, 0, -50), (50, 0, -50), (-50, 2, -50), (50, 2, -50), (-50, 2, -40), (-50, 2, -50), (50, 2, -40), (50, 2, -50), (-50, 2, -40), (-50, 1, -40), (-50, 2, -50), (-50, 0, -50), (-50, 1, -30.000002), (-50, 1, -1), (-50, 1, 1), (-50, 1, 30.000002), (-50, 1, 40), (-50, 0, 50), (-50, 2, 40), (-50, 2, 50), (50, 2, 50), (50, 1, 40), (50, 0, 50), (50, 0, -50), (50, 1, 30.000002), (50, 1, 1), (50, 1, -1), (50, 1, -30.000002), (50, 1, -40), (50, 2, -40), (50, 2, -50), (50, 2, 40), (-50, 1, -30.000002), (50, 1, -30.000002), (-50, 1, -1), (50, 1, -1), (-50, 1, 30.000002), (-50, 1, 1), (50, 1, 30.000002), (50, 1, 1), (-50, 1, 40), (50, 1, 40), (-50, 1, -40), (50, 1, -40)]
                texCoord2f[] primvars:st = [(19.68504, 0.78740156), (-19.68504, 0.39370078), (19.68504, 0.39370078), (-19.68504, 0.39370078), (19.68504, 0.78740156), (-19.68504, 0.78740156), (19.68504, 0.78740156), (-19.68504, 0), (19.68504, 0), (-19.68504, 0), (19.68504, 0.78740156), (-19.68504, 0.78740156), (19.68504, 0.78740156), (-19.68504, 0.39370078), (19.68504, 0.39370078), (-19.68504, 0.39370078), (19.68504, 0.78740156), (-19.68504, 0.78740156), (-19.68504, 19.68504), (19.68504, -19.68504), (19.68504, 19.68504), (19.68504, -19.68504), (-19.68504, 19.68504), (-19.68504, -19.68504), (19.68504, -19.68504), (-19.68504, -15.748032), (-19.68504, -19.68504), (-19.68504, -15.748032), (19.68504, -19.68504), (19.68504, -15.748032), (19.68504, 0.78740156), (-19.68504, 0), (19.68504, 0), (-19.68504, 0), (19.68504, 0.78740156), (-19.68504, 0.78740156), (19.68504, 15.748032), (-19.68504, 19.68504), (-19.68504, 15.748032), (-19.68504, 19.68504), (19.68504, 15.748032), (19.68504, 19.68504), (-19.68504, 0.78740156), (-15.748032, 0.39370078), (-15.748032, 0.78740156), (-19.68504, 0), (-15.748032, 0.39370078), (-19.68504, 0.78740156), (-19.68504, 0), (-11.811024, 0.39370078), (-15.748032, 0.39370078), (-19.68504, 0), (-0.39370078, 0.39370078), (-11.811024, 0.39370078), (-19.68504, 0), (0.39370078, 0.39370078), (-0.39370078, 0.39370078), (-19.68504, 0), (11.811024, 0.39370078), (0.39370078, 0.39370078), (-19.68504, 0), (15.748032, 0.39370078), (11.811024, 0.39370078), (19.68504, 0), (15.748032, 0.39370078), (-19.68504, 0), (19.68504, 0), (15.748032, 0.78740156), (15.748032, 0.39370078), (15.748032, 0.78740156), (19.68504, 0), (19.68504, 0.78740156), (-19.68504, 0), (-15.748032, 0.39370078), (-19.68504, 0.78740156), (-15.748032, 0.39370078), (-19.68504, 0), (19.68504, 0), (-15.748032, 0.39370078), (19.68504, 0), (-11.811024, 0.39370078), (-11.811024, 0.39370078), (19.68504, 0), (-0.39370078, 0.39370078), (-0.39370078, 0.39370078), (19.68504, 0), (0.39370078, 0.39370078), (0.39370078, 0.39370078), (19.68504, 0), (11.811024, 0.39370078), (11.811024, 0.39370078), (19.68504, 0), (15.748032, 0.39370078), (15.748032, 0.39370078), (19.68504, 0), (15.748032, 0.78740156), (15.748032, 0.78740156), (19.68504, 0), (19.68504, 0.78740156), (-15.748032, 0.78740156), (-19.68504, 0.78740156), (-15.748032, 0.39370078), (-19.68504, 0.39370078), (19.68504, 11.811024), (-19.68504, 11.811024), (19.68504, 11.811024), (-19.68504, 0.39370078), (19.68504, 0.39370078), (19.68504, -11.811024), (-19.68504, -0.39370084), (-19.68504, -11.811024), (-19.68504, -0.39370084), (19.68504, -11.811024), (19.68504, -0.39370084), (19.68504, -15.748032), (-19.68504, -11.811024), (-19.68504, -15.748032), (-19.68504, -11.811024), (19.68504, -15.748032), (19.68504, -11.811024), (19.68504, 11.811024), (-19.68504, 15.748032), (-19.68504, 11.811024), (-19.68504, 15.748032), (19.68504, 11.811024), (19.68504, 15.748032), (19.68504, -0.39370084), (-19.68504, 0.39370078), (-19.68504, -0.39370084), (-19.68504, 0.39370078), (19.68504, -0.39370084), (19.68504, 0.39370078)] (
                    interpolation = "faceVarying"
                )
                uniform token subdivisionScheme = "none"
                float3 xformOp:rotateXYZ = (0, 90, 0)
                float3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (450, 0, -150)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                def GeomSubset "pavement" (
                    apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    uniform token elementType = "face"
                    uniform token familyName = "materialBind"
                    int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
                    rel material:binding = </World/Looks/pavement> (
                        bindMaterialAs = "weakerThanDescendants"
                    )
                }

                def GeomSubset "asphalt" (
                    apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    uniform token elementType = "face"
                    uniform token familyName = "materialBind"
                    int[] indices = [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37]
                    rel material:binding = </World/Looks/asphalt> (
                        bindMaterialAs = "weakerThanDescendants"
                    )
                }

                def GeomSubset "asphaltEdge" (
                    apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    uniform token elementType = "face"
                    uniform token familyName = "materialBind"
                    int[] indices = [38, 39, 40, 41]
                    rel material:binding = </World/Looks/asphaltEdge> (
                        bindMaterialAs = "weakerThanDescendants"
                    )
                }

                def GeomSubset "line" (
                    apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    uniform token elementType = "face"
                    uniform token familyName = "materialBind"
                    int[] indices = [42, 43]
                    rel material:binding = </World/Looks/line> (
                        bindMaterialAs = "weakerThanDescendants"
                    )
                }
            }

            def Mesh "road_straight_29" (
                prepend specializes = </_osm_street_data>
            )
            {
                float3[] extent = [(-50, 0, -50), (50, 2, 50)]
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [2, 1, 0, 1, 2, 3, 6, 5, 4, 5, 6, 7, 10, 9, 8, 9, 10, 11, 14, 13, 12, 13, 14, 15, 18, 17, 16, 17, 18, 19, 22, 21, 20, 21, 22, 23, 26, 25, 24, 25, 26, 27, 94, 93, 92, 95, 93, 94, 95, 96, 93, 95, 97, 96, 95, 98, 97, 95, 99, 98, 95, 100, 99, 101, 100, 95, 101, 102, 100, 102, 101, 103, 106, 105, 104, 105, 106, 107, 105, 107, 108, 108, 107, 109, 109, 107, 110, 110, 107, 111, 111, 107, 112, 112, 107, 113, 113, 107, 114, 115, 104, 105, 118, 117, 116, 117, 118, 119, 122, 121, 120, 121, 122, 123, 189, 184, 188, 184, 189, 186, 181, 190, 180, 190, 181, 191, 251, 246, 249, 246, 251, 247]
                normal3f[] normals = [(0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0)] (
                    interpolation = "faceVarying"
                )
                point3f[] points = [(-50, 1, 40), (50, 1, 40), (-50, 2, 40), (50, 2, 40), (50, 0, 50), (-50, 0, 50), (50, 2, 50), (-50, 2, 50), (50, 1, -40), (-50, 1, -40), (50, 2, -40), (-50, 2, -40), (-50, 0, -50), (-50, 0, 50), (50, 0, -50), (50, 0, 50), (-50, 2, 50), (-50, 2, 40), (50, 2, 50), (50, 2, 40), (-50, 0, -50), (50, 0, -50), (-50, 2, -50), (50, 2, -50), (-50, 2, -40), (-50, 2, -50), (50, 2, -40), (50, 2, -50), (-50, 2, -40), (-50, 1, -40), (-50, 2, -50), (-50, 0, -50), (-50, 1, -30.000002), (-50, 1, -1), (-50, 1, 1), (-50, 1, 30.000002), (-50, 1, 40), (-50, 0, 50), (-50, 2, 40), (-50, 2, 50), (50, 2, 50), (50, 1, 40), (50, 0, 50), (50, 0, -50), (50, 1, 30.000002), (50, 1, 1), (50, 1, -1), (50, 1, -30.000002), (50, 1, -40), (50, 2, -40), (50, 2, -50), (50, 2, 40), (-50, 1, -30.000002), (50, 1, -30.000002), (-50, 1, -1), (50, 1, -1), (-50, 1, 30.000002), (-50, 1, 1), (50, 1, 30.000002), (50, 1, 1), (-50, 1, 40), (50, 1, 40), (-50, 1, -40), (50, 1, -40), (-50, 1, 40), (50, 1, 40), (-50, 2, 40), (50, 2, 40), (50, 0, 50), (-50, 0, 50), (50, 2, 50), (-50, 2, 50), (50, 1, -40), (-50, 1, -40), (50, 2, -40), (-50, 2, -40), (-50, 0, -50), (-50, 0, 50), (50, 0, -50), (50, 0, 50), (-50, 2, 50), (-50, 2, 40), (50, 2, 50), (50, 2, 40), (-50, 0, -50), (50, 0, -50), (-50, 2, -50), (50, 2, -50), (-50, 2, -40), (-50, 2, -50), (50, 2, -40), (50, 2, -50), (-50, 2, -40), (-50, 1, -40), (-50, 2, -50), (-50, 0, -50), (-50, 1, -30.000002), (-50, 1, -1), (-50, 1, 1), (-50, 1, 30.000002), (-50, 1, 40), (-50, 0, 50), (-50, 2, 40), (-50, 2, 50), (50, 2, 50), (50, 1, 40), (50, 0, 50), (50, 0, -50), (50, 1, 30.000002), (50, 1, 1), (50, 1, -1), (50, 1, -30.000002), (50, 1, -40), (50, 2, -40), (50, 2, -50), (50, 2, 40), (-50, 1, -30.000002), (50, 1, -30.000002), (-50, 1, -1), (50, 1, -1), (-50, 1, 30.000002), (-50, 1, 1), (50, 1, 30.000002), (50, 1, 1), (-50, 1, 40), (50, 1, 40), (-50, 1, -40), (50, 1, -40), (-50, 1, 40), (50, 1, 40), (-50, 2, 40), (50, 2, 40), (50, 0, 50), (-50, 0, 50), (50, 2, 50), (-50, 2, 50), (50, 1, -40), (-50, 1, -40), (50, 2, -40), (-50, 2, -40), (-50, 0, -50), (-50, 0, 50), (50, 0, -50), (50, 0, 50), (-50, 2, 50), (-50, 2, 40), (50, 2, 50), (50, 2, 40), (-50, 0, -50), (50, 0, -50), (-50, 2, -50), (50, 2, -50), (-50, 2, -40), (-50, 2, -50), (50, 2, -40), (50, 2, -50), (-50, 2, -40), (-50, 1, -40), (-50, 2, -50), (-50, 0, -50), (-50, 1, -30.000002), (-50, 1, -1), (-50, 1, 1), (-50, 1, 30.000002), (-50, 1, 40), (-50, 0, 50), (-50, 2, 40), (-50, 2, 50), (50, 2, 50), (50, 1, 40), (50, 0, 50), (50, 0, -50), (50, 1, 30.000002), (50, 1, 1), (50, 1, -1), (50, 1, -30.000002), (50, 1, -40), (50, 2, -40), (50, 2, -50), (50, 2, 40), (-50, 1, -30.000002), (50, 1, -30.000002), (-50, 1, -1), (50, 1, -1), (-50, 1, 30.000002), (-50, 1, 1), (50, 1, 30.000002), (50, 1, 1), (-50, 1, 40), (50, 1, 40), (-50, 1, -40), (50, 1, -40), (-50, 1, 40), (50, 1, 40), (-50, 2, 40), (50, 2, 40), (50, 0, 50), (-50, 0, 50), (50, 2, 50), (-50, 2, 50), (50, 1, -40), (-50, 1, -40), (50, 2, -40), (-50, 2, -40), (-50, 0, -50), (-50, 0, 50), (50, 0, -50), (50, 0, 50), (-50, 2, 50), (-50, 2, 40), (50, 2, 50), (50, 2, 40), (-50, 0, -50), (50, 0, -50), (-50, 2, -50), (50, 2, -50), (-50, 2, -40), (-50, 2, -50), (50, 2, -40), (50, 2, -50), (-50, 2, -40), (-50, 1, -40), (-50, 2, -50), (-50, 0, -50), (-50, 1, -30.000002), (-50, 1, -1), (-50, 1, 1), (-50, 1, 30.000002), (-50, 1, 40), (-50, 0, 50), (-50, 2, 40), (-50, 2, 50), (50, 2, 50), (50, 1, 40), (50, 0, 50), (50, 0, -50), (50, 1, 30.000002), (50, 1, 1), (50, 1, -1), (50, 1, -30.000002), (50, 1, -40), (50, 2, -40), (50, 2, -50), (50, 2, 40), (-50, 1, -30.000002), (50, 1, -30.000002), (-50, 1, -1), (50, 1, -1), (-50, 1, 30.000002), (-50, 1, 1), (50, 1, 30.000002), (50, 1, 1), (-50, 1, 40), (50, 1, 40), (-50, 1, -40), (50, 1, -40)]
                texCoord2f[] primvars:st = [(19.68504, 0.78740156), (-19.68504, 0.39370078), (19.68504, 0.39370078), (-19.68504, 0.39370078), (19.68504, 0.78740156), (-19.68504, 0.78740156), (19.68504, 0.78740156), (-19.68504, 0), (19.68504, 0), (-19.68504, 0), (19.68504, 0.78740156), (-19.68504, 0.78740156), (19.68504, 0.78740156), (-19.68504, 0.39370078), (19.68504, 0.39370078), (-19.68504, 0.39370078), (19.68504, 0.78740156), (-19.68504, 0.78740156), (-19.68504, 19.68504), (19.68504, -19.68504), (19.68504, 19.68504), (19.68504, -19.68504), (-19.68504, 19.68504), (-19.68504, -19.68504), (19.68504, -19.68504), (-19.68504, -15.748032), (-19.68504, -19.68504), (-19.68504, -15.748032), (19.68504, -19.68504), (19.68504, -15.748032), (19.68504, 0.78740156), (-19.68504, 0), (19.68504, 0), (-19.68504, 0), (19.68504, 0.78740156), (-19.68504, 0.78740156), (19.68504, 15.748032), (-19.68504, 19.68504), (-19.68504, 15.748032), (-19.68504, 19.68504), (19.68504, 15.748032), (19.68504, 19.68504), (-19.68504, 0.78740156), (-15.748032, 0.39370078), (-15.748032, 0.78740156), (-19.68504, 0), (-15.748032, 0.39370078), (-19.68504, 0.78740156), (-19.68504, 0), (-11.811024, 0.39370078), (-15.748032, 0.39370078), (-19.68504, 0), (-0.39370078, 0.39370078), (-11.811024, 0.39370078), (-19.68504, 0), (0.39370078, 0.39370078), (-0.39370078, 0.39370078), (-19.68504, 0), (11.811024, 0.39370078), (0.39370078, 0.39370078), (-19.68504, 0), (15.748032, 0.39370078), (11.811024, 0.39370078), (19.68504, 0), (15.748032, 0.39370078), (-19.68504, 0), (19.68504, 0), (15.748032, 0.78740156), (15.748032, 0.39370078), (15.748032, 0.78740156), (19.68504, 0), (19.68504, 0.78740156), (-19.68504, 0), (-15.748032, 0.39370078), (-19.68504, 0.78740156), (-15.748032, 0.39370078), (-19.68504, 0), (19.68504, 0), (-15.748032, 0.39370078), (19.68504, 0), (-11.811024, 0.39370078), (-11.811024, 0.39370078), (19.68504, 0), (-0.39370078, 0.39370078), (-0.39370078, 0.39370078), (19.68504, 0), (0.39370078, 0.39370078), (0.39370078, 0.39370078), (19.68504, 0), (11.811024, 0.39370078), (11.811024, 0.39370078), (19.68504, 0), (15.748032, 0.39370078), (15.748032, 0.39370078), (19.68504, 0), (15.748032, 0.78740156), (15.748032, 0.78740156), (19.68504, 0), (19.68504, 0.78740156), (-15.748032, 0.78740156), (-19.68504, 0.78740156), (-15.748032, 0.39370078), (-19.68504, 0.39370078), (19.68504, 11.811024), (-19.68504, 11.811024), (19.68504, 11.811024), (-19.68504, 0.39370078), (19.68504, 0.39370078), (19.68504, -11.811024), (-19.68504, -0.39370084), (-19.68504, -11.811024), (-19.68504, -0.39370084), (19.68504, -11.811024), (19.68504, -0.39370084), (19.68504, -15.748032), (-19.68504, -11.811024), (-19.68504, -15.748032), (-19.68504, -11.811024), (19.68504, -15.748032), (19.68504, -11.811024), (19.68504, 11.811024), (-19.68504, 15.748032), (-19.68504, 11.811024), (-19.68504, 15.748032), (19.68504, 11.811024), (19.68504, 15.748032), (19.68504, -0.39370084), (-19.68504, 0.39370078), (-19.68504, -0.39370084), (-19.68504, 0.39370078), (19.68504, -0.39370084), (19.68504, 0.39370078)] (
                    interpolation = "faceVarying"
                )
                uniform token subdivisionScheme = "none"
                float3 xformOp:rotateXYZ = (0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (550, 0, -50)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                def GeomSubset "pavement" (
                    apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    uniform token elementType = "face"
                    uniform token familyName = "materialBind"
                    int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
                    rel material:binding = </World/Looks/pavement> (
                        bindMaterialAs = "weakerThanDescendants"
                    )
                }

                def GeomSubset "asphalt" (
                    apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    uniform token elementType = "face"
                    uniform token familyName = "materialBind"
                    int[] indices = [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37]
                    rel material:binding = </World/Looks/asphalt> (
                        bindMaterialAs = "weakerThanDescendants"
                    )
                }

                def GeomSubset "asphaltEdge" (
                    apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    uniform token elementType = "face"
                    uniform token familyName = "materialBind"
                    int[] indices = [38, 39, 40, 41]
                    rel material:binding = </World/Looks/asphaltEdge> (
                        bindMaterialAs = "weakerThanDescendants"
                    )
                }

                def GeomSubset "line" (
                    apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    uniform token elementType = "face"
                    uniform token familyName = "materialBind"
                    int[] indices = [42, 43]
                    rel material:binding = </World/Looks/line> (
                        bindMaterialAs = "weakerThanDescendants"
                    )
                }
            }

            def Mesh "road_straight_30" (
                prepend specializes = </_osm_street_data>
            )
            {
                float3[] extent = [(-50, 0, -50), (50, 2, 50)]
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [2, 1, 0, 1, 2, 3, 6, 5, 4, 5, 6, 7, 10, 9, 8, 9, 10, 11, 14, 13, 12, 13, 14, 15, 18, 17, 16, 17, 18, 19, 22, 21, 20, 21, 22, 23, 26, 25, 24, 25, 26, 27, 94, 93, 92, 95, 93, 94, 95, 96, 93, 95, 97, 96, 95, 98, 97, 95, 99, 98, 95, 100, 99, 101, 100, 95, 101, 102, 100, 102, 101, 103, 106, 105, 104, 105, 106, 107, 105, 107, 108, 108, 107, 109, 109, 107, 110, 110, 107, 111, 111, 107, 112, 112, 107, 113, 113, 107, 114, 115, 104, 105, 118, 117, 116, 117, 118, 119, 122, 121, 120, 121, 122, 123, 189, 184, 188, 184, 189, 186, 181, 190, 180, 190, 181, 191, 251, 246, 249, 246, 251, 247]
                normal3f[] normals = [(0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0)] (
                    interpolation = "faceVarying"
                )
                point3f[] points = [(-50, 1, 40), (50, 1, 40), (-50, 2, 40), (50, 2, 40), (50, 0, 50), (-50, 0, 50), (50, 2, 50), (-50, 2, 50), (50, 1, -40), (-50, 1, -40), (50, 2, -40), (-50, 2, -40), (-50, 0, -50), (-50, 0, 50), (50, 0, -50), (50, 0, 50), (-50, 2, 50), (-50, 2, 40), (50, 2, 50), (50, 2, 40), (-50, 0, -50), (50, 0, -50), (-50, 2, -50), (50, 2, -50), (-50, 2, -40), (-50, 2, -50), (50, 2, -40), (50, 2, -50), (-50, 2, -40), (-50, 1, -40), (-50, 2, -50), (-50, 0, -50), (-50, 1, -30.000002), (-50, 1, -1), (-50, 1, 1), (-50, 1, 30.000002), (-50, 1, 40), (-50, 0, 50), (-50, 2, 40), (-50, 2, 50), (50, 2, 50), (50, 1, 40), (50, 0, 50), (50, 0, -50), (50, 1, 30.000002), (50, 1, 1), (50, 1, -1), (50, 1, -30.000002), (50, 1, -40), (50, 2, -40), (50, 2, -50), (50, 2, 40), (-50, 1, -30.000002), (50, 1, -30.000002), (-50, 1, -1), (50, 1, -1), (-50, 1, 30.000002), (-50, 1, 1), (50, 1, 30.000002), (50, 1, 1), (-50, 1, 40), (50, 1, 40), (-50, 1, -40), (50, 1, -40), (-50, 1, 40), (50, 1, 40), (-50, 2, 40), (50, 2, 40), (50, 0, 50), (-50, 0, 50), (50, 2, 50), (-50, 2, 50), (50, 1, -40), (-50, 1, -40), (50, 2, -40), (-50, 2, -40), (-50, 0, -50), (-50, 0, 50), (50, 0, -50), (50, 0, 50), (-50, 2, 50), (-50, 2, 40), (50, 2, 50), (50, 2, 40), (-50, 0, -50), (50, 0, -50), (-50, 2, -50), (50, 2, -50), (-50, 2, -40), (-50, 2, -50), (50, 2, -40), (50, 2, -50), (-50, 2, -40), (-50, 1, -40), (-50, 2, -50), (-50, 0, -50), (-50, 1, -30.000002), (-50, 1, -1), (-50, 1, 1), (-50, 1, 30.000002), (-50, 1, 40), (-50, 0, 50), (-50, 2, 40), (-50, 2, 50), (50, 2, 50), (50, 1, 40), (50, 0, 50), (50, 0, -50), (50, 1, 30.000002), (50, 1, 1), (50, 1, -1), (50, 1, -30.000002), (50, 1, -40), (50, 2, -40), (50, 2, -50), (50, 2, 40), (-50, 1, -30.000002), (50, 1, -30.000002), (-50, 1, -1), (50, 1, -1), (-50, 1, 30.000002), (-50, 1, 1), (50, 1, 30.000002), (50, 1, 1), (-50, 1, 40), (50, 1, 40), (-50, 1, -40), (50, 1, -40), (-50, 1, 40), (50, 1, 40), (-50, 2, 40), (50, 2, 40), (50, 0, 50), (-50, 0, 50), (50, 2, 50), (-50, 2, 50), (50, 1, -40), (-50, 1, -40), (50, 2, -40), (-50, 2, -40), (-50, 0, -50), (-50, 0, 50), (50, 0, -50), (50, 0, 50), (-50, 2, 50), (-50, 2, 40), (50, 2, 50), (50, 2, 40), (-50, 0, -50), (50, 0, -50), (-50, 2, -50), (50, 2, -50), (-50, 2, -40), (-50, 2, -50), (50, 2, -40), (50, 2, -50), (-50, 2, -40), (-50, 1, -40), (-50, 2, -50), (-50, 0, -50), (-50, 1, -30.000002), (-50, 1, -1), (-50, 1, 1), (-50, 1, 30.000002), (-50, 1, 40), (-50, 0, 50), (-50, 2, 40), (-50, 2, 50), (50, 2, 50), (50, 1, 40), (50, 0, 50), (50, 0, -50), (50, 1, 30.000002), (50, 1, 1), (50, 1, -1), (50, 1, -30.000002), (50, 1, -40), (50, 2, -40), (50, 2, -50), (50, 2, 40), (-50, 1, -30.000002), (50, 1, -30.000002), (-50, 1, -1), (50, 1, -1), (-50, 1, 30.000002), (-50, 1, 1), (50, 1, 30.000002), (50, 1, 1), (-50, 1, 40), (50, 1, 40), (-50, 1, -40), (50, 1, -40), (-50, 1, 40), (50, 1, 40), (-50, 2, 40), (50, 2, 40), (50, 0, 50), (-50, 0, 50), (50, 2, 50), (-50, 2, 50), (50, 1, -40), (-50, 1, -40), (50, 2, -40), (-50, 2, -40), (-50, 0, -50), (-50, 0, 50), (50, 0, -50), (50, 0, 50), (-50, 2, 50), (-50, 2, 40), (50, 2, 50), (50, 2, 40), (-50, 0, -50), (50, 0, -50), (-50, 2, -50), (50, 2, -50), (-50, 2, -40), (-50, 2, -50), (50, 2, -40), (50, 2, -50), (-50, 2, -40), (-50, 1, -40), (-50, 2, -50), (-50, 0, -50), (-50, 1, -30.000002), (-50, 1, -1), (-50, 1, 1), (-50, 1, 30.000002), (-50, 1, 40), (-50, 0, 50), (-50, 2, 40), (-50, 2, 50), (50, 2, 50), (50, 1, 40), (50, 0, 50), (50, 0, -50), (50, 1, 30.000002), (50, 1, 1), (50, 1, -1), (50, 1, -30.000002), (50, 1, -40), (50, 2, -40), (50, 2, -50), (50, 2, 40), (-50, 1, -30.000002), (50, 1, -30.000002), (-50, 1, -1), (50, 1, -1), (-50, 1, 30.000002), (-50, 1, 1), (50, 1, 30.000002), (50, 1, 1), (-50, 1, 40), (50, 1, 40), (-50, 1, -40), (50, 1, -40)]
                texCoord2f[] primvars:st = [(19.68504, 0.78740156), (-19.68504, 0.39370078), (19.68504, 0.39370078), (-19.68504, 0.39370078), (19.68504, 0.78740156), (-19.68504, 0.78740156), (19.68504, 0.78740156), (-19.68504, 0), (19.68504, 0), (-19.68504, 0), (19.68504, 0.78740156), (-19.68504, 0.78740156), (19.68504, 0.78740156), (-19.68504, 0.39370078), (19.68504, 0.39370078), (-19.68504, 0.39370078), (19.68504, 0.78740156), (-19.68504, 0.78740156), (-19.68504, 19.68504), (19.68504, -19.68504), (19.68504, 19.68504), (19.68504, -19.68504), (-19.68504, 19.68504), (-19.68504, -19.68504), (19.68504, -19.68504), (-19.68504, -15.748032), (-19.68504, -19.68504), (-19.68504, -15.748032), (19.68504, -19.68504), (19.68504, -15.748032), (19.68504, 0.78740156), (-19.68504, 0), (19.68504, 0), (-19.68504, 0), (19.68504, 0.78740156), (-19.68504, 0.78740156), (19.68504, 15.748032), (-19.68504, 19.68504), (-19.68504, 15.748032), (-19.68504, 19.68504), (19.68504, 15.748032), (19.68504, 19.68504), (-19.68504, 0.78740156), (-15.748032, 0.39370078), (-15.748032, 0.78740156), (-19.68504, 0), (-15.748032, 0.39370078), (-19.68504, 0.78740156), (-19.68504, 0), (-11.811024, 0.39370078), (-15.748032, 0.39370078), (-19.68504, 0), (-0.39370078, 0.39370078), (-11.811024, 0.39370078), (-19.68504, 0), (0.39370078, 0.39370078), (-0.39370078, 0.39370078), (-19.68504, 0), (11.811024, 0.39370078), (0.39370078, 0.39370078), (-19.68504, 0), (15.748032, 0.39370078), (11.811024, 0.39370078), (19.68504, 0), (15.748032, 0.39370078), (-19.68504, 0), (19.68504, 0), (15.748032, 0.78740156), (15.748032, 0.39370078), (15.748032, 0.78740156), (19.68504, 0), (19.68504, 0.78740156), (-19.68504, 0), (-15.748032, 0.39370078), (-19.68504, 0.78740156), (-15.748032, 0.39370078), (-19.68504, 0), (19.68504, 0), (-15.748032, 0.39370078), (19.68504, 0), (-11.811024, 0.39370078), (-11.811024, 0.39370078), (19.68504, 0), (-0.39370078, 0.39370078), (-0.39370078, 0.39370078), (19.68504, 0), (0.39370078, 0.39370078), (0.39370078, 0.39370078), (19.68504, 0), (11.811024, 0.39370078), (11.811024, 0.39370078), (19.68504, 0), (15.748032, 0.39370078), (15.748032, 0.39370078), (19.68504, 0), (15.748032, 0.78740156), (15.748032, 0.78740156), (19.68504, 0), (19.68504, 0.78740156), (-15.748032, 0.78740156), (-19.68504, 0.78740156), (-15.748032, 0.39370078), (-19.68504, 0.39370078), (19.68504, 11.811024), (-19.68504, 11.811024), (19.68504, 11.811024), (-19.68504, 0.39370078), (19.68504, 0.39370078), (19.68504, -11.811024), (-19.68504, -0.39370084), (-19.68504, -11.811024), (-19.68504, -0.39370084), (19.68504, -11.811024), (19.68504, -0.39370084), (19.68504, -15.748032), (-19.68504, -11.811024), (-19.68504, -15.748032), (-19.68504, -11.811024), (19.68504, -15.748032), (19.68504, -11.811024), (19.68504, 11.811024), (-19.68504, 15.748032), (-19.68504, 11.811024), (-19.68504, 15.748032), (19.68504, 11.811024), (19.68504, 15.748032), (19.68504, -0.39370084), (-19.68504, 0.39370078), (-19.68504, -0.39370084), (-19.68504, 0.39370078), (19.68504, -0.39370084), (19.68504, 0.39370078)] (
                    interpolation = "faceVarying"
                )
                uniform token subdivisionScheme = "none"
                float3 xformOp:rotateXYZ = (0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (550, 0, 50)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                def GeomSubset "pavement" (
                    apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    uniform token elementType = "face"
                    uniform token familyName = "materialBind"
                    int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
                    rel material:binding = </World/Looks/pavement> (
                        bindMaterialAs = "weakerThanDescendants"
                    )
                }

                def GeomSubset "asphalt" (
                    apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    uniform token elementType = "face"
                    uniform token familyName = "materialBind"
                    int[] indices = [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37]
                    rel material:binding = </World/Looks/asphalt> (
                        bindMaterialAs = "weakerThanDescendants"
                    )
                }

                def GeomSubset "asphaltEdge" (
                    apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    uniform token elementType = "face"
                    uniform token familyName = "materialBind"
                    int[] indices = [38, 39, 40, 41]
                    rel material:binding = </World/Looks/asphaltEdge> (
                        bindMaterialAs = "weakerThanDescendants"
                    )
                }

                def GeomSubset "line" (
                    apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    uniform token elementType = "face"
                    uniform token familyName = "materialBind"
                    int[] indices = [42, 43]
                    rel material:binding = </World/Looks/line> (
                        bindMaterialAs = "weakerThanDescendants"
                    )
                }
            }

            def Mesh "road_straight_34" (
                prepend specializes = </_osm_street_data>
            )
            {
                float3[] extent = [(-50, 0, -50), (50, 2, 50)]
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [2, 1, 0, 1, 2, 3, 6, 5, 4, 5, 6, 7, 10, 9, 8, 9, 10, 11, 14, 13, 12, 13, 14, 15, 18, 17, 16, 17, 18, 19, 22, 21, 20, 21, 22, 23, 26, 25, 24, 25, 26, 27, 94, 93, 92, 95, 93, 94, 95, 96, 93, 95, 97, 96, 95, 98, 97, 95, 99, 98, 95, 100, 99, 101, 100, 95, 101, 102, 100, 102, 101, 103, 106, 105, 104, 105, 106, 107, 105, 107, 108, 108, 107, 109, 109, 107, 110, 110, 107, 111, 111, 107, 112, 112, 107, 113, 113, 107, 114, 115, 104, 105, 118, 117, 116, 117, 118, 119, 122, 121, 120, 121, 122, 123, 189, 184, 188, 184, 189, 186, 181, 190, 180, 190, 181, 191, 251, 246, 249, 246, 251, 247]
                normal3f[] normals = [(0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0)] (
                    interpolation = "faceVarying"
                )
                custom int osm:street:maxspeed = 20
                point3f[] points = [(-50, 1, 40), (50, 1, 40), (-50, 2, 40), (50, 2, 40), (50, 0, 50), (-50, 0, 50), (50, 2, 50), (-50, 2, 50), (50, 1, -40), (-50, 1, -40), (50, 2, -40), (-50, 2, -40), (-50, 0, -50), (-50, 0, 50), (50, 0, -50), (50, 0, 50), (-50, 2, 50), (-50, 2, 40), (50, 2, 50), (50, 2, 40), (-50, 0, -50), (50, 0, -50), (-50, 2, -50), (50, 2, -50), (-50, 2, -40), (-50, 2, -50), (50, 2, -40), (50, 2, -50), (-50, 2, -40), (-50, 1, -40), (-50, 2, -50), (-50, 0, -50), (-50, 1, -30.000002), (-50, 1, -1), (-50, 1, 1), (-50, 1, 30.000002), (-50, 1, 40), (-50, 0, 50), (-50, 2, 40), (-50, 2, 50), (50, 2, 50), (50, 1, 40), (50, 0, 50), (50, 0, -50), (50, 1, 30.000002), (50, 1, 1), (50, 1, -1), (50, 1, -30.000002), (50, 1, -40), (50, 2, -40), (50, 2, -50), (50, 2, 40), (-50, 1, -30.000002), (50, 1, -30.000002), (-50, 1, -1), (50, 1, -1), (-50, 1, 30.000002), (-50, 1, 1), (50, 1, 30.000002), (50, 1, 1), (-50, 1, 40), (50, 1, 40), (-50, 1, -40), (50, 1, -40), (-50, 1, 40), (50, 1, 40), (-50, 2, 40), (50, 2, 40), (50, 0, 50), (-50, 0, 50), (50, 2, 50), (-50, 2, 50), (50, 1, -40), (-50, 1, -40), (50, 2, -40), (-50, 2, -40), (-50, 0, -50), (-50, 0, 50), (50, 0, -50), (50, 0, 50), (-50, 2, 50), (-50, 2, 40), (50, 2, 50), (50, 2, 40), (-50, 0, -50), (50, 0, -50), (-50, 2, -50), (50, 2, -50), (-50, 2, -40), (-50, 2, -50), (50, 2, -40), (50, 2, -50), (-50, 2, -40), (-50, 1, -40), (-50, 2, -50), (-50, 0, -50), (-50, 1, -30.000002), (-50, 1, -1), (-50, 1, 1), (-50, 1, 30.000002), (-50, 1, 40), (-50, 0, 50), (-50, 2, 40), (-50, 2, 50), (50, 2, 50), (50, 1, 40), (50, 0, 50), (50, 0, -50), (50, 1, 30.000002), (50, 1, 1), (50, 1, -1), (50, 1, -30.000002), (50, 1, -40), (50, 2, -40), (50, 2, -50), (50, 2, 40), (-50, 1, -30.000002), (50, 1, -30.000002), (-50, 1, -1), (50, 1, -1), (-50, 1, 30.000002), (-50, 1, 1), (50, 1, 30.000002), (50, 1, 1), (-50, 1, 40), (50, 1, 40), (-50, 1, -40), (50, 1, -40), (-50, 1, 40), (50, 1, 40), (-50, 2, 40), (50, 2, 40), (50, 0, 50), (-50, 0, 50), (50, 2, 50), (-50, 2, 50), (50, 1, -40), (-50, 1, -40), (50, 2, -40), (-50, 2, -40), (-50, 0, -50), (-50, 0, 50), (50, 0, -50), (50, 0, 50), (-50, 2, 50), (-50, 2, 40), (50, 2, 50), (50, 2, 40), (-50, 0, -50), (50, 0, -50), (-50, 2, -50), (50, 2, -50), (-50, 2, -40), (-50, 2, -50), (50, 2, -40), (50, 2, -50), (-50, 2, -40), (-50, 1, -40), (-50, 2, -50), (-50, 0, -50), (-50, 1, -30.000002), (-50, 1, -1), (-50, 1, 1), (-50, 1, 30.000002), (-50, 1, 40), (-50, 0, 50), (-50, 2, 40), (-50, 2, 50), (50, 2, 50), (50, 1, 40), (50, 0, 50), (50, 0, -50), (50, 1, 30.000002), (50, 1, 1), (50, 1, -1), (50, 1, -30.000002), (50, 1, -40), (50, 2, -40), (50, 2, -50), (50, 2, 40), (-50, 1, -30.000002), (50, 1, -30.000002), (-50, 1, -1), (50, 1, -1), (-50, 1, 30.000002), (-50, 1, 1), (50, 1, 30.000002), (50, 1, 1), (-50, 1, 40), (50, 1, 40), (-50, 1, -40), (50, 1, -40), (-50, 1, 40), (50, 1, 40), (-50, 2, 40), (50, 2, 40), (50, 0, 50), (-50, 0, 50), (50, 2, 50), (-50, 2, 50), (50, 1, -40), (-50, 1, -40), (50, 2, -40), (-50, 2, -40), (-50, 0, -50), (-50, 0, 50), (50, 0, -50), (50, 0, 50), (-50, 2, 50), (-50, 2, 40), (50, 2, 50), (50, 2, 40), (-50, 0, -50), (50, 0, -50), (-50, 2, -50), (50, 2, -50), (-50, 2, -40), (-50, 2, -50), (50, 2, -40), (50, 2, -50), (-50, 2, -40), (-50, 1, -40), (-50, 2, -50), (-50, 0, -50), (-50, 1, -30.000002), (-50, 1, -1), (-50, 1, 1), (-50, 1, 30.000002), (-50, 1, 40), (-50, 0, 50), (-50, 2, 40), (-50, 2, 50), (50, 2, 50), (50, 1, 40), (50, 0, 50), (50, 0, -50), (50, 1, 30.000002), (50, 1, 1), (50, 1, -1), (50, 1, -30.000002), (50, 1, -40), (50, 2, -40), (50, 2, -50), (50, 2, 40), (-50, 1, -30.000002), (50, 1, -30.000002), (-50, 1, -1), (50, 1, -1), (-50, 1, 30.000002), (-50, 1, 1), (50, 1, 30.000002), (50, 1, 1), (-50, 1, 40), (50, 1, 40), (-50, 1, -40), (50, 1, -40)]
                texCoord2f[] primvars:st = [(19.68504, 0.78740156), (-19.68504, 0.39370078), (19.68504, 0.39370078), (-19.68504, 0.39370078), (19.68504, 0.78740156), (-19.68504, 0.78740156), (19.68504, 0.78740156), (-19.68504, 0), (19.68504, 0), (-19.68504, 0), (19.68504, 0.78740156), (-19.68504, 0.78740156), (19.68504, 0.78740156), (-19.68504, 0.39370078), (19.68504, 0.39370078), (-19.68504, 0.39370078), (19.68504, 0.78740156), (-19.68504, 0.78740156), (-19.68504, 19.68504), (19.68504, -19.68504), (19.68504, 19.68504), (19.68504, -19.68504), (-19.68504, 19.68504), (-19.68504, -19.68504), (19.68504, -19.68504), (-19.68504, -15.748032), (-19.68504, -19.68504), (-19.68504, -15.748032), (19.68504, -19.68504), (19.68504, -15.748032), (19.68504, 0.78740156), (-19.68504, 0), (19.68504, 0), (-19.68504, 0), (19.68504, 0.78740156), (-19.68504, 0.78740156), (19.68504, 15.748032), (-19.68504, 19.68504), (-19.68504, 15.748032), (-19.68504, 19.68504), (19.68504, 15.748032), (19.68504, 19.68504), (-19.68504, 0.78740156), (-15.748032, 0.39370078), (-15.748032, 0.78740156), (-19.68504, 0), (-15.748032, 0.39370078), (-19.68504, 0.78740156), (-19.68504, 0), (-11.811024, 0.39370078), (-15.748032, 0.39370078), (-19.68504, 0), (-0.39370078, 0.39370078), (-11.811024, 0.39370078), (-19.68504, 0), (0.39370078, 0.39370078), (-0.39370078, 0.39370078), (-19.68504, 0), (11.811024, 0.39370078), (0.39370078, 0.39370078), (-19.68504, 0), (15.748032, 0.39370078), (11.811024, 0.39370078), (19.68504, 0), (15.748032, 0.39370078), (-19.68504, 0), (19.68504, 0), (15.748032, 0.78740156), (15.748032, 0.39370078), (15.748032, 0.78740156), (19.68504, 0), (19.68504, 0.78740156), (-19.68504, 0), (-15.748032, 0.39370078), (-19.68504, 0.78740156), (-15.748032, 0.39370078), (-19.68504, 0), (19.68504, 0), (-15.748032, 0.39370078), (19.68504, 0), (-11.811024, 0.39370078), (-11.811024, 0.39370078), (19.68504, 0), (-0.39370078, 0.39370078), (-0.39370078, 0.39370078), (19.68504, 0), (0.39370078, 0.39370078), (0.39370078, 0.39370078), (19.68504, 0), (11.811024, 0.39370078), (11.811024, 0.39370078), (19.68504, 0), (15.748032, 0.39370078), (15.748032, 0.39370078), (19.68504, 0), (15.748032, 0.78740156), (15.748032, 0.78740156), (19.68504, 0), (19.68504, 0.78740156), (-15.748032, 0.78740156), (-19.68504, 0.78740156), (-15.748032, 0.39370078), (-19.68504, 0.39370078), (19.68504, 11.811024), (-19.68504, 11.811024), (19.68504, 11.811024), (-19.68504, 0.39370078), (19.68504, 0.39370078), (19.68504, -11.811024), (-19.68504, -0.39370084), (-19.68504, -11.811024), (-19.68504, -0.39370084), (19.68504, -11.811024), (19.68504, -0.39370084), (19.68504, -15.748032), (-19.68504, -11.811024), (-19.68504, -15.748032), (-19.68504, -11.811024), (19.68504, -15.748032), (19.68504, -11.811024), (19.68504, 11.811024), (-19.68504, 15.748032), (-19.68504, 11.811024), (-19.68504, 15.748032), (19.68504, 11.811024), (19.68504, 15.748032), (19.68504, -0.39370084), (-19.68504, 0.39370078), (-19.68504, -0.39370084), (-19.68504, 0.39370078), (19.68504, -0.39370084), (19.68504, 0.39370078)] (
                    interpolation = "faceVarying"
                )
                uniform token subdivisionScheme = "none"
                float3 xformOp:rotateXYZ = (0, 90, 0)
                float3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (450, 0, -250)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                def GeomSubset "pavement" (
                    apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    uniform token elementType = "face"
                    uniform token familyName = "materialBind"
                    int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
                    rel material:binding = </World/Looks/pavement> (
                        bindMaterialAs = "weakerThanDescendants"
                    )
                }

                def GeomSubset "asphalt" (
                    apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    uniform token elementType = "face"
                    uniform token familyName = "materialBind"
                    int[] indices = [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37]
                    rel material:binding = </World/Looks/asphalt> (
                        bindMaterialAs = "weakerThanDescendants"
                    )
                }

                def GeomSubset "asphaltEdge" (
                    apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    uniform token elementType = "face"
                    uniform token familyName = "materialBind"
                    int[] indices = [38, 39, 40, 41]
                    rel material:binding = </World/Looks/asphaltEdge> (
                        bindMaterialAs = "weakerThanDescendants"
                    )
                }

                def GeomSubset "line" (
                    apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    uniform token elementType = "face"
                    uniform token familyName = "materialBind"
                    int[] indices = [42, 43]
                    rel material:binding = </World/Looks/line> (
                        bindMaterialAs = "weakerThanDescendants"
                    )
                }
            }

            def Mesh "road_straight_59" (
                prepend specializes = </_osm_street_data>
            )
            {
                float3[] extent = [(-50, 0, -50), (50, 2, 50)]
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [2, 1, 0, 1, 2, 3, 6, 5, 4, 5, 6, 7, 10, 9, 8, 9, 10, 11, 14, 13, 12, 13, 14, 15, 18, 17, 16, 17, 18, 19, 22, 21, 20, 21, 22, 23, 26, 25, 24, 25, 26, 27, 94, 93, 92, 95, 93, 94, 95, 96, 93, 95, 97, 96, 95, 98, 97, 95, 99, 98, 95, 100, 99, 101, 100, 95, 101, 102, 100, 102, 101, 103, 106, 105, 104, 105, 106, 107, 105, 107, 108, 108, 107, 109, 109, 107, 110, 110, 107, 111, 111, 107, 112, 112, 107, 113, 113, 107, 114, 115, 104, 105, 118, 117, 116, 117, 118, 119, 122, 121, 120, 121, 122, 123, 189, 184, 188, 184, 189, 186, 181, 190, 180, 190, 181, 191, 251, 246, 249, 246, 251, 247]
                normal3f[] normals = [(0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0)] (
                    interpolation = "faceVarying"
                )
                custom int osm:street:maxspeed = 20
                point3f[] points = [(-50, 1, 40), (50, 1, 40), (-50, 2, 40), (50, 2, 40), (50, 0, 50), (-50, 0, 50), (50, 2, 50), (-50, 2, 50), (50, 1, -40), (-50, 1, -40), (50, 2, -40), (-50, 2, -40), (-50, 0, -50), (-50, 0, 50), (50, 0, -50), (50, 0, 50), (-50, 2, 50), (-50, 2, 40), (50, 2, 50), (50, 2, 40), (-50, 0, -50), (50, 0, -50), (-50, 2, -50), (50, 2, -50), (-50, 2, -40), (-50, 2, -50), (50, 2, -40), (50, 2, -50), (-50, 2, -40), (-50, 1, -40), (-50, 2, -50), (-50, 0, -50), (-50, 1, -30.000002), (-50, 1, -1), (-50, 1, 1), (-50, 1, 30.000002), (-50, 1, 40), (-50, 0, 50), (-50, 2, 40), (-50, 2, 50), (50, 2, 50), (50, 1, 40), (50, 0, 50), (50, 0, -50), (50, 1, 30.000002), (50, 1, 1), (50, 1, -1), (50, 1, -30.000002), (50, 1, -40), (50, 2, -40), (50, 2, -50), (50, 2, 40), (-50, 1, -30.000002), (50, 1, -30.000002), (-50, 1, -1), (50, 1, -1), (-50, 1, 30.000002), (-50, 1, 1), (50, 1, 30.000002), (50, 1, 1), (-50, 1, 40), (50, 1, 40), (-50, 1, -40), (50, 1, -40), (-50, 1, 40), (50, 1, 40), (-50, 2, 40), (50, 2, 40), (50, 0, 50), (-50, 0, 50), (50, 2, 50), (-50, 2, 50), (50, 1, -40), (-50, 1, -40), (50, 2, -40), (-50, 2, -40), (-50, 0, -50), (-50, 0, 50), (50, 0, -50), (50, 0, 50), (-50, 2, 50), (-50, 2, 40), (50, 2, 50), (50, 2, 40), (-50, 0, -50), (50, 0, -50), (-50, 2, -50), (50, 2, -50), (-50, 2, -40), (-50, 2, -50), (50, 2, -40), (50, 2, -50), (-50, 2, -40), (-50, 1, -40), (-50, 2, -50), (-50, 0, -50), (-50, 1, -30.000002), (-50, 1, -1), (-50, 1, 1), (-50, 1, 30.000002), (-50, 1, 40), (-50, 0, 50), (-50, 2, 40), (-50, 2, 50), (50, 2, 50), (50, 1, 40), (50, 0, 50), (50, 0, -50), (50, 1, 30.000002), (50, 1, 1), (50, 1, -1), (50, 1, -30.000002), (50, 1, -40), (50, 2, -40), (50, 2, -50), (50, 2, 40), (-50, 1, -30.000002), (50, 1, -30.000002), (-50, 1, -1), (50, 1, -1), (-50, 1, 30.000002), (-50, 1, 1), (50, 1, 30.000002), (50, 1, 1), (-50, 1, 40), (50, 1, 40), (-50, 1, -40), (50, 1, -40), (-50, 1, 40), (50, 1, 40), (-50, 2, 40), (50, 2, 40), (50, 0, 50), (-50, 0, 50), (50, 2, 50), (-50, 2, 50), (50, 1, -40), (-50, 1, -40), (50, 2, -40), (-50, 2, -40), (-50, 0, -50), (-50, 0, 50), (50, 0, -50), (50, 0, 50), (-50, 2, 50), (-50, 2, 40), (50, 2, 50), (50, 2, 40), (-50, 0, -50), (50, 0, -50), (-50, 2, -50), (50, 2, -50), (-50, 2, -40), (-50, 2, -50), (50, 2, -40), (50, 2, -50), (-50, 2, -40), (-50, 1, -40), (-50, 2, -50), (-50, 0, -50), (-50, 1, -30.000002), (-50, 1, -1), (-50, 1, 1), (-50, 1, 30.000002), (-50, 1, 40), (-50, 0, 50), (-50, 2, 40), (-50, 2, 50), (50, 2, 50), (50, 1, 40), (50, 0, 50), (50, 0, -50), (50, 1, 30.000002), (50, 1, 1), (50, 1, -1), (50, 1, -30.000002), (50, 1, -40), (50, 2, -40), (50, 2, -50), (50, 2, 40), (-50, 1, -30.000002), (50, 1, -30.000002), (-50, 1, -1), (50, 1, -1), (-50, 1, 30.000002), (-50, 1, 1), (50, 1, 30.000002), (50, 1, 1), (-50, 1, 40), (50, 1, 40), (-50, 1, -40), (50, 1, -40), (-50, 1, 40), (50, 1, 40), (-50, 2, 40), (50, 2, 40), (50, 0, 50), (-50, 0, 50), (50, 2, 50), (-50, 2, 50), (50, 1, -40), (-50, 1, -40), (50, 2, -40), (-50, 2, -40), (-50, 0, -50), (-50, 0, 50), (50, 0, -50), (50, 0, 50), (-50, 2, 50), (-50, 2, 40), (50, 2, 50), (50, 2, 40), (-50, 0, -50), (50, 0, -50), (-50, 2, -50), (50, 2, -50), (-50, 2, -40), (-50, 2, -50), (50, 2, -40), (50, 2, -50), (-50, 2, -40), (-50, 1, -40), (-50, 2, -50), (-50, 0, -50), (-50, 1, -30.000002), (-50, 1, -1), (-50, 1, 1), (-50, 1, 30.000002), (-50, 1, 40), (-50, 0, 50), (-50, 2, 40), (-50, 2, 50), (50, 2, 50), (50, 1, 40), (50, 0, 50), (50, 0, -50), (50, 1, 30.000002), (50, 1, 1), (50, 1, -1), (50, 1, -30.000002), (50, 1, -40), (50, 2, -40), (50, 2, -50), (50, 2, 40), (-50, 1, -30.000002), (50, 1, -30.000002), (-50, 1, -1), (50, 1, -1), (-50, 1, 30.000002), (-50, 1, 1), (50, 1, 30.000002), (50, 1, 1), (-50, 1, 40), (50, 1, 40), (-50, 1, -40), (50, 1, -40)]
                texCoord2f[] primvars:st = [(19.68504, 0.78740156), (-19.68504, 0.39370078), (19.68504, 0.39370078), (-19.68504, 0.39370078), (19.68504, 0.78740156), (-19.68504, 0.78740156), (19.68504, 0.78740156), (-19.68504, 0), (19.68504, 0), (-19.68504, 0), (19.68504, 0.78740156), (-19.68504, 0.78740156), (19.68504, 0.78740156), (-19.68504, 0.39370078), (19.68504, 0.39370078), (-19.68504, 0.39370078), (19.68504, 0.78740156), (-19.68504, 0.78740156), (-19.68504, 19.68504), (19.68504, -19.68504), (19.68504, 19.68504), (19.68504, -19.68504), (-19.68504, 19.68504), (-19.68504, -19.68504), (19.68504, -19.68504), (-19.68504, -15.748032), (-19.68504, -19.68504), (-19.68504, -15.748032), (19.68504, -19.68504), (19.68504, -15.748032), (19.68504, 0.78740156), (-19.68504, 0), (19.68504, 0), (-19.68504, 0), (19.68504, 0.78740156), (-19.68504, 0.78740156), (19.68504, 15.748032), (-19.68504, 19.68504), (-19.68504, 15.748032), (-19.68504, 19.68504), (19.68504, 15.748032), (19.68504, 19.68504), (-19.68504, 0.78740156), (-15.748032, 0.39370078), (-15.748032, 0.78740156), (-19.68504, 0), (-15.748032, 0.39370078), (-19.68504, 0.78740156), (-19.68504, 0), (-11.811024, 0.39370078), (-15.748032, 0.39370078), (-19.68504, 0), (-0.39370078, 0.39370078), (-11.811024, 0.39370078), (-19.68504, 0), (0.39370078, 0.39370078), (-0.39370078, 0.39370078), (-19.68504, 0), (11.811024, 0.39370078), (0.39370078, 0.39370078), (-19.68504, 0), (15.748032, 0.39370078), (11.811024, 0.39370078), (19.68504, 0), (15.748032, 0.39370078), (-19.68504, 0), (19.68504, 0), (15.748032, 0.78740156), (15.748032, 0.39370078), (15.748032, 0.78740156), (19.68504, 0), (19.68504, 0.78740156), (-19.68504, 0), (-15.748032, 0.39370078), (-19.68504, 0.78740156), (-15.748032, 0.39370078), (-19.68504, 0), (19.68504, 0), (-15.748032, 0.39370078), (19.68504, 0), (-11.811024, 0.39370078), (-11.811024, 0.39370078), (19.68504, 0), (-0.39370078, 0.39370078), (-0.39370078, 0.39370078), (19.68504, 0), (0.39370078, 0.39370078), (0.39370078, 0.39370078), (19.68504, 0), (11.811024, 0.39370078), (11.811024, 0.39370078), (19.68504, 0), (15.748032, 0.39370078), (15.748032, 0.39370078), (19.68504, 0), (15.748032, 0.78740156), (15.748032, 0.78740156), (19.68504, 0), (19.68504, 0.78740156), (-15.748032, 0.78740156), (-19.68504, 0.78740156), (-15.748032, 0.39370078), (-19.68504, 0.39370078), (19.68504, 11.811024), (-19.68504, 11.811024), (19.68504, 11.811024), (-19.68504, 0.39370078), (19.68504, 0.39370078), (19.68504, -11.811024), (-19.68504, -0.39370084), (-19.68504, -11.811024), (-19.68504, -0.39370084), (19.68504, -11.811024), (19.68504, -0.39370084), (19.68504, -15.748032), (-19.68504, -11.811024), (-19.68504, -15.748032), (-19.68504, -11.811024), (19.68504, -15.748032), (19.68504, -11.811024), (19.68504, 11.811024), (-19.68504, 15.748032), (-19.68504, 11.811024), (-19.68504, 15.748032), (19.68504, 11.811024), (19.68504, 15.748032), (19.68504, -0.39370084), (-19.68504, 0.39370078), (-19.68504, -0.39370084), (-19.68504, 0.39370078), (19.68504, -0.39370084), (19.68504, 0.39370078)] (
                    interpolation = "faceVarying"
                )
                uniform token subdivisionScheme = "none"
                float3 xformOp:rotateXYZ = (0, 90, 0)
                float3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (450, 0, -350)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                def GeomSubset "pavement" (
                    apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    uniform token elementType = "face"
                    uniform token familyName = "materialBind"
                    int[] indices = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
                    rel material:binding = </World/Looks/pavement> (
                        bindMaterialAs = "weakerThanDescendants"
                    )
                }

                def GeomSubset "asphalt" (
                    apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    uniform token elementType = "face"
                    uniform token familyName = "materialBind"
                    int[] indices = [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37]
                    rel material:binding = </World/Looks/asphalt> (
                        bindMaterialAs = "weakerThanDescendants"
                    )
                }

                def GeomSubset "asphaltEdge" (
                    apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    uniform token elementType = "face"
                    uniform token familyName = "materialBind"
                    int[] indices = [38, 39, 40, 41]
                    rel material:binding = </World/Looks/asphaltEdge> (
                        bindMaterialAs = "weakerThanDescendants"
                    )
                }

                def GeomSubset "line" (
                    apiSchemas = ["MaterialBindingAPI"]
                )
                {
                    uniform token elementType = "face"
                    uniform token familyName = "materialBind"
                    int[] indices = [42, 43]
                    rel material:binding = </World/Looks/line> (
                        bindMaterialAs = "weakerThanDescendants"
                    )
                }
            }
        }
    }

    def Scope "Looks"
    {
        def Material "pavement"
        {
            token outputs:displacement.connect = </World/Looks/pavement/pavement.outputs:displacement>
            token outputs:surface.connect = </World/Looks/pavement/pavement.outputs:surface>

            def Shader "pavement"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (0.75686276, 0.75686276, 0.8)
                float inputs:displacement = 0
                color3f inputs:emissiveColor = (0, 0, 0)
                float inputs:ior = 1.5
                float inputs:metallic = 1
                normal3f inputs:normal = (0, 0, 1)
                float inputs:occlusion = 1
                float inputs:opacity = 1
                float inputs:opacityThreshold = 0
                float inputs:roughness = 1
                int inputs:useSpecularWorkflow = 0
                token outputs:displacement
                token outputs:surface
            }
        }

        def Material "asphalt"
        {
            token outputs:displacement.connect = </World/Looks/asphalt/asphalt.outputs:displacement>
            token outputs:surface.connect = </World/Looks/asphalt/asphalt.outputs:surface>

            def Shader "asphalt"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (0.43137255, 0.45490196, 0.5294118)
                float inputs:displacement = 0
                color3f inputs:emissiveColor = (0, 0, 0)
                float inputs:ior = 1.5
                float inputs:metallic = 1
                normal3f inputs:normal = (0, 0, 1)
                float inputs:occlusion = 1
                float inputs:opacity = 1
                float inputs:opacityThreshold = 0
                float inputs:roughness = 1
                int inputs:useSpecularWorkflow = 0
                token outputs:displacement
                token outputs:surface
            }
        }

        def Material "asphaltEdge"
        {
            token outputs:displacement.connect = </World/Looks/asphaltEdge/asphaltEdge.outputs:displacement>
            token outputs:surface.connect = </World/Looks/asphaltEdge/asphaltEdge.outputs:surface>

            def Shader "asphaltEdge"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (0.32156864, 0.3372549, 0.39607844)
                float inputs:displacement = 0
                color3f inputs:emissiveColor = (0, 0, 0)
                float inputs:ior = 1.5
                float inputs:metallic = 1
                normal3f inputs:normal = (0, 0, 1)
                float inputs:occlusion = 1
                float inputs:opacity = 1
                float inputs:opacityThreshold = 0
                float inputs:roughness = 1
                int inputs:useSpecularWorkflow = 0
                token outputs:displacement
                token outputs:surface
            }
        }

        def Material "line"
        {
            token outputs:displacement.connect = </World/Looks/line/line.outputs:displacement>
            token outputs:surface.connect = </World/Looks/line/line.outputs:surface>

            def Shader "line"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (0.54901963, 0.5764706, 0.6784314)
                float inputs:displacement = 0
                color3f inputs:emissiveColor = (0, 0, 0)
                float inputs:ior = 1.5
                float inputs:metallic = 1
                normal3f inputs:normal = (0, 0, 1)
                float inputs:occlusion = 1
                float inputs:opacity = 1
                float inputs:opacityThreshold = 0
                float inputs:roughness = 1
                int inputs:useSpecularWorkflow = 0
                token outputs:displacement
                token outputs:surface
            }
        }

        def Material "material_defaultMat"
        {
            token outputs:displacement.connect = </World/Looks/material_defaultMat/material_defaultMat.outputs:displacement>
            token outputs:surface.connect = </World/Looks/material_defaultMat/material_defaultMat.outputs:surface>

            def Shader "material_defaultMat"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (1, 1, 1)
                float inputs:displacement = 0
                color3f inputs:emissiveColor = (0, 0, 0)
                float inputs:ior = 1.5
                float inputs:metallic = 0
                normal3f inputs:normal = (0, 0, 1)
                float inputs:occlusion = 1
                float inputs:opacity = 1
                float inputs:opacityThreshold = 0
                float inputs:roughness = 1
                int inputs:useSpecularWorkflow = 0
                token outputs:displacement
                token outputs:surface
            }
        }
    }

    def "street_lamp_dbl_01" (
        prepend references = @./street_lamp_dbl.usd@
    )
    {
        float3 xformOp:rotateXYZ = (0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (512.1023423766064, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
    }

    def "street_lamp_dbl_02" (
        prepend references = @./street_lamp_dbl.usd@
    )
    {
        float3 xformOp:rotateXYZ = (0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (384.3780214171722, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
    }

    def "street_lamp_dbl_03" (
        prepend references = @./street_lamp_dbl.usd@
    )
    {
        float3 xformOp:rotateXYZ = (0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (267.62295004770556, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
    }

    def "street_lamp_dbl_04" (
        prepend references = @./street_lamp_dbl.usd@
    )
    {
        float3 xformOp:rotateXYZ = (0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (145.65386937379265, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
    }
}

class "_osm_street_data"
{
    custom int osm:street:maxspeed = 30
}

